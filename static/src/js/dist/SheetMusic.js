/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/JZZ.js":
/*!***********************!*\
  !*** ./src/js/JZZ.js ***!
  \***********************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("(function(global, factory) {\n  /* istanbul ignore next */\n  if (true) {\n    module.exports = factory();\n  }\n  else {}\n})(this, function() {\n\n  var _scope = typeof window === 'undefined' ? __webpack_require__.g : window;\n  var _version = '1.5.9';\n  var i, j, k, m, n;\n\n  /* istanbul ignore next */\n  var _time = Date.now || function () { return new Date().getTime(); };\n  var _startTime = _time();\n  /* istanbul ignore next */\n  var _now = typeof performance != 'undefined' && performance.now ?\n    function() { return performance.now(); } : function() { return _time() - _startTime; };\n  var _schedule = function(f) {\n    setTimeout(f, 0);\n  };\n  function _nop() {}\n  function _func(f) { return typeof f == 'function'; }\n\n  // _R: common root for all async objects\n  function _R() {\n    this._orig = this;\n    this._ready = false;\n    this._queue = [];\n    this._log = [];\n  }\n  _R.prototype._exec = function() {\n    while (this._ready && this._queue.length) {\n      var x = this._queue.shift();\n      x[0].apply(this, x[1]);\n    }\n  };\n  _R.prototype._push = function(func, arg) { this._queue.push([func, arg]); _R.prototype._exec.apply(this); };\n  _R.prototype._slip = function(func, arg) { this._queue.unshift([func, arg]); };\n  _R.prototype._pause = function() { this._ready = false; };\n  _R.prototype._resume = function() { this._ready = true; _R.prototype._exec.apply(this); };\n  _R.prototype._break = function(err) { this._orig._bad = true; this._orig._log.push(err || 'Unknown JZZ error'); };\n  _R.prototype._repair = function() { this._orig._bad = false; };\n  _R.prototype._crash = function(err) { this._break(err); this._resume(); };\n  _R.prototype._err = function() { return this._log[this._log.length - 1]; };\n  _R.prototype.log = function() { return _clone(this._log); };\n  _R.prototype._dup = function() {\n    var F = function() {};\n    F.prototype = this._orig;\n    var ret = new F();\n    ret._ready = false;\n    ret._queue = [];\n    return ret;\n  };\n  _R.prototype._image = function() { return this._dup(); };\n  _R.prototype._thenable = function() {\n    if (this.then) return this;\n    var self = this;\n    var F = function() {}; F.prototype = self;\n    var ret = new F();\n    ret.then = function(good, bad) { self._push(_then, [good, bad]); return this; };      \n    return ret;\n  };\n  function _then(good, bad) {\n    if (this._bad) {\n      if (_func(bad)) bad.apply(this, [new Error(this._err())]);\n    }\n    else {\n      if (_func(good)) good.apply(this, [this]);\n    }\n  }\n  function _wait(obj, delay) {\n    if (this._bad) obj._crash(this._err());\n    else setTimeout(function() { obj._resume(); }, delay);\n  }\n  _R.prototype.wait = function(delay) {\n    if (!delay) return this;\n    var ret = this._image();\n    this._push(_wait, [ret, delay]);\n    return ret._thenable();\n  };\n  function _kick(obj) { if (this._bad) obj._break(this._err()); obj._resume(); }\n  function _rechain(self, obj, name) {\n    self[name] = function() {\n      var arg = arguments;\n      var ret = obj._image();\n      this._push(_kick, [ret]);\n      return ret[name].apply(ret, arg);\n    };\n  }\n  function _and(q) {\n    if (!this._bad) {\n      if (_func(q)) q.apply(this); else console.log(q);\n    }\n  }\n  _R.prototype.and = function(func) { this._push(_and, [func]); return this._thenable(); };\n  function _or(q) {\n    if (this._bad) {\n      if (_func(q)) q.apply(this); else console.log(q);\n    }\n  }\n  _R.prototype.or = function(func) { this._push(_or, [func]); return this._thenable(); };\n\n  _R.prototype._info = {};\n  _R.prototype.info = function() {\n    var info = _clone(this._orig._info);\n    if (typeof info.engine == 'undefined') info.engine = 'none';\n    if (typeof info.sysex == 'undefined') info.sysex = true;\n    return info;\n  };\n  _R.prototype.name = function() { return this.info().name; };\n\n  function _close(obj) {\n    if (this._bad) obj._crash(this._err());\n    else {\n      this._break('Closed');\n      obj._resume();\n    }\n  }\n  _R.prototype.close = function() {\n    var ret = new _R();\n    if (this._close) this._push(this._close, []);\n    this._push(_close, [ret]);\n    return ret._thenable();\n  };\n\n  function _tryAny(arr) {\n    if (!arr.length) {\n      this._break();\n      return;\n    }\n    var func = arr.shift();\n    if (arr.length) {\n      var self = this;\n      this._slip(_or, [ function() { _tryAny.apply(self, [arr]); } ]);\n    }\n    try {\n      this._repair();\n      func.apply(this);\n    }\n    catch (err) {\n      this._break(err.toString());\n    }\n  }\n\n  function _push(arr, obj) {\n    for (var i = 0; i < arr.length; i++) if (arr[i] === obj) return;\n    arr.push(obj);\n  }\n  function _pop(arr, obj) {\n    for (var i = 0; i < arr.length; i++) if (arr[i] === obj) {\n      arr.splice(i, 1);\n      return;\n    }\n  }\n\n  // _J: JZZ object\n  function _J() {\n    _R.apply(this);\n  }\n  _J.prototype = new _R();\n\n  function _for(x, f) {\n    for(var k in x) if (x.hasOwnProperty(k)) f.call(this, k);\n  }\n  function _clone(obj, key, val) {\n    if (typeof key == 'undefined') return _clone(obj, [], []);\n    if (obj instanceof Object) {\n      for (var i = 0; i < key.length; i++) if (key[i] === obj) return val[i];\n      var ret;\n      if (obj instanceof Array) ret = []; else ret = {};\n      key.push(obj); val.push(ret);\n      _for(obj, function(k) { ret[k] = _clone(obj[k], key, val); });\n      return ret;\n    }\n    return obj;\n  }\n  _J.prototype._info = { name: 'JZZ.js', ver: _version, version: _version, inputs: [], outputs: [] };\n\n  var _outs = [];\n  var _ins = [];\n  var _outsW = [];\n  var _insW = [];\n\n  function _postRefresh() {\n    _jzz._info.engine = _engine._type;\n    _jzz._info.version = _engine._version;\n    _jzz._info.sysex = _engine._sysex;\n    _jzz._info.inputs = [];\n    _jzz._info.outputs = [];\n    _outs = [];\n    _ins = [];\n    _engine._allOuts = {};\n    _engine._allIns = {};\n    var i, x;\n    for (i = 0; i < _engine._outs.length; i++) {\n      x = _engine._outs[i];\n      x.engine = _engine;\n      _engine._allOuts[x.name] = x;\n      _jzz._info.outputs.push({\n        id: x.name,\n        name: x.name,\n        manufacturer: x.manufacturer,\n        version: x.version,\n        engine: _engine._type\n      });\n      _outs.push(x);\n    }\n    for (i = 0; i < _virtual._outs.length; i++) {\n      x = _virtual._outs[i];\n      _jzz._info.outputs.push({\n        id: x.name,\n        name: x.name,\n        manufacturer: x.manufacturer,\n        version: x.version,\n        engine: x.type\n      });\n      _outs.push(x);\n    }\n    for (i = 0; i < _engine._ins.length; i++) {\n      x = _engine._ins[i];\n      x.engine = _engine;\n      _engine._allIns[x.name] = x;\n      _jzz._info.inputs.push({\n        id: x.name,\n        name: x.name,\n        manufacturer: x.manufacturer,\n        version: x.version,\n        engine: _engine._type\n      });\n      _ins.push(x);\n    }\n    for (i = 0; i < _virtual._ins.length; i++) {\n      x = _virtual._ins[i];\n      _jzz._info.inputs.push({\n        id: x.name,\n        name: x.name,\n        manufacturer: x.manufacturer,\n        version: x.version,\n        engine: x.type\n      });\n      _ins.push(x);\n    }\n    if (_jzz._watcher && _jzz._watcher._handles.length) {\n      var diff = _diff(_insW, _outsW, _jzz._info.inputs, _jzz._info.outputs);\n       if (diff) {\n        for (j = 0; j < diff.inputs.removed.length; j++) {\n          x = _engine._inMap[diff.inputs.removed[j].name];\n          if (x) x._closeAll();\n        }\n        for (j = 0; j < diff.outputs.removed.length; j++) {\n          x = _engine._outMap[diff.outputs.removed[j].name];\n          if (x) x._closeAll();\n        }\n        _fireW(diff);\n      }\n    }\n    _insW = _jzz._info.inputs;\n    _outsW = _jzz._info.outputs;\n  }\n  function _refresh() {\n    if (!this._bad) _engine._refresh(this);\n  }\n  _J.prototype.refresh = function() {\n    this._push(_refresh, []);\n    return this._thenable();\n  };\n\n  function _filterList(q, arr) {\n    var i, n;\n    if (_func(q)) q = q(arr);\n    if (!(q instanceof Array)) q = [q];\n    var before = [];\n    var after = [];\n    var etc = arr.slice();\n    var a = before;\n    for (i = 0; i < q.length; i++) {\n      if (typeof q[i] == 'undefined') a = after;\n      else if (q[i] instanceof RegExp) for (n = 0; n < etc.length; n++) {\n        if (q[i].test(etc[n].name)) {\n          a.push(etc[n]);\n          etc.splice(n, 1);\n          n--;\n        }\n      }\n      else {\n        for (n = 0; n < etc.length; n++) if (q[i] + '' === n + '' || q[i] === etc[n].name || (q[i] instanceof Object && q[i].name === etc[n].name)) {\n          a.push(etc[n]);\n          etc.splice(n, 1);\n          n--;\n        }\n      }\n    }\n    return a == before ? before : before.concat(etc).concat(after);\n  }\n\n  function _notFound(port, q) {\n    var msg;\n    if (q instanceof RegExp) msg = 'Port matching ' + q + ' not found';\n    else if (q instanceof Object || typeof q == 'undefined') msg = 'Port not found';\n    else msg = 'Port \"' + q + '\" not found';\n    port._crash(msg);\n  }\n  function _openMidiOut(port, arg) {\n    if (this._bad) port._crash(this._err());\n    else {\n      var arr = _filterList(arg, _outs);\n      if (!arr.length) { _notFound(port, arg); return; }\n      var pack = function(x) { return function() { x.engine._openOut(this, x.name); }; };\n      for (var i = 0; i < arr.length; i++) arr[i] = pack(arr[i]);\n      port._slip(_tryAny, [arr]);\n      port._resume();\n    }\n  }\n  _J.prototype.openMidiOut = function(arg) {\n    var port = new _M();\n    this._push(_refresh, []);\n    this._push(_openMidiOut, [port, arg]);\n    return port._thenable();\n  };\n  _J.prototype._openMidiOutNR = function(arg) {\n    var port = new _M();\n    this._push(_openMidiOut, [port, arg]);\n    return port._thenable();\n  };\n\n  function _openMidiIn(port, arg) {\n    if (this._bad) port._crash(this._err());\n    else {\n      var arr = _filterList(arg, _ins);\n      if (!arr.length) { _notFound(port, arg); return; }\n      var pack = function(x) { return function() { x.engine._openIn(this, x.name); }; };\n      for (var i = 0; i < arr.length; i++) arr[i] = pack(arr[i]);\n      port._slip(_tryAny, [arr]);\n      port._resume();\n    }\n  }\n  _J.prototype.openMidiIn = function(arg) {\n    var port = new _M();\n    this._push(_refresh, []);\n    this._push(_openMidiIn, [port, arg]);\n    return port._thenable();\n  };\n  _J.prototype._openMidiInNR = function(arg) {\n    var port = new _M();\n    this._push(_openMidiIn, [port, arg]);\n    return port._thenable();\n  };\n\n  function _onChange(watcher, arg) {\n    if (this._bad) watcher._crash();\n    else {\n      watcher._slip(_connectW, [arg]);\n      watcher._resume();\n    }\n  }\n  _J.prototype.onChange = function(arg) {\n    if (!this._orig._watcher) this._orig._watcher = new _W();\n    var watcher = this._orig._watcher._image();\n    this._push(_onChange, [watcher, arg]);\n    return watcher._thenable();\n  };\n\n  _J.prototype._close = function() {\n    _engine._close();\n  };\n\n  // _M: MIDI-In/Out object\n  function _M() {\n    _R.apply(this);\n    this._handles = [];\n    this._outs = [];\n  }\n  _M.prototype = new _R();\n  _M.prototype._filter = function(msg) {\n    if (this._orig._mpe) {\n      var out;\n      var outs = 0;\n      if (this._handles && this._handles.length) {\n        outs = this._handles.length;\n        out = this._handles[0];\n      }\n      if (this._outs && this._outs.length) {\n        outs = this._outs.length;\n        out = this._outs[0];\n      }\n      if (outs == 1 && !out._mpe) {\n        msg = this._orig._mpe.filter(msg);\n      }\n    }\n    return msg;\n  };\n  _M.prototype._receive = function(msg) { this._emit(this._filter(msg)); };\n  function _receive(msg) { if (!this._bad) this._receive(msg); }\n  _M.prototype.send = function() {\n    this._push(_receive, [MIDI.apply(null, arguments)]);\n    return this._thenable();\n  };\n  _M.prototype.note = function(c, n, v, t) {\n    this.noteOn(c, n, v);\n    if (typeof this._ch == 'undefined' && typeof this._master == 'undefined') {\n      if (t > 0) this.wait(t).noteOff(c, n);\n    }\n    else {\n      if (v > 0) this.wait(v).noteOff(c);\n    }\n    return this._thenable();\n  };\n  _M.prototype._emit = function(msg) {\n    var i;\n    for (i = 0; i < this._handles.length; i++) this._handles[i].apply(this, [MIDI(msg)._stamp(this)]);\n    for (i = 0; i < this._outs.length; i++) {\n      var m = MIDI(msg);\n      if (!m._stamped(this._outs[i])) this._outs[i].send(m._stamp(this));\n    }\n  };\n  function _emit(msg) { this._emit(msg); }\n  _M.prototype.emit = function(msg) {\n    this._push(_emit, [msg]);\n    return this._thenable();\n  };\n  function _connect(arg) {\n    if (_func(arg)) _push(this._orig._handles, arg);\n    else _push(this._orig._outs, arg);\n  }\n  function _disconnect(arg) {\n    if (typeof arg == 'undefined') {\n      this._orig._handles = [];\n      this._orig._outs = [];\n    }\n    else if (_func(arg)) _pop(this._orig._handles, arg);\n    else _pop(this._orig._outs, arg);\n  }\n  _M.prototype.connect = function(arg) {\n    this._push(_connect, [arg]);\n    return this._thenable();\n  };\n  _M.prototype.disconnect = function(arg) {\n    this._push(_disconnect, [arg]);\n    return this._thenable();\n  };\n  _M.prototype.connected = function() {\n    return this._orig._handles.length + this._orig._outs.length;\n  };\n  _M.prototype._image = function() {\n    var dup = this._dup();\n    dup._ch = this._ch;\n    dup._sxid = this._sxid;\n    dup._master = this._master;\n    dup._band = this._band;\n    return dup;\n  };\n  _M.prototype._ch = undefined;\n  _M.prototype._sxid = 0x7f;\n  _M.prototype._master = undefined;\n  _M.prototype._band = undefined;\n\n  _M.prototype.sxId = function(id) {\n    if (typeof id == 'undefined') id = _M.prototype._sxid;\n    if (id == this._sxid) return this._thenable();\n    id = _7b(id);\n    var img = this._image();\n    img._sxid = id;\n    this._push(_kick, [img]);\n    return img._thenable();\n  };\n  _M.prototype.ch = function(c) {\n    if (c == this._ch || typeof c == 'undefined' && typeof this._ch == 'undefined') return this._thenable();\n    var img = this._image();\n    if (typeof c != 'undefined') c = _ch(c);\n    img._ch = c;\n    img._master = undefined;\n    img._band = undefined;\n    this._push(_kick, [img]);\n    return img._thenable();\n  };\n\n  function _mpe(m, n) {\n    if (!this._orig._mpe) this._orig._mpe = new MPE();\n    this._orig._mpe.setup(m, n);\n  }\n  _M.prototype.mpe = function(m, n) {\n    if (m == this._master && n == this._band || typeof m == 'undefined' && typeof this._master == 'undefined') return this._thenable();\n    if (typeof m != 'undefined') MPE.validate(m, n);\n    if (!n) return this.ch(m);\n    var img = this._image();\n    img._ch = undefined;\n    img._master = m;\n    img._band = n;\n    this._push(_mpe, [m, n]);\n    this._push(_kick, [img]);\n    return img._thenable();\n  };\n  function _validateChannel(c) {\n    if (c != parseInt(c) || c < 0 || c > 15)\n      throw RangeError('Bad channel value (must not be less than 0 or more than 15): ' + c);\n  }\n\n  // _W: Watcher object ~ MIDIAccess.onstatechange\n  function _W() {\n    _R.apply(this);\n    this._handles = [];\n    _rechain(this, _jzz, 'refresh');\n    _rechain(this, _jzz, 'openMidiOut');\n    _rechain(this, _jzz, 'openMidiIn');\n    _rechain(this, _jzz, 'onChange');\n    _rechain(this, _jzz, 'close');\n  }\n  _W.prototype = new _R();\n  function _connectW(arg) {\n    if (_func(arg)) {\n      if (!this._orig._handles.length) _engine._watch();\n      _push(this._orig._handles, arg);\n    }\n  }\n  function _disconnectW(arg) {\n    if (typeof arg == 'undefined') this._orig._handles = [];\n    else _pop(this._orig._handles, arg);\n    if (!this._orig._handles.length) _engine._unwatch();\n  }\n  _W.prototype.connect = function(arg) {\n    this._push(_connectW, [arg]);\n    return this._thenable();\n  };\n  _W.prototype.disconnect = function(arg) {\n    this._push(_disconnectW, [arg]);\n    return this._thenable();\n  };\n  function _changed(x0, y0, x1, y1) {\n    var i;\n    if (x0.length != x1.length || y0.length != y1.length) return true;\n    for (i = 0; i < x0.length; i++) if (x0[i].name != x1[i].name) return true;\n    for (i = 0; i < y0.length; i++) if (y0[i].name != y1[i].name) return true;\n    return false;\n  }\n  function _diff(x0, y0, x1, y1) {\n    if (!_changed(x0, y0, x1, y1)) return;\n    var ax = []; // added\n    var ay = [];\n    var rx = []; // removed\n    var ry = [];\n    var i;\n    var h = {};\n    for (i = 0; i < x0.length; i++) h[x0[i].name] = true;\n    for (i = 0; i < x1.length; i++) if (!h[x1[i].name]) ax.push(x1[i]);\n    h = {};\n    for (i = 0; i < x1.length; i++) h[x1[i].name] = true;\n    for (i = 0; i < x0.length; i++) if (!h[x0[i].name]) rx.push(x0[i]);\n    h = {};\n    for (i = 0; i < y0.length; i++) h[y0[i].name] = true;\n    for (i = 0; i < y1.length; i++) if (!h[y1[i].name]) ay.push(y1[i]);\n    h = {};\n    for (i = 0; i < y1.length; i++) h[y1[i].name] = true;\n    for (i = 0; i < y0.length; i++) if (!h[y0[i].name]) ry.push(y0[i]);\n    return { inputs: { added: ax, removed: rx }, outputs: { added: ay, removed: ry } };\n  }\n  function _fireW(arg) {\n    for (i = 0; i < _jzz._watcher._handles.length; i++) _jzz._watcher._handles[i].apply(_jzz, [arg]);\n  }\n\n  var _jzz;\n  var _engine = { _outs: [], _ins: [] };\n  var _virtual = { _outs: [], _ins: [] };\n\n  // // Node.js\n  // function _tryNODE() {\n  //   if (typeof module != 'undefined' && module.exports) {\n  //     var jazzmidi = require('jazz-midi');\n  //     if (jazzmidi) {\n  //       _initNode(jazzmidi);\n  //       return;\n  //     }\n  //   }\n  //   this._break();\n  // }\n  // Jazz-Plugin\n  function _tryJazzPlugin() {\n    var div = document.createElement('div');\n    div.style.visibility = 'hidden';\n    document.body.appendChild(div);\n    var obj = document.createElement('object');\n    obj.style.visibility = 'hidden';\n    obj.style.width = '0px'; obj.style.height = '0px';\n    obj.classid = 'CLSID:1ACE1618-1C7D-4561-AEE1-34842AA85E90';\n    obj.type = 'audio/x-jazz';\n    document.body.appendChild(obj);\n    /* istanbul ignore next */\n    if (obj.isJazz) {\n      _initJazzPlugin(obj);\n      return;\n    }\n    this._break();\n  }\n\n  // Web MIDI API\n  var _navigator;\n  var _requestMIDIAccess;\n  function _findMidiAccess() {\n    if (typeof navigator !== 'undefined' && navigator.requestMIDIAccess) {\n      _navigator = navigator;\n      _requestMIDIAccess = navigator.requestMIDIAccess;\n      try {\n        if (_requestMIDIAccess.toString().indexOf('JZZ(') != -1) _requestMIDIAccess = undefined;\n      }\n      catch (err) {}\n    }\n  }\n  function _tryWebMIDI() {\n    _findMidiAccess();\n    if (_requestMIDIAccess) {\n      var self = this;\n      var onGood = function(midi) {\n        _initWebMIDI(midi);\n        self._resume();\n      };\n      var onBad = function(msg) {\n        self._crash(msg);\n      };\n      var opt = {};\n      _requestMIDIAccess.call(_navigator, opt).then(onGood, onBad);\n      this._pause();\n      return;\n    }\n    this._break();\n  }\n  function _tryWebMIDIsysex() {\n    _findMidiAccess();\n    if (_requestMIDIAccess) {\n      var self = this;\n      var onGood = function(midi) {\n        _initWebMIDI(midi, true);\n        self._resume();\n      };\n      var onBad = function(msg) {\n        self._crash(msg);\n      };\n      var opt = { sysex:true };\n      _requestMIDIAccess.call(_navigator, opt).then(onGood, onBad);\n      this._pause();\n      return;\n    }\n    this._break();\n  }\n\n  // Web-extension\n  function _tryCRX() {\n    var self = this;\n    var inst;\n    var msg;\n    function eventHandle(evt) {\n      inst = true;\n      var a = evt.detail;\n      if (!a) {\n        if (!msg) msg = document.getElementById('jazz-midi-msg');\n        if (!msg) return;\n        try { a = JSON.parse(msg.innerText); } catch (err) {}\n        msg.innerText = '';\n      }\n      document.removeEventListener('jazz-midi-msg', eventHandle);\n      if (a[0] === 'version') {\n        _initCRX(msg, a[2]);\n        self._resume();\n      }\n      else {\n        self._crash();\n      }\n    }\n    this._pause();\n    try {\n      document.addEventListener('jazz-midi-msg', eventHandle);\n      document.dispatchEvent(new Event('jazz-midi'));\n    }\n    catch (err) {}\n    setTimeout(function() { if (!inst) self._crash(); }, 50);\n  }\n\n  /* istanbul ignore next */\n  function _zeroBreak() {\n    this._pause();\n    var self = this;\n    _schedule(function() { self._crash(); });\n  }\n\n  function _filterEngines(opt) {\n    var ret = [];\n    var arr = _filterEngineNames(opt);\n    for (var i = 0; i < arr.length; i++) {\n      if (arr[i] == 'webmidi') {\n        if (opt && opt.sysex === true) ret.push(_tryWebMIDIsysex);\n        if (!opt || opt.sysex !== true || opt.degrade === true) ret.push(_tryWebMIDI);\n      }\n      //else if (arr[i] == 'node') { ret.push(_tryNODE); ret.push(_zeroBreak); }\n      else if (arr[i] == 'extension') ret.push(_tryCRX);\n      else if (arr[i] == 'plugin') ret.push(_tryJazzPlugin);\n    }\n    ret.push(_initNONE);\n    return ret;\n  }\n\n  function _filterEngineNames(opt) {\n    var web = ['node', 'extension', 'plugin', 'webmidi'];\n    if (!opt || !opt.engine) return web;\n    var arr = opt.engine instanceof Array ? opt.engine : [opt.engine];\n    var dup = {};\n    var none;\n    var etc;\n    var head = [];\n    var tail = [];\n    var i;\n    for (i = 0; i < arr.length; i++) {\n      var name = arr[i].toString().toLowerCase();\n      if (dup[name]) continue;\n      dup[name] = true;\n      if (name === 'none') none = true;\n      if (name === 'etc' || typeof name == 'undefined') etc = true;\n      if (etc) tail.push(name); else head.push(name);\n      _pop(web, name);\n    }\n    if (etc || head.length || tail.length) none = false;\n    return none ? [] : head.concat(etc ? web : tail);\n  }\n\n  function _initJZZ(opt) {\n    _jzz = new _J();\n    _jzz._options = opt;\n    _jzz._push(_tryAny, [_filterEngines(opt)]);\n    _jzz.refresh();\n    _jzz._resume();\n  }\n\n  function _initNONE() {\n    _engine._type = 'none';\n    _engine._version = _version;\n    _engine._sysex = true;\n    _engine._outs = [];\n    _engine._ins = [];\n    _engine._refresh = function() { _postRefresh(); };\n    _engine._watch = _nop;\n    _engine._unwatch = _nop;\n    _engine._close = _nop;\n  }\n  // common initialization for Jazz-Plugin and jazz-midi\n  function _initEngineJP() {\n    _engine._inArr = [];\n    _engine._outArr = [];\n    _engine._inMap = {};\n    _engine._outMap = {};\n    _engine._outsW = [];\n    _engine._insW = [];\n    _engine._version = _engine._main.version;\n    _engine._sysex = true;\n    var watcher;\n    function _closeAll() {\n      for (var i = 0; i < this.clients.length; i++) this._close(this.clients[i]);\n    }\n    _engine._refresh = function() {\n      _engine._outs = [];\n      _engine._ins = [];\n      var i, x;\n      for (i = 0; (x = _engine._main.MidiOutInfo(i)).length; i++) {\n        _engine._outs.push({ type: _engine._type, name: x[0], manufacturer: x[1], version: x[2] });\n      }\n      for (i = 0; (x = _engine._main.MidiInInfo(i)).length; i++) {\n        _engine._ins.push({ type: _engine._type, name: x[0], manufacturer: x[1], version: x[2] });\n      }\n      _postRefresh();\n    };\n    _engine._openOut = function(port, name) {\n      var impl = _engine._outMap[name];\n      if (!impl) {\n        if (_engine._pool.length <= _engine._outArr.length) _engine._pool.push(_engine._newPlugin());\n        impl = {\n          name: name,\n          clients: [],\n          info: {\n            name: name,\n            manufacturer: _engine._allOuts[name].manufacturer,\n            version: _engine._allOuts[name].version,\n            type: 'MIDI-out',\n            sysex: _engine._sysex,\n            engine: _engine._type\n          },\n          _close: function(port) { _engine._closeOut(port); },\n          _closeAll: _closeAll,\n          _receive: function(a) { if (a.length) this.plugin.MidiOutRaw(a.slice()); }\n        };\n        var plugin = _engine._pool[_engine._outArr.length];\n        impl.plugin = plugin;\n        _engine._outArr.push(impl);\n        _engine._outMap[name] = impl;\n      }\n      if (!impl.open) {\n        var s = impl.plugin.MidiOutOpen(name);\n        if (s !== name) {\n          if (s) impl.plugin.MidiOutClose();\n          port._break(); return;\n        }\n        impl.open = true;\n      }\n      port._orig._impl = impl;\n      _push(impl.clients, port._orig);\n      port._info = impl.info;\n      port._receive = function(arg) { impl._receive(arg); };\n      port._close = function() { impl._close(this); };\n    };\n    _engine._openIn = function(port, name) {\n      var impl = _engine._inMap[name];\n      if (!impl) {\n        if (_engine._pool.length <= _engine._inArr.length) _engine._pool.push(_engine._newPlugin());\n        impl = {\n          name: name,\n          clients: [],\n          info: {\n            name: name,\n            manufacturer: _engine._allIns[name].manufacturer,\n            version: _engine._allIns[name].version,\n            type: 'MIDI-in',\n            sysex: _engine._sysex,\n            engine: _engine._type\n          },\n          _close: function(port) { _engine._closeIn(port); },\n          _closeAll: _closeAll,\n          handle: function(t, a) {\n            for (var i = 0; i < this.clients.length; i++) {\n              var msg = MIDI(a);\n              this.clients[i]._emit(msg);\n            }\n          }\n        };\n        var makeHandle = function(x) { return function(t, a) { x.handle(t, a); }; };\n        impl.onmidi = makeHandle(impl);\n        var plugin = _engine._pool[_engine._inArr.length];\n        impl.plugin = plugin;\n        _engine._inArr.push(impl);\n        _engine._inMap[name] = impl;\n      }\n      if (!impl.open) {\n        var s = impl.plugin.MidiInOpen(name, impl.onmidi);\n        if (s !== name) {\n          if (s) impl.plugin.MidiInClose();\n          port._break(); return;\n        }\n        impl.open = true;\n      }\n      port._orig._impl = impl;\n      _push(impl.clients, port._orig);\n      port._info = impl.info;\n      port._close = function() { impl._close(this); };\n    };\n    _engine._closeOut = function(port) {\n      var impl = port._impl;\n      _pop(impl.clients, port._orig);\n      if (!impl.clients.length && impl.open) {\n        impl.open = false;\n        impl.plugin.MidiOutClose();\n      }\n    };\n    _engine._closeIn = function(port) {\n      var impl = port._impl;\n      _pop(impl.clients, port._orig);\n      if (!impl.clients.length && impl.open) {\n        impl.open = false;\n        impl.plugin.MidiInClose();\n      }\n    };\n    _engine._close = function() {\n      for (var i = 0; i < _engine._inArr.length; i++) if (_engine._inArr[i].open) _engine._inArr[i].plugin.MidiInClose();\n      _engine._unwatch();\n    };\n    _engine._watch = function() {\n      if (!watcher) watcher = setInterval(function() { _engine._refresh(); }, 250);\n    };\n    _engine._unwatch = function() {\n      if (watcher) clearInterval(watcher);\n      watcher = undefined;\n    };\n  }\n\n  function _initNode(obj) {\n    _engine._type = 'node';\n    _engine._main = obj;\n    _engine._pool = [];\n    _engine._newPlugin = function() { return new obj.MIDI(); };\n    _initEngineJP();\n  }\n  /* istanbul ignore next */\n  function _initJazzPlugin(obj) {\n    _engine._type = 'plugin';\n    _engine._main = obj;\n    _engine._pool = [obj];\n    _engine._newPlugin = function() {\n      var plg = document.createElement('object');\n      plg.style.visibility = 'hidden';\n      plg.style.width = '0px'; obj.style.height = '0px';\n      plg.classid = 'CLSID:1ACE1618-1C7D-4561-AEE1-34842AA85E90';\n      plg.type = 'audio/x-jazz';\n      document.body.appendChild(plg);\n      return plg.isJazz ? plg : undefined;\n    };\n    _initEngineJP();\n  }\n  function _initWebMIDI(access, sysex) {\n    _engine._type = 'webmidi';\n    _engine._version = 43;\n    _engine._sysex = !!sysex;\n    _engine._access = access;\n    _engine._inMap = {};\n    _engine._outMap = {};\n    _engine._outsW = [];\n    _engine._insW = [];\n    var watcher;\n    function _closeAll() {\n      for (var i = 0; i < this.clients.length; i++) this._close(this.clients[i]);\n    }\n    _engine._refresh = function() {\n      _engine._outs = [];\n      _engine._ins = [];\n      _engine._access.outputs.forEach(function(port) {\n        _engine._outs.push({type: _engine._type, name: port.name, manufacturer: port.manufacturer, version: port.version});\n      });\n      _engine._access.inputs.forEach(function(port) {\n        _engine._ins.push({type: _engine._type, name: port.name, manufacturer: port.manufacturer, version: port.version});\n      });\n      _postRefresh();\n    };\n    _engine._openOut = function(port, name) {\n      var impl = _engine._outMap[name];\n      if (!impl) {\n        impl = {\n          name: name,\n          clients: [],\n          info: {\n            name: name,\n            manufacturer: _engine._allOuts[name].manufacturer,\n            version: _engine._allOuts[name].version,\n            type: 'MIDI-out',\n            sysex: _engine._sysex,\n            engine: _engine._type\n          },\n          _close: function(port) { _engine._closeOut(port); },\n          _closeAll: _closeAll,\n          _receive: function(a) { if (impl.dev && a.length) this.dev.send(a.slice()); }\n        };\n      }\n      var found;\n      _engine._access.outputs.forEach(function(dev) {\n        if (dev.name === name) found = dev;\n      });\n      if (found) {\n        impl.dev = found;\n        _engine._outMap[name] = impl;\n        port._orig._impl = impl;\n        _push(impl.clients, port._orig);\n        port._info = impl.info;\n        port._receive = function(arg) { impl._receive(arg); };\n        port._close = function() { impl._close(this); };\n        if (impl.dev.open) {\n          port._pause();\n          impl.dev.open().then(function() {\n            port._resume();\n          }, function() {\n            port._crash();\n          });\n        }\n      }\n      else port._break();\n    };\n    _engine._openIn = function(port, name) {\n      var impl = _engine._inMap[name];\n      if (!impl) {\n        impl = {\n          name: name,\n          clients: [],\n          info: {\n            name: name,\n            manufacturer: _engine._allIns[name].manufacturer,\n            version: _engine._allIns[name].version,\n            type: 'MIDI-in',\n            sysex: _engine._sysex,\n            engine: _engine._type\n          },\n          _close: function(port) { _engine._closeIn(port); },\n          _closeAll: _closeAll,\n          handle: function(evt) {\n            for (var i = 0; i < this.clients.length; i++) {\n              var msg = MIDI([].slice.call(evt.data));\n              this.clients[i]._emit(msg);\n            }\n          }\n        };\n      }\n      var found;\n      _engine._access.inputs.forEach(function(dev) {\n        if (dev.name === name) found = dev;\n      });\n      if (found) {\n        impl.dev = found;\n        var makeHandle = function(x) { return function(evt) { x.handle(evt); }; };\n        impl.dev.onmidimessage = makeHandle(impl);\n        _engine._inMap[name] = impl;\n        port._orig._impl = impl;\n        _push(impl.clients, port._orig);\n        port._info = impl.info;\n        port._close = function() { impl._close(this); };\n        if (impl.dev.open) {\n          port._pause();\n          impl.dev.open().then(function() {\n            port._resume();\n          }, function() {\n            port._crash();\n          });\n        }\n      }\n      else port._break();\n    };\n    _engine._closeOut = function(port) {\n      var impl = port._impl;\n      _pop(impl.clients, port._orig);\n      if (!impl.clients.length) {\n        if (impl.dev && impl.dev.close) impl.dev.close();\n        impl.dev = undefined;\n      }\n    };\n    _engine._closeIn = function(port) {\n      var impl = port._impl;\n      _pop(impl.clients, port._orig);\n      if (!impl.clients.length) {\n        if (impl.dev) {\n          impl.dev.onmidimessage = null;\n          if (impl.dev.close) impl.dev.close();\n        }\n        impl.dev = undefined;\n      }\n    };\n    _engine._close = function() {\n      _engine._unwatch();\n    };\n    _engine._watch = function() {\n      _engine._access.onstatechange = function() {\n        watcher = true;\n        _schedule(function() {\n          if (watcher) {\n            _engine._refresh();\n            watcher = false;\n          }\n        });\n      };\n    };\n    _engine._unwatch = function() {\n      _engine._access.onstatechange = undefined;\n    };\n  }\n  function _initCRX(msg, ver) {\n    _engine._type = 'extension';\n    _engine._version = ver;\n    _engine._sysex = true;\n    _engine._pool = [];\n    _engine._outs = [];\n    _engine._ins = [];\n    _engine._inArr = [];\n    _engine._outArr = [];\n    _engine._inMap = {};\n    _engine._outMap = {};\n    _engine._outsW = [];\n    _engine._insW = [];\n    _engine.refreshClients = [];\n    _engine._msg = msg;\n    _engine._newPlugin = function() {\n      var plugin = { id: _engine._pool.length };\n      _engine._pool.push(plugin);\n      if (!plugin.id) plugin.ready = true;\n      else document.dispatchEvent(new CustomEvent('jazz-midi', { detail: ['new'] }));\n    };\n    _engine._newPlugin();\n    _engine._refresh = function(client) {\n      _engine.refreshClients.push(client);\n      client._pause();\n      _schedule(function() {\n        document.dispatchEvent(new CustomEvent('jazz-midi', { detail: ['refresh'] }));\n      });\n    };\n    function _closeAll() {\n      for (var i = 0; i < this.clients.length; i++) this._close(this.clients[i]);\n    }\n    _engine._openOut = function(port, name) {\n      var impl = _engine._outMap[name];\n      if (!impl) {\n        if (_engine._pool.length <= _engine._outArr.length) _engine._newPlugin();\n        var plugin = _engine._pool[_engine._outArr.length];\n        impl = {\n          name: name,\n          clients: [],\n          info: {\n            name: name,\n            manufacturer: _engine._allOuts[name].manufacturer,\n            version: _engine._allOuts[name].version,\n            type: 'MIDI-out',\n            sysex: _engine._sysex,\n            engine: _engine._type\n          },\n          _start: function() { document.dispatchEvent(new CustomEvent('jazz-midi', { detail: ['openout', plugin.id, name] })); },\n          _close: function(port) { _engine._closeOut(port); },\n          _closeAll: _closeAll,\n          _receive: function(a) { if (a.length) { var v = a.slice(); v.splice(0, 0, 'play', plugin.id); document.dispatchEvent(new CustomEvent('jazz-midi', {detail: v})); } }\n        };\n        impl.plugin = plugin;\n        plugin.output = impl;\n        _engine._outArr.push(impl);\n        _engine._outMap[name] = impl;\n      }\n      port._orig._impl = impl;\n      _push(impl.clients, port._orig);\n      port._info = impl.info;\n      port._receive = function(arg) { impl._receive(arg); };\n      port._close = function() { impl._close(this); };\n      if (!impl.open) {\n        port._pause();\n        if (impl.plugin.ready) impl._start();\n      }\n    };\n    _engine._openIn = function(port, name) {\n      var impl = _engine._inMap[name];\n      if (!impl) {\n        if (_engine._pool.length <= _engine._inArr.length) _engine._newPlugin();\n        var plugin = _engine._pool[_engine._inArr.length];\n        impl = {\n          name: name,\n          clients: [],\n          info: {\n            name: name,\n            manufacturer: _engine._allIns[name].manufacturer,\n            version: _engine._allIns[name].version,\n            type: 'MIDI-in',\n            sysex: _engine._sysex,\n            engine: _engine._type\n          },\n          _start: function() { document.dispatchEvent(new CustomEvent('jazz-midi', { detail: ['openin', plugin.id, name] })); },\n          _close: function(port) { _engine._closeIn(port); },\n          _closeAll: _closeAll\n        };\n        impl.plugin = plugin;\n        plugin.input = impl;\n        _engine._inArr.push(impl);\n        _engine._inMap[name] = impl;\n      }\n      port._orig._impl = impl;\n      _push(impl.clients, port._orig);\n      port._info = impl.info;\n      port._close = function() { impl._close(this); };\n      if (!impl.open) {\n        port._pause();\n        if (impl.plugin.ready) impl._start();\n      }\n    };\n    _engine._closeOut = function(port) {\n      var impl = port._impl;\n      _pop(impl.clients, port._orig);\n      if (!impl.clients.length && impl.open) {\n        impl.open = false;\n        document.dispatchEvent(new CustomEvent('jazz-midi', { detail: ['closeout', impl.plugin.id] }));\n      }\n    };\n    _engine._closeIn = function(port) {\n      var impl = port._impl;\n      _pop(impl.clients, port._orig);\n      if (!impl.clients.length && impl.open) {\n        impl.open = false;\n        document.dispatchEvent(new CustomEvent('jazz-midi', { detail: ['closein', impl.plugin.id] }));\n      }\n    };\n    _engine._close = function() {\n      _engine._unwatch();\n    };\n    var watcher;\n    _engine._watch = function() {\n      _engine._insW = _engine._ins;\n      _engine._outsW = _engine._outs;\n      watcher = setInterval(function() {\n        document.dispatchEvent(new CustomEvent('jazz-midi', {detail:['refresh']}));\n      }, 250);\n    };\n    _engine._unwatch = function() {\n      clearInterval(watcher);\n      watcher = undefined;\n    };\n    document.addEventListener('jazz-midi-msg', function(evt) {\n      var i, j, impl;\n      var v = evt.detail ? [ evt.detail ] : undefined;\n      if (!v) {\n        v = _engine._msg.innerText.split('\\n');\n        _engine._msg.innerText = '';\n        for (i = 0; i < v.length; i++) try { v[i] = JSON.parse(v[i]); } catch (err) { v[i] = []; }\n      }\n      for (i = 0; i < v.length; i++) {\n        var a = v[i];\n        if (!a.length) continue;\n        if (a[0] === 'refresh') {\n          if (a[1].ins) {\n            for (j = 0; j < a[1].ins.length; j++) a[1].ins[j].type = _engine._type;\n            _engine._ins = a[1].ins;\n          }\n          if (a[1].outs) {\n            for (j = 0; j < a[1].outs.length; j++) a[1].outs[j].type = _engine._type;\n            _engine._outs = a[1].outs;\n          }\n          _postRefresh();\n          for (j = 0; j < _engine.refreshClients.length; j++) _engine.refreshClients[j]._resume();\n          _engine.refreshClients = [];\n        }\n        else if (a[0] === 'version') {\n          var plugin = _engine._pool[a[1]];\n          if (plugin) {\n            plugin.ready = true;\n            if (plugin.input) plugin.input._start();\n            if (plugin.output) plugin.output._start();\n          }\n        }\n        else if (a[0] === 'openout') {\n          impl = _engine._pool[a[1]].output;\n          if (impl) {\n            if (a[2] == impl.name) {\n              impl.open = true;\n              if (impl.clients) for (j = 0; j < impl.clients.length; j++) impl.clients[j]._resume();\n            }\n            else if (impl.clients) for (j = 0; j < impl.clients.length; j++) impl.clients[j]._crash();\n          }\n        }\n        else if (a[0] === 'openin') {\n          impl = _engine._pool[a[1]].input;\n          if (impl) {\n            if (a[2] == impl.name) {\n              impl.open = true;\n              if (impl.clients) for (j = 0; j < impl.clients.length; j++) impl.clients[j]._resume();\n            }\n            else if (impl.clients) for (j = 0; j < impl.clients.length; j++) impl.clients[j]._crash();\n          }\n        }\n        else if (a[0] === 'midi') {\n          impl = _engine._pool[a[1]].input;\n          if (impl && impl.clients) {\n            for (j = 0; j < impl.clients.length; j++) {\n              var msg = MIDI(a.slice(3));\n              impl.clients[j]._emit(msg);\n            }\n          }\n        }\n      }\n    });\n  }\n\n  var JZZ = function(opt) {\n    if (!_jzz) _initJZZ(opt);\n    return _jzz._thenable();\n  };\n  JZZ.JZZ = JZZ;\n  JZZ.version = _version;\n  JZZ.info = function() { return _J.prototype.info(); };\n\n  function Widget(arg) {\n    var self = new _M();\n    if (arg instanceof Object) _for(arg, function(k) { self[k] = arg[k]; });\n    self._resume();\n    return self;\n  }\n  JZZ.Widget = Widget;\n  _J.prototype.Widget = JZZ.Widget;\n  JZZ.addMidiIn = function(name, widget) {\n    var info = _clone(widget._info || {});\n    info.name = name;\n    info.type = info.type || 'javascript';\n    info.manufacturer = info.manufacturer || 'virtual';\n    info.version = info.version || '0.0';\n    var engine = {\n      _info: function() { return info; },\n      _openIn: function(port) {\n        port._pause();\n        port._info = _clone(info);\n        port._close = function() { widget.disconnect(port); };\n        widget.connect(port);\n        port._resume();\n      }\n    };\n    return JZZ.lib.registerMidiIn(name, engine);\n  };\n  JZZ.addMidiOut = function(name, widget) {\n    var info = _clone(widget._info || {});\n    info.name = name;\n    info.type = info.type || 'javascript';\n    info.manufacturer = info.manufacturer || 'virtual';\n    info.version = info.version || '0.0';\n    var engine = {\n      _info: function() { return info; },\n      _openOut: function(port) {\n        port._pause();\n        port._info = _clone(info);\n        port._close = function() { port.disconnect(); };\n        _connect.apply(port, [widget]);\n        port._resume();\n      }\n    };\n    return JZZ.lib.registerMidiOut(name, engine);\n  };\n\n  // JZZ.SMPTE\n\n  function SMPTE() {\n    var self = this instanceof SMPTE ? this : self = new SMPTE();\n    SMPTE.prototype.reset.apply(self, arguments);\n    return self;\n  }\n  SMPTE.prototype.reset = function(arg) {\n    if (arg instanceof SMPTE) {\n      this.setType(arg.getType());\n      this.setHour(arg.getHour());\n      this.setMinute(arg.getMinute());\n      this.setSecond(arg.getSecond());\n      this.setFrame(arg.getFrame());\n      this.setQuarter(arg.getQuarter());\n      return this;\n    }\n    var arr = arg instanceof Array ? arg : arguments;\n    this.setType(arr[0]);\n    this.setHour(arr[1]);\n    this.setMinute(arr[2]);\n    this.setSecond(arr[3]);\n    this.setFrame(arr[4]);\n    this.setQuarter(arr[5]);\n    return this;\n  };\n  function _fixDropFrame() { if (this.type == 29.97 && !this.second && this.frame < 2 && this.minute % 10) this.frame = 2; }\n  SMPTE.prototype.isFullFrame = function() { return this.quarter == 0 || this.quarter == 4; };\n  SMPTE.prototype.getType = function() { return this.type; };\n  SMPTE.prototype.getHour = function() { return this.hour; };\n  SMPTE.prototype.getMinute = function() { return this.minute; };\n  SMPTE.prototype.getSecond = function() { return this.second; };\n  SMPTE.prototype.getFrame = function() { return this.frame; };\n  SMPTE.prototype.getQuarter = function() { return this.quarter; };\n  SMPTE.prototype.setType = function(x) {\n    if (typeof x == 'undefined' || x == 24) this.type = 24;\n    else if (x == 25) this.type = 25;\n    else if (x == 29.97) { this.type = 29.97; _fixDropFrame.apply(this); }\n    else if (x == 30) this.type = 30;\n    else throw RangeError('Bad SMPTE frame rate: ' + x);\n    if (this.frame >= this.type) this.frame = this.type - 1; // could not be more than 29\n    return this;\n  };\n  SMPTE.prototype.setHour = function(x) {\n    if (typeof x == 'undefined') x = 0;\n    if (x != parseInt(x) || x < 0 || x >= 24) throw RangeError('Bad SMPTE hours value: ' + x);\n    this.hour = x;\n    return this;\n  };\n  SMPTE.prototype.setMinute = function(x) {\n    if (typeof x == 'undefined') x = 0;\n    if (x != parseInt(x) || x < 0 || x >= 60) throw RangeError('Bad SMPTE minutes value: ' + x);\n    this.minute = x;\n    _fixDropFrame.apply(this);\n    return this;\n  };\n  SMPTE.prototype.setSecond = function(x) {\n    if (typeof x == 'undefined') x = 0;\n    if (x != parseInt(x) || x < 0 || x >= 60) throw RangeError('Bad SMPTE seconds value: ' + x);\n    this.second = x;\n    _fixDropFrame.apply(this);\n    return this;\n  };\n  SMPTE.prototype.setFrame = function(x) {\n    if (typeof x == 'undefined') x = 0;\n    if (x != parseInt(x) || x < 0 || x >= this.type) throw RangeError('Bad SMPTE frame number: ' + x);\n    this.frame = x;\n    _fixDropFrame.apply(this);\n    return this;\n  };\n  SMPTE.prototype.setQuarter = function(x) {\n    if (typeof x == 'undefined') x = 0;\n    if (x != parseInt(x) || x < 0 || x >= 8) throw RangeError('Bad SMPTE quarter frame: ' + x);\n    this.quarter = x;\n    return this;\n  };\n  SMPTE.prototype.incrFrame = function() {\n    this.frame++;\n    if (this.frame >= this.type) {\n      this.frame = 0;\n      this.second++;\n      if (this.second >= 60) {\n        this.second = 0;\n        this.minute++;\n        if (this.minute >= 60) {\n          this.minute = 0;\n          this.hour = this.hour >= 23 ? 0 : this.hour + 1;\n        }\n      }\n    }\n    _fixDropFrame.apply(this);\n    return this;\n  };\n  SMPTE.prototype.decrFrame = function() {\n    if (!this.second && this.frame == 2 && this.type == 29.97 && this.minute % 10) this.frame = 0; // drop-frame\n    this.frame--;\n    if (this.frame < 0) {\n      this.frame = this.type == 29.97 ? 29 : this.type - 1;\n      this.second--;\n      if (this.second < 0) {\n        this.second = 59;\n        this.minute--;\n        if (this.minute < 0) {\n          this.minute = 59;\n          this.hour = this.hour ? this.hour - 1 : 23;\n        }\n      }\n    }\n    return this;\n  };\n  SMPTE.prototype.incrQF = function() {\n    this.backwards = false;\n    this.quarter = (this.quarter + 1) & 7;\n    if (this.quarter == 0 || this.quarter == 4) this.incrFrame();\n    return this;\n  };\n  SMPTE.prototype.decrQF = function() {\n    this.backwards = true;\n    this.quarter = (this.quarter + 7) & 7;\n    if (this.quarter == 3 || this.quarter == 7) this.decrFrame();\n    return this;\n  };\n  function _825(a) { return [[24, 25, 29.97, 30][(a[7] >> 1) & 3], ((a[7] & 1) << 4) | a[6], (a[5] << 4) | a[4], (a[3] << 4) | a[2], (a[1] << 4) | a[0]]; }\n  SMPTE.prototype.read = function(m) {\n    if (!(m instanceof MIDI)) m = MIDI.apply(null, arguments);\n    if (m[0] == 0xf0 && m[1] == 0x7f && m[3] == 1 && m[4] == 1 && m[9] == 0xf7) {\n      this.type = [24, 25, 29.97, 30][(m[5] >> 5) & 3];\n      this.hour = m[5] & 31;\n      this.minute = m[6];\n      this.second = m[7];\n      this.frame = m[8];\n      this.quarter = 0;\n      this._ = undefined;\n      this._b = undefined;\n      this._f = undefined;\n      return true;\n    }\n    if (m[0] == 0xf1 && typeof m[1] != 'undefined') {\n      var q = m[1] >> 4;\n      var n = m[1] & 15;\n      if (q == 0) {\n        if (this._ == 7) {\n          if (this._f == 7) {\n            this.reset(_825(this._a));\n            this.incrFrame();\n          }\n          this.incrFrame();\n        }\n      }\n      else if (q == 3) {\n        if (this._ == 4) {\n          this.decrFrame();\n        }\n      }\n      else if (q == 4) {\n        if (this._ == 3) {\n          this.incrFrame();\n        }\n      }\n      else if (q == 7) {\n        if (this._ === 0) {\n          if (this._b === 0) {\n            this.reset(_825(this._a));\n            this.decrFrame();\n          }\n          this.decrFrame();\n        }\n      }\n      if (!this._a) this._a = [];\n      this._a[q] = n;\n      this._f = this._f === q - 1 || q == 0 ? q : undefined;\n      this._b = this._b === q + 1 || q == 7 ? q : undefined;\n      this._ = q;\n      this.quarter = q;\n      return true;\n    }\n    return false;\n  };\n  function _mtc(t) {\n    if (!t.backwards && t.quarter >= 4) t.decrFrame(); // continue encoding previous frame\n    else if (t.backwards && t.quarter < 4) t.incrFrame();\n    var ret;\n    switch (t.quarter >> 1) {\n      case 0: ret = t.frame; break;\n      case 1: ret = t.second; break;\n      case 2: ret = t.minute; break;\n      default: ret = t.hour;\n    }\n    if (t.quarter & 1) ret >>= 4;\n    else ret &= 15;\n    if (t.quarter == 7) {\n      if (t.type == 25) ret |= 2;\n      else if (t.type == 29.97) ret |= 4;\n      else if (t.type == 30) ret |= 6;\n    }\n    // restore original t\n    if (!t.backwards && t.quarter >= 4) t.incrFrame();\n    else if (t.backwards && t.quarter < 4) t.decrFrame();\n    return ret | (t.quarter << 4);\n  }\n  function _hrtype(t) {\n    if (t.type == 25) return t.hour | 0x20;\n    if (t.type == 29.97) return t.hour | 0x40;\n    if (t.type == 30) return t.hour | 0x60;\n    return t.hour;\n  }\n  function _dec(x) { return x < 10 ? '0' + x : x; }\n  function _smptetxt(x) {\n    var arr = [];\n    for (var i = 0; i < x.length; i++) arr[i] = _dec(i ? x[i] : x[i] & 0x1f);\n    return arr.join(':');\n  }\n  SMPTE.prototype.toString = function() { return _smptetxt([this.hour, this.minute, this.second, this.frame]); };\n  JZZ.SMPTE = SMPTE;\n  _J.prototype.SMPTE = SMPTE;\n\n  // JZZ.MIDI\n\n  function MIDI(arg) {\n    var self = this instanceof MIDI ? this : self = new MIDI();\n    var i;\n    if (arg instanceof MIDI) {\n      self._from = arg._from.slice();\n      _for(arg, function(i) { if (i != '_from') self[i] = arg[i]; });\n      return self;\n    }\n    else self._from = [];\n    if (typeof arg == 'undefined') return self;\n    var arr = arg instanceof Array ? arg : arguments;\n    for (i = 0; i < arr.length; i++) {\n      n = arr[i];\n      if (i == 1) {\n        if (self[0] >= 0x80 && self[0] <= 0xAF) n = MIDI.noteValue(n);\n        if (self[0] >= 0xC0 && self[0] <= 0xCF) n = MIDI.programValue(n);\n      }\n      if (n != parseInt(n) || n < 0 || n > 255) _throw(arr[i]);\n      self.push(n);\n    }\n    return self;\n  }\n  MIDI.prototype = [];\n  MIDI.prototype.constructor = MIDI;\n  var _noteNum = {};\n  MIDI.noteValue = function(x) { return typeof x == 'undefined' ? undefined : _noteNum[x.toString().toLowerCase()]; };\n  MIDI.programValue = function(x) { return x; };\n  MIDI.octaveValue = function(x) {\n    var n = _noteNum[x.toString().toLowerCase()];\n    if (typeof n == 'undefined') n = _noteNum[x.toString().toLowerCase() + '1'];\n    return typeof n == 'undefined' ? undefined : n % 12;\n  };\n  MIDI.freq = function(n, a) {\n    if (typeof a == 'undefined') a = 440.0;\n    _float(a);\n    if (n != parseFloat(n)) n = _7bn(n);\n    return (a * Math.pow(2, (n - 69.0) / 12.0));\n  };\n  function _float(x) { if (x != parseFloat(x)) throw TypeError('Not a number: ' + x); }\n  MIDI.shift = function(f, f0) {\n    if (typeof f0 == 'undefined') f0 = 440;\n    _float(f);\n    _float(f0);\n    return Math.log2(f / f0) * 12;\n  };\n  MIDI.midi = function(f, f0) {\n    if (f != parseFloat(f)) return _7bn(f);\n    return MIDI.shift(f, f0) + 69;\n  };\n  MIDI.to7b = function(x) {\n    _float(x);\n    return x <= 0 ? 0 : x >= 1 ? 0x7f : Math.floor(x * 0x80);\n  };\n  MIDI.to14b = function(x) {\n    _float(x);\n    return x <= 0 ? 0 : x >= 1 ? 0x3fff : Math.floor(x * 0x4000);\n  };\n  MIDI.to21b = function(x) {\n    if (typeof x == 'undefined') return 0x1fffff;\n    _float(x);\n    if (x <= 0) return 0;\n    x = (Math.floor(x) << 14) + MIDI.to14b(x - Math.floor(x));\n    return x < 0x1fffff ? x : 0x1ffffe;\n  };\n  function _MIDI() {}\n  _MIDI.prototype = MIDI;\n  MIDI._sxid = 0x7f;\n  MIDI.sxId = function(id) {\n    if (typeof id == 'undefined') id = MIDI._sxid;\n    if (id == this._sxid) return this;\n    id = _7b(id);\n    var ret = new _MIDI();\n    ret._ch = this._ch;\n    ret._sxid = id;\n    return ret;\n  };\n  MIDI.ch = function(c) {\n    if (c == this._ch || typeof c == 'undefined' && typeof this._ch == 'undefined') return this;\n    var ret = new _MIDI();\n    if (typeof c != 'undefined') c = _ch(c);\n    ret._ch = c;\n    ret._sxid = this._sxid;\n    return ret;\n  };\n\n  var _noteMap = { c:0, d:2, e:4, f:5, g:7, a:9, b:11, h:11 };\n  _for(_noteMap, function(k) {\n    for (n = 0; n < 12; n++) {\n      m = _noteMap[k] + n * 12;\n      if (m > 127) break;\n      _noteNum[k + n] = m; _noteNum[k + '♮' + n] = m;\n      if (m > 0) {\n        _noteNum[k + 'b' + n] = m - 1; _noteNum[k + '♭' + n] = m - 1;\n        _noteNum[k + 'bb' + n] = m - 2; _noteNum[k + '♭♭' + n] = m - 2; _noteNum[k + '𝄫' + n] = m - 2;\n      }\n      if (m < 127) {\n        _noteNum[k + '#' + n] = m + 1; _noteNum[k + '♯' + n] = m + 1;\n        _noteNum[k + '##' + n] = m + 2; _noteNum[k + '♯♯' + n] = m + 2; _noteNum[k + '𝄪' + n] = m + 2;\n      }\n    }\n  });\n  for (n = 0; n < 128; n++) _noteNum[n] = n;\n  function _throw(x) { throw RangeError('Bad MIDI value: ' + x); }\n  function _bad(x) { throw TypeError('Invalid value: ' + x); }\n  function _oor(x) { throw RangeError('Out of range: ' + x); }\n  function _ch(c) { _validateChannel(c); return parseInt(c); }\n  function _7b(n, m) { if (n != parseInt(n) || n < 0 || n > 0x7f) _throw(typeof m == 'undefined' ? n : m); return parseInt(n); }\n  function _8b(n) { if (n != parseInt(n) || n < 0 || n > 0xff) _throw(n); return parseInt(n); }\n  function _14b(n) { if (n != parseInt(n) || n < 0 || n > 0x3fff) _throw(n); return parseInt(n); }\n  function _16b(n) { if (n != parseInt(n) || n < 0 || n > 0xffff) throw RangeError('Expected a 16-bit value: ' + n); return parseInt(n); }\n  function _21b(n) { if (n != parseInt(n) || n < 0 || n > 0x1fffff) _throw(n); return parseInt(n); }\n  function _7bn(n) { return _7b(MIDI.noteValue(n), n); }\n  function _lsb(n) { return _14b(n) & 0x7f; }\n  function _msb(n) { return _14b(n) >> 7; }\n  function _8bs(s) { s = '' + s; for (var i = 0; i < s.length; i++) if (s.charCodeAt(i) > 255) _throw(s[i]); return s; }\n  function _to777(n) { return [n >> 14, (n >> 7) & 0x7f, n & 0x7f]; }\n  function _01(x, y) {\n    if (x != parseFloat(x)) _bad(typeof y == 'undefined' ? x : y);\n    if (x < 0 || x > 1) _oor(typeof y == 'undefined' ? x : y);\n    return parseFloat(x);\n }\n  function _rt(b) { return typeof b != 'undefined' && !b ? 0x7E : 0x7F; }\n  function _ntu(x) {\n    var k, m;\n    var kkk = [];\n    var vvv = {};\n    _for(x, function(k) {\n      m = _21b(x[k]);\n      k = _7bn(k);\n      if (k in vvv) throw RangeError('Duplicate MIDI value: ' + k);\n      kkk.push(k);\n      vvv[k] = m;\n    });\n    kkk.sort();\n    var out = [kkk.length];\n    for (k = 0; k < kkk.length; k++) out = out.concat([kkk[k]], _to777(vvv[kkk[k]]));\n    return out;\n  }\n  function _f2ntu(x) {\n    var out = {};\n    _for (x, function(k) { out[k] = MIDI.to21b(x[k] == parseFloat(x[k]) ? x[k] : _7bn(x[k])); });\n    return out;\n  }\n  function _hz2ntu(x) {\n    var out = {};\n    _for (x, function(k) { out[k] = MIDI.to21b(MIDI.midi(x[k])); });\n    return out;\n  }\n  function _12x7(a) {\n    var out = [];\n    if (!(a instanceof Array) || a.length != 12) throw TypeError('Expected an array of size 12');\n    for (var i = 0; i < 12; i++) out.push(_7b(a[i]));\n    return out;\n  }\n  function _12x14(a) {\n    var out = [];\n    if (!(a instanceof Array) || a.length != 12) throw TypeError('Expected an array of size 12');\n    for (var i = 0; i < 12; i++) {\n      out.push(_msb(a[i]));\n      out.push(_lsb(a[i]));\n    }\n    return out;\n  }\n  var _helperMPE = {\n    noteOff: function(c, n, v) { if (typeof v == 'undefined') v = 64; return [0x80 + _ch(c), _7bn(n), _7b(v)]; },\n    noteOn: function(c, n, v) { if (typeof v == 'undefined') v = 127; return [0x90 + _ch(c), _7bn(n), _7b(v)]; },\n    aftertouch: function(c, n, v) { return [0xA0 + _ch(c), _7bn(n), _7b(v)]; },\n  };\n  var _helperCH = {\n    control: function(c, n, v) { return [0xB0 + _ch(c), _7b(n), _7b(v)]; },\n    program: function(c, n) { return [0xC0 + _ch(c), _7b(MIDI.programValue(n), n)]; },\n    pressure: function(c, n) { return [0xD0 + _ch(c), _7b(n)]; },\n    pitchBend: function(c, n, l) { return typeof l == 'undefined' ? [0xE0 + _ch(c), _lsb(n), _msb(n)] : [0xE0 + _ch(c), _7b(l), _7b(n)]; },\n    pitchBendF: function(c, x) { return _helperCH.pitchBend(c, MIDI.to14b((x + 1) / 2)); },\n    bankMSB: function(c, n) { return [0xB0 + _ch(c), 0x00, _7b(n)]; },\n    bankLSB: function(c, n) { return [0xB0 + _ch(c), 0x20, _7b(n)]; },\n    modMSB: function(c, n) { return [0xB0 + _ch(c), 0x01, _7b(n)]; },\n    modLSB: function(c, n) { return [0xB0 + _ch(c), 0x21, _7b(n)]; },\n    breathMSB: function(c, n) { return [0xB0 + _ch(c), 0x02, _7b(n)]; },\n    breathLSB: function(c, n) { return [0xB0 + _ch(c), 0x22, _7b(n)]; },\n    footMSB: function(c, n) { return [0xB0 + _ch(c), 0x04, _7b(n)]; },\n    footLSB: function(c, n) { return [0xB0 + _ch(c), 0x24, _7b(n)]; },\n    portamentoMSB: function(c, n) { return [0xB0 + _ch(c), 0x05, _7b(n)]; },\n    portamentoLSB: function(c, n) { return [0xB0 + _ch(c), 0x25, _7b(n)]; },\n    dataMSB: function(c, n) { return [0xB0 + _ch(c), 0x06, _7b(n)]; },\n    dataLSB: function(c, n) { return [0xB0 + _ch(c), 0x26, _7b(n)]; },\n    volumeMSB: function(c, n) { return [0xB0 + _ch(c), 0x07, _7b(n)]; },\n    volumeLSB: function(c, n) { return [0xB0 + _ch(c), 0x27, _7b(n)]; },\n    balanceMSB: function(c, n) { return [0xB0 + _ch(c), 0x08, _7b(n)]; },\n    balanceLSB: function(c, n) { return [0xB0 + _ch(c), 0x28, _7b(n)]; },\n    panMSB: function(c, n) { return [0xB0 + _ch(c), 0x0A, _7b(n)]; },\n    panLSB: function(c, n) { return [0xB0 + _ch(c), 0x2A, _7b(n)]; },\n    expressionMSB: function(c, n) { return [0xB0 + _ch(c), 0x0B, _7b(n)]; },\n    expressionLSB: function(c, n) { return [0xB0 + _ch(c), 0x2B, _7b(n)]; },\n    damper: function(c, b) { if (typeof b == 'undefined') b = true; return [0xB0 + _ch(c), 0x40, b ? 127 : 0]; },\n    portamento: function(c, b) { if (typeof b == 'undefined') b = true; return [0xB0 + _ch(c), 0x41, b ? 127 : 0]; },\n    sostenuto: function(c, b) { if (typeof b == 'undefined') b = true; return [0xB0 + _ch(c), 0x42, b ? 127 : 0]; },\n    soft: function(c, b) { if (typeof b == 'undefined') b = true; return [0xB0 + _ch(c), 0x43, b ? 127 : 0]; },\n    legato: function(c, b) { if (typeof b == 'undefined') b = true; return [0xB0 + _ch(c), 0x44, b ? 127 : 0]; },\n    hold2: function(c, b) { if (typeof b == 'undefined') b = true; return [0xB0 + _ch(c), 0x45, b ? 127 : 0]; },\n    soundVariation: function(c, n) { return [0xB0 + _ch(c), 0x46, _7bn(n)]; },\n    filterResonance: function(c, n) { return [0xB0 + _ch(c), 0x47, _7bn(n)]; },\n    releaseTime: function(c, n) { return [0xB0 + _ch(c), 0x48, _7bn(n)]; },\n    attackTime: function(c, n) { return [0xB0 + _ch(c), 0x49, _7bn(n)]; },\n    brightness: function(c, n) { return [0xB0 + _ch(c), 0x4A, _7bn(n)]; },\n    decayTime: function(c, n) { return [0xB0 + _ch(c), 0x4B, _7bn(n)]; },\n    vibratoRate: function(c, n) { return [0xB0 + _ch(c), 0x4C, _7bn(n)]; },\n    vibratoDepth: function(c, n) { return [0xB0 + _ch(c), 0x4D, _7bn(n)]; },\n    vibratoDelay: function(c, n) { return [0xB0 + _ch(c), 0x4E, _7bn(n)]; },\n    ptc: function(c, n) { return [0xB0 + _ch(c), 0x54, _7bn(n)]; },\n    dataIncr: function(c) { return [0xB0 + _ch(c), 0x60, 0]; },\n    dataDecr: function(c) { return [0xB0 + _ch(c), 0x61, 0]; },\n    nrpnLSB: function(c, n) { return [0xB0 + _ch(c), 0x62, _7b(n)]; },\n    nrpnMSB: function(c, n) { return [0xB0 + _ch(c), 0x63, _7b(n)]; },\n    rpnLSB: function(c, n) { return [0xB0 + _ch(c), 0x64, _7b(n)]; },\n    rpnMSB: function(c, n) { return [0xB0 + _ch(c), 0x65, _7b(n)]; },\n    allSoundOff: function(c) { return [0xB0 + _ch(c), 0x78, 0]; },\n    resetAllControllers: function(c) { return [0xB0 + _ch(c), 0x79, 0]; },\n    localControl: function(c, b) { if (typeof b == 'undefined') b = true; return [0xB0 + _ch(c), 0x7a, b ? 127 : 0]; },\n    allNotesOff: function(c) { return [0xB0 + _ch(c), 0x7b, 0]; },\n    omni: function(c, b) { if (typeof b == 'undefined') b = true; return [0xB0 + _ch(c), b ? 0x7d : 0x7c, 0]; },\n    mono: function(c, n) { if (typeof n == 'undefined') n = 1; return [0xB0 + _ch(c), 0x7e, _7b(n)]; },\n    poly: function(c) { return [0xB0 + _ch(c), 0x7f, 0]; },\n  };\n  function _splitMasterTuning(a, b, c, d) {\n    if (typeof b != 'undefined') return [_7b(a), _7b(b), _7b(c), _7b(d)];\n    if (a != parseInt(a) || a < 0 || n > 0xffff) _bad(a);\n    a = parseInt(a);\n    return [(a >> 12) & 0xf, (a >> 8) & 0xf, (a >> 4) & 0xf, a & 0xf];\n  }\n  function _gsxg12b(x) { // -1 <= x <= 1\n    _float(x);\n    return Math.round(x * 1000 + 0x400);\n  }\n  var _helperNC = { // no channel\n    mtc: function(t) { return [0xF1, _mtc(t)]; },\n    songPosition: function(n, l) { return typeof l == 'undefined' ? [0xF2, _lsb(n), _msb(n)] : [0xF2, _7b(l), _7b(n)]; },\n    songSelect: function(n) { return [0xF3, _7b(n)]; },\n    tune: function() { return [0xF6]; },\n    clock: function() { return [0xF8]; },\n    start: function() { return [0xFA]; },\n    continue: function() { return [0xFB]; },\n    stop: function() { return [0xFC]; },\n    active: function() { return [0xFE]; },\n    sxIdRequest: function() { return [0xF0, 0x7E, this._sxid, 0x06, 0x01, 0xF7]; },\n    sxTuningDumpRequest: function(n, k) { return typeof k == 'undefined' ?\n      [0xF0, 0x7E, this._sxid, 0x08, 0x00, _7b(n), 0xF7] : [0xF0, 0x7E, this._sxid, 0x08, 0x03, _7b(n), _7b(k), 0xF7]; },\n    sxFullFrame: function(t) { return [0xF0, 0x7F, this._sxid, 0x01, 0x01, _hrtype(t), t.getMinute(), t.getSecond(), t.getFrame(), 0xF7]; },\n    sxMasterVolume: function(n, l) { return typeof l == 'undefined' ?\n      [0xF0, 0x7F, this._sxid, 0x04, 0x01, _lsb(n), _msb(n), 0xF7] : [0xF0, 0x7F, this._sxid, 0x04, 0x01, _7b(l), _7b(n), 0xF7]; },\n    sxMasterVolumeF: function(x) { return _helperNC.sxMasterVolume.call(this, MIDI.to14b(_01(x))); },\n    sxMasterFineTuning: function(n, l) { return typeof l == 'undefined' ?\n      [0xF0, 0x7F, this._sxid, 0x04, 0x03, _lsb(n), _msb(n), 0xF7] : [0xF0, 0x7F, this._sxid, 0x04, 0x03, _7b(l), _7b(n), 0xF7]; },\n    sxMasterFineTuningF: function(x) { return _helperNC.sxMasterFineTuning.call(this, MIDI.to14b(_01((x % 1 + 1) / 2, x))); },\n    sxMasterCoarseTuning: function(n) { return [0xF0, 0x7F, this._sxid, 0x04, 0x04, 0x00, _7b(n), 0xF7]; },\n    sxMasterCoarseTuningF: function(x) { return _helperNC.sxMasterCoarseTuning.call(this, 0x40 + (x - x % 1)); },\n    sxNoteTuning: function(a, b, c, d) { return b == parseInt(b) ?\n      [0xF0, _rt(d), this._sxid, 0x08, 0x07, _7b(a), _7b(b)].concat(_ntu(c), [0xF7]) :\n      [0xF0, 0x7F, this._sxid, 0x08, 0x02, _7b(a)].concat(_ntu(b), [0xF7]); },\n    sxNoteTuningF: function(a, b, c, d) { return b == parseInt(b) ?\n      _helperNC.sxNoteTuning.call(this, a, b, _f2ntu(c), d) : _helperNC.sxNoteTuning.call(this, a, _f2ntu(b)); },\n    sxNoteTuningHZ: function(a, b, c, d) { return b == parseInt(b) ?\n      _helperNC.sxNoteTuning.call(this, a, b, _hz2ntu(c), d) : _helperNC.sxNoteTuning.call(this, a, _hz2ntu(b)); },\n    sxScaleTuning1: function(a, b, c) { return a == parseInt(a) ?\n      [0xF0, _rt(c), this._sxid, 0x08, 0x08].concat(_to777(_16b(a)), _12x7(b), [0xF7]) :\n      _helperNC.sxScaleTuning1.call(this, 0xffff, a, b); },\n    sxScaleTuning1F: function(a, b, c) { if (a != parseInt(a)) return _helperNC.sxScaleTuning1F.call(this, 0xffff, a, b);\n      var v = []; for (var i = 0; i < b.length; i++) {\n        if (b[i] < -0.64 || b[i] > 0.63) throw RangeError('Out of range: ' + b[i]);\n        v.push(Math.floor(b[i] * 100 + 64)); }\n      return _helperNC.sxScaleTuning1.call(this, a, v, c); },\n    sxScaleTuning2: function(a, b, c) { return a == parseInt(a) ?\n      [0xF0, _rt(c), this._sxid, 0x08, 0x09].concat(_to777(_16b(a)), _12x14(b), [0xF7]) :\n      _helperNC.sxScaleTuning2.call(this, 0xffff, a, b); },\n    sxScaleTuning2F: function(a, b, c) { if (a != parseInt(a)) return _helperNC.sxScaleTuning2F.call(this, 0xffff, a, b);\n      var v = []; for (var i = 0; i < b.length; i++) {\n        var x = (b[i] + 1) / 2;\n        if (x < -1 || x > 1) throw RangeError('Out of range: ' + b[i]);\n        v.push(MIDI.to14b((b[i] + 1) / 2)); }\n      return _helperNC.sxScaleTuning2.call(this, a, v, c); },\n    sxGM: function(gm) { if (typeof gm == 'undefined') gm = 1; return [0xF0, 0x7E, this._sxid, 0x09, gm ? gm == 2 ? 3 : 1 : 2, 0xf7]; },\n    sxGS: function(arg) { var arr = typeof arg == 'undefined' ? [0x40, 0, 0x7F, 0] : arg instanceof Array ? arg : arguments;\n      var c = 0; var a = [0xF0, 0x41, this._sxid, 0x42, 0x12];\n      for (var i = 0; i < arr.length; i++) { var x = _7b(arr[i]); a.push(x); c += x; }\n      c %= 128; a.push(c ? 128 - c : 0); a.push(0xf7); return a; },\n    sxXG: function(arg) { var arr = typeof arg == 'undefined' ? [0, 0, 0x7E, 0] : arg instanceof Array ? arg : arguments;\n      var sxid = this._sxid == 0x7f ? 0 : this._sxid;\n      if (sxid > 15) _throw('Bad Yamaha device number: ' + sxid);\n      var a = [0xf0, 0x43, 16 + sxid, 0x4c];\n      for (var i = 0; i < arr.length; i++) a.push(_7b(arr[i])); a.push(0xf7); return a; },\n    sxMidiSoft: function(n, s) {\n      var a = [0xf0, 0x00, 0x20, 0x24, 0x00, _7b(n || 0)];\n      s = typeof s == 'undefined' ? '' : '' + s;\n      for (var i = 0; i < s.length; i++) a.push(_7b(s.charCodeAt(i)));\n      a.push(0xf7); return a; },\n    gsMasterVolume: function(n) { return _helperNC.sxGS.call(this, [0x40, 0, 4, _7b(n)]); },\n    gsMasterVolumeF: function(x) { return _helperNC.gsMasterVolume.call(this, MIDI.to7b(_01(x))); },\n    gsMasterFineTuning: function(a, b, c, d) { a = _splitMasterTuning(a, b, c, d); return _helperNC.sxGS.call(this, [0x40, 0, 0, a[0], a[1], a[2], a[3]]); },\n    gsMasterFineTuningF: function(x) { return _helperNC.gsMasterFineTuning.call(this, _gsxg12b(x % 1)); },\n    gsMasterCoarseTuning: function(n) { return _helperNC.sxGS.call(this, [0x40, 0, 5, _7b(n)]); },\n    gsMasterCoarseTuningF: function(x) { return _helperNC.gsMasterCoarseTuning.call(this, 0x40 + (x - x % 1)); },\n    gsOctaveTuning: function(c, n, x) { return _helperNC.sxGS.call(this, [0x40, 0x10 + [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 11, 12, 13, 14, 15][_ch(c)], 0x40 + MIDI.octaveValue(n), _7b(x)]); },\n    gsOctaveTuningF: function(c, n, x) { if (x < -0.64 || x > 0.63) throw RangeError('Out of range: ' + x);\n      return _helperNC.gsOctaveTuning.call(this, c, n, Math.floor(x * 100 + 64)); },\n    xgMasterVolume: function(n) { return _helperNC.sxXG.call(this, [0, 0, 4, _7b(n)]); },\n    xgMasterVolumeF: function(x) { return _helperNC.xgMasterVolume.call(this, MIDI.to7b(_01(x))); },\n    xgMasterFineTuning: function(a, b, c, d) { a = _splitMasterTuning(a, b, c, d); return _helperNC.sxXG.call(this, [0, 0, 0, a[0], a[1], a[2], a[3]]); },\n    xgMasterFineTuningF: function(x) { return _helperNC.xgMasterFineTuning.call(this, _gsxg12b(x % 1)); },\n    xgMasterCoarseTuning: function(n) { return _helperNC.sxXG.call(this, [0, 0, 6, _7b(n)]); },\n    xgMasterCoarseTuningF: function(x) { return _helperNC.xgMasterCoarseTuning.call(this, 0x40 + (x - x % 1)); },\n    xgOctaveTuning: function(c, n, x) { return _helperNC.sxXG.call(this, [8, _ch(c), 0x41 + MIDI.octaveValue(n), _7b(x)]); },\n    xgOctaveTuningF: function(c, n, x) { if (x < -0.64 || x > 0.63) throw RangeError('Out of range: ' + x);\n      return _helperNC.xgOctaveTuning.call(this, c, n, Math.floor(x * 100 + 64)); },\n    reset: function() { return [0xFF]; },\n  };\n  _helperNC.sxScaleTuning = _helperNC.sxScaleTuning2;\n  _helperNC.sxScaleTuningF = _helperNC.sxScaleTuning2F;\n  _helperNC.sxMasterTranspose = _helperNC.sxMasterCoarseTuning;\n  _helperNC.sxMasterTransposeF = _helperNC.sxMasterCoarseTuningF;\n  _helperNC.gsMasterTranspose = _helperNC.gsMasterCoarseTuning;\n  _helperNC.gsMasterTransposeF = _helperNC.gsMasterCoarseTuningF;\n  _helperNC.xgMasterTranspose = _helperNC.xgMasterCoarseTuning;\n  _helperNC.xgMasterTransposeF = _helperNC.xgMasterCoarseTuningF;\n  var _helperGCH = { // compound messages\n    bank: function(c, m, l) { return typeof l == 'undefined' ?\n      [_helperCH.bankMSB(c, _msb(m)), _helperCH.bankLSB(c, _lsb(m))] : [_helperCH.bankMSB(c, m), _helperCH.bankLSB(c, l)]; },\n    modF: function(c, x) { return _helperGCH.mod(c, MIDI.to14b(x)); },\n    mod: function(c, m, l) { return typeof l == 'undefined' ?\n      [_helperCH.modMSB(c, _msb(m)), _helperCH.modLSB(c, _lsb(m))] : [_helperCH.modMSB(c, m), _helperCH.modLSB(c, l)]; },\n    breathF: function(c, x) { return _helperGCH.breath(c, MIDI.to14b(x)); },\n    breath: function(c, m, l) { return typeof l == 'undefined' ?\n      [_helperCH.breathMSB(c, _msb(m)), _helperCH.breathLSB(c, _lsb(m))] : [_helperCH.breathMSB(c, m), _helperCH.breathLSB(c, l)]; },\n    footF: function(c, x) { return _helperGCH.foot(c, MIDI.to14b(x)); },\n    foot: function(c, m, l) { return typeof l == 'undefined' ?\n      [_helperCH.footMSB(c, _msb(m)), _helperCH.footLSB(c, _lsb(m))] : [_helperCH.footMSB(c, m), _helperCH.footLSB(c, l)]; },\n    portamentoTimeF: function(c, x) { return _helperGCH.portamentoTime(c, MIDI.to14b(x)); },\n    portamentoTime: function(c, m, l) { return typeof l == 'undefined' ?\n      [_helperCH.portamentoMSB(c, _msb(m)), _helperCH.portamentoLSB(c, _lsb(m))] : [_helperCH.portamentoMSB(c, m), _helperCH.portamentoLSB(c, l)]; },\n    dataF: function(c, x) { return _helperGCH.data(c, MIDI.to14b(x)); },\n    data: function(c, m, l) { return typeof l == 'undefined' ?\n      [_helperCH.dataMSB(c, _msb(m)), _helperCH.dataLSB(c, _lsb(m))] : [_helperCH.dataMSB(c, m), _helperCH.dataLSB(c, l)]; },\n    volumeF: function(c, x) { return _helperGCH.volume(c, MIDI.to14b(x)); },\n    volume: function(c, m, l) { return typeof l == 'undefined' ?\n      [_helperCH.volumeMSB(c, _msb(m)), _helperCH.volumeLSB(c, _lsb(m))] : [_helperCH.volumeMSB(c, m), _helperCH.volumeLSB(c, l)]; },\n    balanceF: function(c, x) { return _helperGCH.balance(c, MIDI.to14b((x + 1) / 2)); },\n    balance: function(c, m, l) { return typeof l == 'undefined' ?\n      [_helperCH.balanceMSB(c, _msb(m)), _helperCH.balanceLSB(c, _lsb(m))] : [_helperCH.balanceMSB(c, m), _helperCH.balanceLSB(c, l)]; },\n    panF: function(c, x) { return _helperGCH.pan(c, MIDI.to14b((x + 1) / 2)); },\n    pan: function(c, m, l) { return typeof l == 'undefined' ?\n      [_helperCH.panMSB(c, _msb(m)), _helperCH.panLSB(c, _lsb(m))] : [_helperCH.panMSB(c, m), _helperCH.panLSB(c, l)]; },\n    expressionF: function(c, x) { return _helperGCH.expression(c, MIDI.to14b(x)); },\n    expression: function(c, m, l) { return typeof l == 'undefined' ?\n      [_helperCH.expressionMSB(c, _msb(m)), _helperCH.expressionLSB(c, _lsb(m))] : [_helperCH.expressionMSB(c, m), _helperCH.expressionLSB(c, l)]; },\n    nrpn: function(c, m, l) { return typeof l == 'undefined' ?\n      [_helperCH.nrpnMSB(c, _msb(m)), _helperCH.nrpnLSB(c, _lsb(m))] : [_helperCH.nrpnMSB(c, m), _helperCH.nrpnLSB(c, l)]; },\n    rpn: function(c, m, l) { return typeof l == 'undefined' ?\n      [_helperCH.rpnMSB(c, _msb(m)), _helperCH.rpnLSB(c, _lsb(m))] : [_helperCH.rpnMSB(c, m), _helperCH.rpnLSB(c, l)]; },\n    rpnPitchBendRange: function(c, m, l) { return _helperGCH.rpn(c, 0, 0).concat(_helperGCH.data(c, m, l)); },\n    rpnPitchBendRangeF: function(c, x) { return _helperGCH.rpnPitchBendRange(c, _7b(x - x % 1), Math.floor((x % 1) * 100)); },\n    rpnFineTuning: function(c, m, l) { return _helperGCH.rpn(c, 0, 1).concat(_helperGCH.data(c, m, l)); },\n    rpnFineTuningF: function(c, x) { return _helperGCH.rpn(c, 0, 1).concat(_helperGCH.dataF(c, (x % 1 + 1) / 2)); },\n    rpnCoarseTuning: function(c, m) { return _helperGCH.rpn(c, 0, 2).concat([_helperCH.dataMSB(c, m)]); },\n    rpnCoarseTuningF: function(c, x) { return _helperGCH.rpn(c, 0, 2).concat([_helperCH.dataMSB(c, 0x40 + (x - x % 1))]); },\n    rpnTuning: function(c, n, m, l) { return _helperGCH.rpnCoarseTuning(c, n).concat(_helperGCH.rpnFineTuning(c, m, l)); },\n    rpnTuningF: function(c, x) { return _helperGCH.rpnCoarseTuningF(c, x).concat(_helperGCH.rpnFineTuningF(c, x)); },\n    rpnTuningA: function(c, a) { return _helperGCH.rpnTuningF(c, MIDI.shift(a)); },\n    rpnSelectTuningProgram: function(c, n) { return _helperGCH.rpn(c, 0, 3).concat([_helperCH.dataMSB(c, n)]); },\n    rpnSelectTuningBank: function(c, n) { return _helperGCH.rpn(c, 0, 4).concat([_helperCH.dataMSB(c, n)]); },\n    rpnSelectTuning: function(c, n, k) { return typeof k == 'undefined' ?\n      _helperGCH.rpnSelectTuningProgram(c, n) : _helperGCH.rpnSelectTuningBank(c, n).concat(_helperGCH.rpnSelectTuningProgram(c, k)); },\n    rpnModulationDepthRange: function(c, m, l) { return _helperGCH.rpn(c, 0, 5).concat(_helperGCH.data(c, m, l)); },\n    rpnModulationDepthRangeF: function(c, x) { return _helperGCH.rpnModulationDepthRange(c, _7b(x - x % 1), Math.floor((x % 1) * 128)); },\n    rpnNull: function(c) { return _helperGCH.rpn(c, 0x7f, 0x7f); },\n    mode1: function(c) { return [ _helperCH.omni(c, true), _helperCH.poly(c) ]; },\n    mode2: function(c) { return [ _helperCH.omni(c, true), _helperCH.mono(c) ]; },\n    mode3: function(c) { return [ _helperCH.omni(c, false), _helperCH.poly(c) ]; },\n    mode4: function(c) { return [ _helperCH.omni(c, false), _helperCH.mono(c) ]; },\n  };\n  var _helperGNC = { // compound messages no channel\n    sxMasterTuning: function(n, m, l) { return [_helperNC.sxMasterCoarseTuning.call(this, n), _helperNC.sxMasterFineTuning.call(this, m, l)]; },\n    sxMasterTuningF: function(x) { return [_helperNC.sxMasterCoarseTuningF.call(this, x), _helperNC.sxMasterFineTuningF.call(this, x)]; },\n    gsMasterTuningF: function(x) { return [_helperNC.gsMasterCoarseTuningF.call(this, x), _helperNC.gsMasterFineTuningF.call(this, x)]; },\n    xgMasterTuningF: function(x) { return [_helperNC.xgMasterCoarseTuningF.call(this, x), _helperNC.xgMasterFineTuningF.call(this, x)]; },\n    sxMasterTuningA: function(a) { return _helperGNC.sxMasterTuningF.call(this, MIDI.shift(a)); },\n    gsMasterTuningA: function(a) { return _helperGNC.gsMasterTuningF.call(this, MIDI.shift(a)); },\n    xgMasterTuningA: function(a) { return _helperGNC.xgMasterTuningF.call(this, MIDI.shift(a)); },\n    gsScaleTuning: function(c, a) { var out = []; if (a.length != 12) throw RangeError('Wrong input size: ' + a.length);\n      for (var i = 0; i < 12; i++) out.push(_helperNC.gsOctaveTuning.call(this, c, i, a[i])); return out; },\n    gsScaleTuningF: function(c, a) { var out = []; if (a.length != 12) throw RangeError('Wrong input size: ' + a.length);\n      for (var i = 0; i < 12; i++) out.push(_helperNC.gsOctaveTuningF.call(this, c, i, a[i])); return out; },\n    xgScaleTuning: function(c, a) { var out = []; if (a.length != 12) throw RangeError('Wrong input size: ' + a.length);\n      for (var i = 0; i < 12; i++) out.push(_helperNC.xgOctaveTuning.call(this, c, i, a[i])); return out; },\n    xgScaleTuningF: function(c, a) { var out = []; if (a.length != 12) throw RangeError('Wrong input size: ' + a.length);\n      for (var i = 0; i < 12; i++) out.push(_helperNC.xgOctaveTuningF.call(this, c, i, a[i])); return out; },\n  };\n  function _smf(ff, dd) {\n    var midi = new MIDI();\n    midi.ff = _8b(ff);\n    midi.dd = typeof dd == 'undefined' ? '' : _8bs(dd);\n    return midi;\n  }\n  var _helperSMF = { // Standard MIDI File events\n    smf: function(arg) {\n      if (arg instanceof MIDI) return new MIDI(arg);\n      var arr = arg instanceof Array ? arg : arguments;\n      var ff = _8b(arr[0]);\n      var dd = '';\n      if (arr.length == 2) dd = _2s(arr[1]);\n      else if (arr.length > 2) dd = _2s(Array.prototype.slice.call(arr, 1));\n      return _smf(ff, dd);\n    },\n    smfSeqNumber: function(dd) {\n      if (dd == parseInt(dd)) {\n        if (dd < 0 || dd > 0xffff) throw RangeError('Sequence number out of range: ' + dd);\n        dd = String.fromCharCode(dd >> 8) + String.fromCharCode(dd & 0xff);\n      }\n      else {\n        dd = '' + dd;\n        if (dd.length == 0) dd = '\\x00\\x00';\n        else if (dd.length == 1) dd = '\\x00' + dd;\n        else if (dd.length > 2) throw RangeError('Sequence number out of range' + _smftxt(dd));\n      }\n      return _smf(0, dd);\n    },\n    smfText: function(dd) { return _smf(1, JZZ.lib.toUTF8(dd)); },\n    smfCopyright: function(dd) { return _smf(2, JZZ.lib.toUTF8(dd)); },\n    smfSeqName: function(dd) { return _smf(3, JZZ.lib.toUTF8(dd)); },\n    smfInstrName: function(dd) { return _smf(4, JZZ.lib.toUTF8(dd)); },\n    smfLyric: function(dd) { return _smf(5, JZZ.lib.toUTF8(dd)); },\n    smfMarker: function(dd) { return _smf(6, JZZ.lib.toUTF8(dd)); },\n    smfCuePoint: function(dd) { return _smf(7, JZZ.lib.toUTF8(dd)); },\n    smfProgName: function(dd) { return _smf(8, JZZ.lib.toUTF8(dd)); },\n    smfDevName: function(dd) { return _smf(9, JZZ.lib.toUTF8(dd)); },\n    smfChannelPrefix: function(dd) {\n      if (dd == parseInt(dd)) {\n        _validateChannel(dd);\n        dd = String.fromCharCode(dd);\n      }\n      else {\n        dd = '' + dd;\n        if (dd.length == 0) dd = '\\x00';\n        else if (dd.length > 1 || dd.charCodeAt(0) > 15) throw RangeError('Channel number out of range' + _smftxt(dd));\n      }\n      return _smf(32, dd);\n    },\n    smfMidiPort: function(dd) {\n      if (dd == parseInt(dd)) {\n        if (dd < 0 || dd > 127) throw RangeError('Port number out of range: ' + dd);\n        dd = String.fromCharCode(dd);\n      }\n      else {\n        dd = '' + dd;\n        if (dd.length == 0) dd = '\\x00';\n        else if (dd.length > 1 || dd.charCodeAt(0) > 127) throw RangeError('Port number out of range' + _smftxt(dd));\n      }\n      return _smf(33, dd);\n    },\n    smfEndOfTrack: function(dd) {\n      if (_2s(dd) != '') throw RangeError('Unexpected data' + _smftxt(_2s(dd)));\n      return _smf(47);\n    },\n    smfTempo: function(dd) { // microseconds per quarter note\n      if (('' + dd).length == 3) return _smf(81, dd);\n      if (dd == parseInt(dd) && dd > 0 && dd <= 0xffffff) {\n        return _smf(81, String.fromCharCode(dd >> 16) + String.fromCharCode((dd >> 8) & 0xff) + String.fromCharCode(dd & 0xff));\n      }\n      throw RangeError('Out of range' + _smftxt(_2s(dd)));\n    },\n    smfBPM: function(bpm) { return _helperSMF.smfTempo(Math.round(60000000.0 / bpm)); },\n    smfSMPTE: function(dd) {\n      if (dd instanceof SMPTE) return _smf(84, String.fromCharCode(dd.hour) + String.fromCharCode(dd.minute) + String.fromCharCode(dd.second) + String.fromCharCode(dd.frame) + String.fromCharCode((dd.quarter % 4) * 25));\n      var s = '' + dd;\n      if (s.length == 5) {\n        return _smf(84, dd);\n      }\n      var arr = dd instanceof Array ? dd : Array.prototype.slice.call(arguments);\n      arr.splice(0, 0, 30);\n      return _helperSMF.smfSMPTE(new SMPTE(arr));\n    },\n    smfTimeSignature: function(a, b, c, d) {\n      var nn, dd, cc, bb;\n      var m = ('' + a ).match(/^\\s*(\\d+)\\s*\\/\\s*(\\d+)\\s*$/);\n      if (m) {\n        nn = parseInt(m[1]);\n        dd = parseInt(m[2]);\n        if (nn > 0 && nn < 0x100 && dd > 0 && !(dd & (dd - 1))) {\n          cc = dd; dd = 0;\n          for (cc >>= 1; cc; cc >>= 1) dd++;\n          cc = b == parseInt(b) ? b : 24;\n          bb = c == parseInt(c) ? c : 8;\n          return _smf(88, String.fromCharCode(nn) + String.fromCharCode(dd) + String.fromCharCode(cc) + String.fromCharCode(bb));\n        }\n        else if (('' + a ).length == 4) return _smf(88, a);\n      }\n      else if (a == parseInt(a) && b == parseInt(b)) {\n        if (a > 0 && a < 0x100 && b > 0 && !(b & (b - 1))) {\n          nn = a;\n          dd = 0;\n          cc = b;\n          for (cc >>= 1; cc; cc >>= 1) dd++;\n          cc = c == parseInt(c) ? c : 24;\n          bb = d == parseInt(d) ? d : 8;\n          return _smf(88, String.fromCharCode(nn) + String.fromCharCode(dd) + String.fromCharCode(cc) + String.fromCharCode(bb));\n        }\n        else if (('' + a ).length == 4) return _smf(88, a);\n        a = a + '/' + b;\n      }\n      else if (('' + a ).length == 4) return _smf(88, a);\n      throw RangeError('Wrong time signature' + _smftxt(_2s('' + a)));\n    },\n    smfKeySignature: function(dd) {\n      dd = '' + dd;\n      var m = dd.match(/^\\s*([A-H][b#]?)\\s*(|maj|major|dur|m|min|minor|moll)\\s*$/i);\n      if (m) {\n        var sf = {\n          CB: 0, GB: 1, DB: 2, AB: 3, EB: 4, BB: 5, F: 6, C: 7, G: 8, D: 9, A: 10,\n          E:11, B: 12, H: 12, 'F#': 13, 'C#': 14, 'G#': 15, 'D#': 16, 'A#': 17\n        }[m[1].toUpperCase()];\n        var mi = { '': 0, MAJ: 0, MAJOR: 0, DUR: 0, M: 1, MIN: 1, MINOR: 1, MOLL: 1}[m[2].toUpperCase()];\n        if (typeof sf != 'undefined' && typeof mi != 'undefined') {\n          if (mi) sf -= 3;\n          sf -= 7;\n          if (sf >= -7 && sf < 0) dd = String.fromCharCode(256 + sf) + String.fromCharCode(mi);\n          else if (sf >= 0 && sf <= 7) dd = String.fromCharCode(sf) + String.fromCharCode(mi);\n        }\n      }\n      if (dd.length == 2 && dd.charCodeAt(1) <= 1 && (dd.charCodeAt(0) <= 7 || dd.charCodeAt(0) <= 255 && dd.charCodeAt(0) >= 249)) return _smf(89, dd);\n      throw RangeError('Incorrect key signature' + _smftxt(dd));\n    },\n    smfSequencer: function(dd) { return _smf(127, _2s(dd)); }\n  };\n\n  var _helpers = {};\n  function _copyHelperNC(name, func) {\n    MIDI[name] = function() { return new MIDI(func.apply(this, arguments)); };\n    _helpers[name] = function() { return this.send(func.apply(this, arguments)); };\n  }\n  function _copyHelperSMF(name, func) {\n    MIDI[name] = function() { return func.apply(this, arguments); };\n    _helpers[name] = function() { return this.send(func.apply(this, arguments)); };\n  }\n  function _copyHelperGNC(name, func) {\n    MIDI[name] = function() {\n      var i;\n      var g = [];\n      var a = func.apply(this, arguments);\n      for (i = 0; i < a.length; i++) g.push(new MIDI(a[i]));\n      return g;\n    };\n    _helpers[name] = function() {\n      var a = func.apply(this, arguments);\n      var g = this;\n      for (var i = 0; i < a.length; i++) g = g.send(a[i]);\n      return g;\n    };\n  }\n  function _copyHelperMPE(name, func) {\n    MIDI[name] = function() {\n      return new MIDI(func.apply(this, typeof this._ch == 'undefined' ? arguments : [this._ch].concat(Array.prototype.slice.call(arguments))));\n    };\n    _helpers[name] = function() {\n      if (typeof this._master != 'undefined') {\n        var msg = new MIDI(func.apply(this, [this._master].concat(Array.prototype.slice.call(arguments))));\n        msg._mpe = msg[1];\n        return this.send(msg);\n      }\n      return this.send(func.apply(this, typeof this._ch == 'undefined' ? arguments : [this._ch].concat(Array.prototype.slice.call(arguments))));\n    };\n  }\n  function _copyHelperCH(name, func) {\n    MIDI[name] = function() {\n      return new MIDI(func.apply(this, typeof this._ch == 'undefined' ? arguments : [this._ch].concat(Array.prototype.slice.call(arguments))));\n    };\n    _helpers[name] = function() {\n      if (typeof this._master != 'undefined') {\n        var chan;\n        var args = Array.prototype.slice.call(arguments);\n        if (args.length < func.length) args = [this._master].concat(args);\n        else {\n          chan = _7bn(args[0]);\n          args[0] = this._master;\n        }\n        var msg = new MIDI(func.apply(this, args));\n        msg._mpe = chan;\n        return this.send(msg);\n      }\n      return this.send(func.apply(this, typeof this._ch == 'undefined' ? arguments : [this._ch].concat(Array.prototype.slice.call(arguments))));\n    };\n  }\n  function _copyHelperGCH(name, func) {\n    MIDI[name] = function() {\n      var i;\n      var g = [];\n      var a = func.apply(this, typeof this._ch == 'undefined' ? arguments : [this._ch].concat(Array.prototype.slice.call(arguments)));\n      for (i = 0; i < a.length; i++) g.push(new MIDI(a[i]));\n      return g;\n    };\n    _helpers[name] = function() {\n      var i;\n      var a;\n      var g;\n      if (typeof this._master != 'undefined') {\n        var chan;\n        var args = Array.prototype.slice.call(arguments);\n        if (args.length < func.length) args = [this._master].concat(args);\n        else {\n          chan = _7bn(args[0]);\n          args[0] = this._master;\n        }\n        a = func.apply(this, args);\n        g = this;\n        for (i = 0; i < a.length; i++) {\n          var msg = MIDI(a[i]);\n          msg._mpe = chan;\n          g = g.send(msg);\n        }\n        return g;\n      }\n      a = func.apply(this, typeof this._ch == 'undefined' ? arguments : [this._ch].concat(Array.prototype.slice.call(arguments)));\n      g = this;\n      for (i = 0; i < a.length; i++) g = g.send(a[i]);\n      return g;\n    };\n  }\n\n  _for(_helperNC, function(n) { _copyHelperNC(n, _helperNC[n]); });\n  _for(_helperSMF, function(n) { _copyHelperSMF(n, _helperSMF[n]); });\n  _for(_helperGNC, function(n) { _copyHelperGNC(n, _helperGNC[n]); });\n  _for(_helperMPE, function(n) { _copyHelperMPE(n, _helperMPE[n]); });\n  _for(_helperCH, function(n) { _copyHelperCH(n, _helperCH[n]); });\n  _for(_helperGCH, function(n) { _copyHelperGCH(n, _helperGCH[n]); });\n\n  function _copyMidiHelpers(M) {\n    _for(_helpers, function(n) { M.prototype[n] = _helpers[n]; });\n  }\n  _copyMidiHelpers(_M);\n\n  var _channelMap = { a:10, b:11, c:12, d:13, e:14, f:15, A:10, B:11, C:12, D:13, E:14, F:15 };\n  for (k = 0; k < 16; k++) _channelMap[k] = k;\n  MIDI.prototype.getChannel = function() {\n    if (this.ff == 0x20 && this.dd.length == 1 && this.dd.charCodeAt(0) < 16) return this.dd.charCodeAt(0);\n    var c = this[0];\n    if (typeof c == 'undefined' || c < 0x80 || c > 0xef) return;\n    return c & 15;\n  };\n  MIDI.prototype.setChannel = function(x) {\n    x = _channelMap[x];\n    if (typeof x == 'undefined') return this;\n    if (this.ff == 0x20) this.dd = String.fromCharCode(x);\n    else {\n      var c = this[0];\n      if (typeof c != 'undefined' && c >= 0x80 && c <= 0xef) this[0] = (c & 0xf0) | x;\n    }\n    return this;\n  };\n  MIDI.prototype.getNote = function() {\n    var c = this[0];\n    if (typeof c == 'undefined' || c < 0x80 || c > 0xaf) return;\n    return this[1];\n  };\n  MIDI.prototype.setNote = function(x) {\n    var c = this[0];\n    if (typeof c == 'undefined' || c < 0x80 || c > 0xaf) return this;\n    x = MIDI.noteValue(x);\n    if (typeof x != 'undefined') this[1] = x;\n    return this;\n  };\n  MIDI.prototype.getVelocity = function() {\n    var c = this[0];\n    if (typeof c == 'undefined' || c < 0x80 || c > 0x9f) return;\n    return this[2];\n  };\n  MIDI.prototype.setVelocity = function(x) {\n    var c = this[0];\n    if (typeof c == 'undefined' || c < 0x80 || c > 0x9f) return this;\n    x = parseInt(x);\n    if (x >= 0 && x < 128) this[2] = x;\n    return this;\n  };\n  MIDI.prototype.getSysExId = function() {\n    if (this[0] == 0xf0) return this[2];\n  };\n  MIDI.prototype.setSysExId = function(x) {\n    if (this[0] == 0xf0 && this.length > 2) {\n      x = parseInt(x);\n      if (x >= 0 && x < 128) this[2] = x;\n    }\n    return this;\n  };\n  MIDI.prototype.getData = function() {\n    if (typeof this.dd != 'undefined') return this.dd.toString();\n  };\n  MIDI.prototype.setData = function(dd) {\n    this.dd = _2s(dd);\n    return this;\n  };\n  function _is_yamaha_smf(ff, dd) { return ff == 0x7f && typeof dd != 'undefined' && dd.charCodeAt(0) == 0x43 && dd.charCodeAt(1) == 0x7b; }\n  function _is_yamaha_chord(ff, dd) { return _is_yamaha_smf(ff, dd) && dd.charCodeAt(2) == 1; }\n  function _yamaha_chord(a, b) {\n    if (a >= 0 && a <= 0x7f && b >= 0 && b <= 0x7f) {\n      var c = a & 0xf;\n      var d = a >> 4;\n      if (c > 0 && c < 8 && d < 7) c = ['C', 'D', 'E', 'F', 'G', 'A', 'B'][c - 1] + ['bbb', 'bb', 'b', '', '#', '##', '###'][d];\n      else return '-';\n      if (b > 34) return c + '?';\n      else return c + [\n        '', '6', 'Maj7', 'Maj7(#11)', '(9)', 'Maj7(9)', '6(9)', 'aug', 'm', 'm6', 'm7', 'm7b5',\n        'm(9)', 'm7(9)', 'm7(11)', 'm+7', 'm+7(9)', 'dim', 'dim7', '7', '7sus4', '7b5', '7(9)',\n        '7(#11)', '7(13)', '7(b9)', '7(b13)', '7(#9)', 'Maj7aug', '7aug', '1+8', '1+5', 'sus4', '1+2+5', 'cc'][b];\n    }\n    return '-';\n  }\n  MIDI.prototype.getText = function() {\n    if (typeof this.dd != 'undefined') {\n      if (_is_yamaha_chord(this.ff, this.dd)) return _yamaha_chord(this.dd.charCodeAt(3), this.dd.charCodeAt(4));\n      else return JZZ.lib.fromUTF8(this.dd);\n    }\n    if (this.isMidiSoft()) {\n      var s = [];\n      for (var i = 6; i < this.length - 1; i++) s.push(String.fromCharCode(this[i]));\n      return s.join('');\n    }\n  };\n  MIDI.prototype.setText = function(dd) {\n    this.dd = JZZ.lib.toUTF8(dd);\n    return this;\n  };\n  MIDI.prototype.getTempo = function() {\n    if (this.ff == 0x51 && typeof this.dd != 'undefined') {\n      return this.dd.charCodeAt(0) * 65536 + this.dd.charCodeAt(1) * 256 + this.dd.charCodeAt(2);\n    }\n  };\n  MIDI.prototype.getBPM = function() {\n    var ms = this.getTempo();\n    if (ms) return 60000000 / ms;\n  };\n  MIDI.prototype.getTimeSignature = function() {\n    if (this.ff == 0x58 && typeof this.dd != 'undefined') {\n       return [this.dd.charCodeAt(0), 1 << this.dd.charCodeAt(1)];\n    }\n  };\n  MIDI.prototype.getKeySignature = function() {\n    if (this.ff == 0x59 && typeof this.dd != 'undefined') {\n      var sf = this.dd.charCodeAt(0);\n      var mi = this.dd.charCodeAt(1);\n      if (sf & 0x80) sf = sf - 0x100;\n      if (sf >= -7 && sf <= 7 && mi >= 0 && mi <= 1) {\n        return [sf,\n          ['Cb', 'Gb', 'Db', 'Ab', 'Eb', 'Bb', 'F', 'C', 'G', 'D', 'A', 'E', 'B', 'F#', 'C#', 'G#', 'D#', 'A#'][mi ? sf + 10 : sf + 7],\n          !!mi\n        ];\n      }\n    }\n  };\n\n  MIDI.prototype.isNoteOn = function() {\n    var c = this[0];\n    if (typeof c == 'undefined' || c < 0x90 || c > 0x9f) return false;\n    return this[2] > 0 ? true : false;\n  };\n  MIDI.prototype.isNoteOff = function() {\n    var c = this[0];\n    if (typeof c == 'undefined' || c < 0x80 || c > 0x9f) return false;\n    if (c < 0x90) return true;\n    return this[2] == 0 ? true : false;\n  };\n  MIDI.prototype.isSysEx = function() {\n    return this[0] == 0xf0;\n  };\n  MIDI.prototype.isFullSysEx = function() {\n    return this[0] == 0xf0 && this[this.length - 1] == 0xf7;\n  };\n  MIDI.prototype.isMidiSoft = function() {\n    return this.isFullSysEx() && this[1] == 0 && this[2] == 0x20 && this[3] == 0x24 && this[4] == 0;\n  };\n  MIDI.prototype.isSMF = function() {\n    return this.ff >= 0 && this.ff <= 0x7f;\n  };\n  MIDI.prototype.isEOT = function() {\n    return this.ff == 0x2f;\n  };\n  MIDI.prototype.isTempo = function() {\n    return this.ff == 0x51;\n  };\n  MIDI.prototype.isTimeSignature = function() {\n    return this.ff == 0x58;\n  };\n  MIDI.prototype.isKeySignature = function() {\n    return this.ff == 0x59;\n  };\n  MIDI.prototype.isGmReset = function() {\n    return this.match([0xf0, 0x7e, [0, 0], 0x09, [0, 0], 0xf7]);\n  };\n  MIDI.prototype.isGsReset = function() {\n    return this.match([0xf0, 0x41, [0, 0], 0x42, 0x12, 0x40, 0, 0x7f, 0, 0x41, 0xf7]);\n  };\n  MIDI.prototype.isXgReset = function() {\n    return this.match([0xf0, 0x43, [0x10, 0xf0], 0x4c, 0, 0, 0x7e, 0, 0xf7]);\n  };\n  MIDI.prototype.match = function(a) {\n    var i, m;\n    for (i = 0; i < a.length; i++) {\n      m = a[i][1];\n      if (typeof m == 'undefined') {\n        if (this[i] != a[i]) return false;\n      }\n      else {\n        if ((this[i] & m) != (a[i][0] & m)) return false;\n      }\n    }\n    return true;\n  };\n\n  function _s2a(x) {\n    var a = [];\n    for (var i = 0; i < x.length; i++) {\n      a[i] = x.charCodeAt(i);\n    }\n    return a;\n  }\n  function _a2s(x) {\n    var a = '';\n    for (var i = 0; i < x.length; i++) {\n      a += String.fromCharCode(x[i]);\n    }\n    return a;\n  }\n  function _2s(x) {\n    return x instanceof Array ? _a2s(x) : typeof x == 'undefined' ? '' : '' + x;\n  }\n  function _s2n(x) {\n    var n = 0;\n    for (var i = 0; i < x.length; i++) n = (n << 8) + x.charCodeAt(i);\n    return n;\n  }\n\n  function __hex(x) { return (x < 16 ? '0' : '') + x.toString(16); }\n  function _hex(x) {\n    var a = [];\n    for (var i = 0; i < x.length; i++) {\n      a[i] = __hex(x[i]);\n    }\n    return a.join(' ');\n  }\n  function _toLine(s) {\n    var out = '';\n    for (var i = 0; i < s.length; i++) {\n      if (s[i] == '\\n') out += '\\\\n';\n      else if (s[i] == '\\r') out += '\\\\r';\n      else if (s[i] == '\\t') out += '\\\\t';\n      else if (s.charCodeAt(i) < 32) out += '\\\\x' + __hex(s.charCodeAt(i));\n      else out += s[i];\n    }\n    return out;\n  }\n  function _smfhex(dd) {\n    return dd.length ? ': ' + _hex(_s2a(dd)) : '';\n  }\n  function _smftxt(dd) {\n    return dd.length ? ': ' + _toLine(JZZ.lib.fromUTF8(dd)) : '';\n  }\n  MIDI.prototype.label = function(s) {\n    this.lbl = this.lbl ? this.lbl + ', ' + s : s;\n    return this;\n  };\n  MIDI.prototype.toString = function() {\n    return this.lbl ? this._str() + ' (' + this.lbl + ')' : this._str();\n  };\n  MIDI.prototype._str = function() {\n    var s;\n    var ss;\n    if (!this.length) {\n      if (typeof this.ff != 'undefined') {\n        s = 'ff' + __hex(this.ff) + ' -- ';\n        if (this.ff == 0) s += 'Sequence Number: ' + _s2n(this.dd);\n        else if (this.ff > 0 && this.ff < 10) s += ['', 'Text', 'Copyright', 'Sequence Name', 'Instrument Name', 'Lyric', 'Marker', 'Cue Point', 'Program Name', 'Device Name'][this.ff] + _smftxt(this.dd);\n        else if (this.ff == 32) s += 'Channel Prefix' + _smfhex(this.dd);\n        else if (this.ff == 33) s += 'MIDI Port' + _smfhex(this.dd);\n        else if (this.ff == 47) s += 'End of Track' + _smfhex(this.dd);\n        else if (this.ff == 81) {\n          var bpm = Math.round(this.getBPM() * 100) / 100;\n          s += 'Tempo: ' + bpm + ' bpm';\n        }\n        else if (this.ff == 84) s += 'SMPTE Offset: ' + _smptetxt(_s2a(this.dd));\n        else if (this.ff == 88) {\n          var d = 1 << this.dd.charCodeAt(1);\n          s += 'Time Signature: ' + this.dd.charCodeAt(0) + '/' + d;\n          s += ' ' + this.dd.charCodeAt(2) + ' ' + this.dd.charCodeAt(3);\n        }\n        else if (this.ff == 89) {\n          s += 'Key Signature: ';\n          var ks = this.getKeySignature();\n          if (ks) {\n            s += ks[1];\n            if (ks[2]) s += ' min';\n          }\n          else s+= 'invalid';\n        }\n        else if (this.ff == 127) {\n          if (this.dd.charCodeAt(0) == 0x43) {\n            if (this.dd.charCodeAt(1) == 0x7b) {\n              s += '[XF:' + __hex(this.dd.charCodeAt(2)) + ']';\n              ss = { 0: 'Version', 1: 'Chord', 2: 'Rehearsal Mark', 3: 'Phrase Mark', 4: 'Max Phrase Mark',\n                5: 'Fingering Number', 12: 'Guide Track Flag', 16: 'Guitar Info', 18: 'Chord Voicing',\n                127: 'XG Song Data Number' }[this.dd.charCodeAt(2)];\n              s += ss ? ' ' + ss : '';\n              s += ': ';\n              if (this.dd.charCodeAt(2) == 0) {\n                return s + this.dd.substr(3, 4) + ' ' + _hex(_s2a(this.dd.substr(7)));\n              }\n              if (this.dd.charCodeAt(2) == 1) {\n                return s + this.getText();\n              }\n              return s + _hex(_s2a(this.dd.substr(3)));\n            }\n          }\n          s += 'Sequencer Specific' + _smfhex(this.dd);\n        }\n        else s += 'SMF' + _smfhex(this.dd);\n        return s;\n      }\n      return 'empty';\n    }\n    s = _hex(this);\n    if (this[0] < 0x80) return s;\n    ss = {\n      241: 'MIDI Time Code',\n      242: 'Song Position',\n      243: 'Song Select',\n      244: 'Undefined',\n      245: 'Undefined',\n      246: 'Tune request',\n      248: 'Timing clock',\n      249: 'Undefined',\n      250: 'Start',\n      251: 'Continue',\n      252: 'Stop',\n      253: 'Undefined',\n      254: 'Active Sensing',\n      255: 'Reset'\n    }[this[0]];\n    if (ss) return s + ' -- ' + ss;\n    if (this.isMidiSoft()) {\n      ss = _toLine(this.getText());\n      if (ss) ss = ' ' + ss;\n      return s + ' -- [K:' + __hex(this[5]) + ']' + ss;\n    }\n    var c = this[0] >> 4;\n    ss = {8: 'Note Off', 10: 'Aftertouch', 12: 'Program Change', 13: 'Channel Aftertouch', 14: 'Pitch Wheel'}[c];\n    if (ss) return s + ' -- ' + ss;\n    if (c == 9) return s + ' -- ' + (this[2] ? 'Note On' : 'Note Off');\n    if (c != 11) return s;\n    ss = {\n      0: 'Bank Select MSB',\n      1: 'Modulation Wheel MSB',\n      2: 'Breath Controller MSB',\n      4: 'Foot Controller MSB',\n      5: 'Portamento Time MSB',\n      6: 'Data Entry MSB',\n      7: 'Channel Volume MSB',\n      8: 'Balance MSB',\n      10: 'Pan MSB',\n      11: 'Expression Controller MSB',\n      12: 'Effect Control 1 MSB',\n      13: 'Effect Control 2 MSB',\n      16: 'General Purpose Controller 1 MSB',\n      17: 'General Purpose Controller 2 MSB',\n      18: 'General Purpose Controller 3 MSB',\n      19: 'General Purpose Controller 4 MSB',\n      31: 'Karaoke',\n      32: 'Bank Select LSB',\n      33: 'Modulation Wheel LSB',\n      34: 'Breath Controller LSB',\n      36: 'Foot Controller LSB',\n      37: 'Portamento Time LSB',\n      38: 'Data Entry LSB',\n      39: 'Channel Volume LSB',\n      40: 'Balance LSB',\n      42: 'Pan LSB',\n      43: 'Expression Controller LSB',\n      44: 'Effect control 1 LSB',\n      45: 'Effect control 2 LSB',\n      48: 'General Purpose Controller 1 LSB',\n      49: 'General Purpose Controller 2 LSB',\n      50: 'General Purpose Controller 3 LSB',\n      51: 'General Purpose Controller 4 LSB',\n      64: 'Damper Pedal',\n      65: 'Portamento',\n      66: 'Sostenuto',\n      67: 'Soft Pedal',\n      68: 'Legato',\n      69: 'Hold 2',\n      70: 'Sound Variation',\n      71: 'Filter Resonance',\n      72: 'Release Time',\n      73: 'Attack Time',\n      74: 'Brightness',\n      75: 'Decay Time',\n      76: 'Vibrato Rate',\n      77: 'Vibrato Depth',\n      78: 'Vibrato Delay',\n      79: 'Sound Controller 10',\n      80: 'General Purpose Controller 5',\n      81: 'General Purpose Controller 6',\n      82: 'General Purpose Controller 7',\n      83: 'General Purpose Controller 8',\n      84: 'Portamento Control',\n      88: 'High Resolution Velocity Prefix',\n      91: 'Effects 1 Depth',\n      92: 'Effects 2 Depth',\n      93: 'Effects 3 Depth',\n      94: 'Effects 4 Depth',\n      95: 'Effects 5 Depth',\n      96: 'Data Increment',\n      97: 'Data Decrement',\n      98: 'Non-Registered Parameter Number LSB',\n      99: 'Non-Registered Parameter Number MSB',\n      100: 'Registered Parameter Number LSB',\n      101: 'Registered Parameter Number MSB',\n      120: 'All Sound Off',\n      121: 'Reset All Controllers',\n      122: 'Local Control On/Off',\n      123: 'All Notes Off',\n      124: 'Omni Mode Off',\n      125: 'Omni Mode On',\n      126: 'Mono Mode On',\n      127: 'Poly Mode On'\n    }[this[1]];\n    if (this[1] >= 64 && this[1] <= 69) ss += this[2] < 64 ? ' Off' : ' On';\n    if (!ss) ss = 'Undefined';\n    return s + ' -- ' + ss;\n  };\n  MIDI.prototype._stamp = function(obj) { this._from.push(obj._orig ? obj._orig : obj); return this; };\n  MIDI.prototype._unstamp = function(obj) {\n    if (typeof obj == 'undefined') this._from = [];\n    else {\n      if (obj._orig) obj = obj._orig;\n      var i = this._from.indexOf(obj);\n      if (i > -1) this._from.splice(i, 1);\n    }\n    return this;\n  };\n  MIDI.prototype._stamped = function(obj) {\n    if (obj._orig) obj = obj._orig;\n    for (var i = 0; i < this._from.length; i++) if (this._from[i] == obj) return true;\n    return false;\n  };\n\n  JZZ.MIDI = MIDI;\n  _J.prototype.MIDI = MIDI;\n\n  function _clear_ctxt() {\n    var i;\n    this._cc = [];\n    for (i = 0; i < 16; i++) this._cc[i] = {};\n  }\n  function _rpn_txt(msb, lsb) {\n    var a = typeof msb == 'undefined' ? '??' : __hex(msb);\n    var b = typeof lsb == 'undefined' ? '??' : __hex(lsb);\n    var c = {\n      '0000': 'Pitch Bend Sensitivity',\n      '0001': 'Channel Fine Tune',\n      '0002': 'Channel Coarse Tune',\n      '0003': 'Select Tuning Program',\n      '0004': 'Select Tuning Bank',\n      '0005': 'Vibrato Depth Range',\n      '7f7f': 'NONE'\n    }[a + '' + b];\n    return 'RPN ' + a + ' ' + b + (c ? ': ' + c : '');\n  }\n  function _nrpn_txt(msb, lsb) {\n    var a = typeof msb == 'undefined' ? '??' : __hex(msb);\n    var b = typeof lsb == 'undefined' ? '??' : __hex(lsb);\n    return 'NRPN ' + a + ' ' + b;\n  }\n  function _read_ctxt(msg) {\n    if (!msg.length || msg[0] < 0x80) return msg;\n    if (msg[0] == 0xff) { this._clear(); return msg; }\n    var ch = msg[0] & 15;\n    var st = msg[0] >> 4;\n    var s;\n    if (st == 12) {\n      msg._bm = this._cc[ch].bm;\n      msg._bl = this._cc[ch].bl;\n      if (JZZ.MIDI.programName) msg.label(JZZ.MIDI.programName(msg[1], msg._bm, msg._bl));\n    }\n    else if (st == 11) {\n      switch (msg[1]) {\n        case 0: this._cc[ch].bm = msg[2]; break;\n        case 32: this._cc[ch].bl = msg[2]; break;\n        case 98: this._cc[ch].nl = msg[2]; this._cc[ch].rn = 'n'; break;\n        case 99: this._cc[ch].nm = msg[2]; this._cc[ch].rn = 'n'; break;\n        case 100: this._cc[ch].rl = msg[2]; this._cc[ch].rn = 'r'; break;\n        case 101: this._cc[ch].rm = msg[2]; this._cc[ch].rn = 'r'; break;\n        case 6: case 38: case 96: case 97:\n          if (this._cc[ch].rn == 'r') {\n            msg._rm = this._cc[ch].rm;\n            msg._rl = this._cc[ch].rl;\n            msg.label(_rpn_txt(this._cc[ch].rm, this._cc[ch].rl));\n          }\n          if (this._cc[ch].rn == 'n') {\n            msg._nm = this._cc[ch].rm;\n            msg._nl = this._cc[ch].nl;\n            msg.label(_nrpn_txt(this._cc[ch].nm, this._cc[ch].nl));\n          }\n          break;\n      }\n    }\n    else if (msg.isFullSysEx()) {\n      if (msg[1] == 0x7f) {\n        if (msg[3] == 4) {\n          s = { 1: 'Master Volume', 2: 'Master Balance', 3: 'Master Fine Tuning', 4: 'Master Coarse Tuning' }[msg[4]];\n          if (s) msg.label(s);\n        }\n        else if (msg[3] == 8) {\n          s = { 2: 'Note Tuning', 7: 'Note Tuning, Bank', 8: 'Scale Tuning, 1 byte format', 9: 'Scale Tuning, 2 byte format' }[msg[4]];\n          if (s) msg.label(s);\n        }\n      }\n      else if (msg[1] == 0x7e) {\n        if (msg[3] == 6) {\n          if (msg[4] == 1) msg.label('Device ID Request');\n          else if (msg[4] == 2) {\n            msg.label('Device ID Response');\n          }\n        }\n        else if (msg[3] == 8) {\n          s = {\n            0: 'Bulk Tuning Dump Request', 1: 'Bulk Tuning Dump', 3: 'Bulk Tuning Dump Request, Bank', 4: 'Bulk Tuning Dump, Bank',\n            5: 'Scale Tuning Dump, 1 byte format', 6: 'Scale Tuning Dump, 2 byte format',\n            7: 'Note Tuning, Bank', 8: 'Scale Tuning, 1 byte format', 9: 'Scale Tuning, 2 byte format'\n          }[msg[4]];\n          if (s) msg.label(s);\n        }\n        else if (msg[3] == 9) {\n          if (msg[4] == 1) { msg.label('GM1 System On'); this._clear(); this._gm = '1'; }\n          else if (msg[4] == 2) { msg.label('GM System Off'); this._clear(); this._gm = '0'; }\n          else if (msg[4] == 3) { msg.label('GM2 System On'); this._clear(); this._gm = '2'; }\n        }\n      }\n      else if (msg[1] == 0x43) {\n        if ((msg[2] & 0xf0) == 0x10 && msg[3] == 0x4c) {\n          if (msg[4] == 0 && msg[5] == 0 && msg[6] == 0x7e && msg[7] == 0) {\n            msg.label('XG System On'); this._clear(); this._gm = 'Y';\n          }\n          else if (msg[4] == 0 && msg[5] == 0 && msg[6] == 0) msg.label('XG Master Tuning');\n          else if (msg[4] == 0 && msg[5] == 0 && msg[6] == 4) msg.label('XG Master Volume');\n          else if (msg[4] == 0 && msg[5] == 0 && msg[6] == 6) msg.label('XG Master Transpose');\n          else if (msg[4] == 8 && msg[5] < 16 && msg[6] >= 0x41 && msg[6] <= 0x4c) msg.label('XG Scale Tuning');\n          else  msg.label('XG Parameter');\n        }\n      }\n      else if (msg[1] == 0x41) {\n        if (msg[3] == 0x42 && msg[4] == 0x12) {\n          if (msg[5] == 0x40) {\n            if (msg[6] == 0) {\n              if (msg[7] == 0x7f && msg[8] == 0 && msg[9] == 0x41) {\n                msg.label('GS Reset'); this._clear(); this._gm = 'R';\n              }\n              else if (msg[7] == 0) msg.label('GS Master Tuning');\n              else if (msg[7] == 4) msg.label('GS Master Volume');\n              else if (msg[7] == 5) msg.label('GS Master Transpose');\n              else msg.label('GS Parameter');\n            }\n            else if ((msg[6] & 0xf0) == 0x10 && msg[7] == 0x15) msg.label('GS Drum Part Change');\n            else if ((msg[6] & 0xf0) == 0x10 && msg[7] >= 0x40 && msg[7] <= 0x4b) msg.label('GS Scale Tuning');\n            else msg.label('GS Parameter');\n          }\n          if (msg[5] == 0x41) msg.label('GS Parameter');\n        }\n      }\n    }\n    return msg;\n  }\n  function Context() {\n    var self = new _M();\n    self._clear = _clear_ctxt;\n    self._read = _read_ctxt;\n    self._receive = function(msg) { this._emit(this._read(msg)); };\n    self._clear();\n    self._resume();\n    return self;\n  }\n  JZZ.Context = Context;\n  _J.prototype.Context = Context;\n\n  function MPE() {\n    var self = this instanceof MPE ? this : self = new MPE();\n    self.reset();\n    if (arguments.length) MPE.prototype.setup.apply(self, arguments);\n    return self;\n  }\n  MPE.validate = function(arg) {\n    var a = arg instanceof Array ? arg : arguments;\n    if (a[0] != parseInt(a[0]) || a[0] < 0 || a[0] > 14) throw RangeError('Bad master channel value: ' + a[0]);\n    if (a[1] != parseInt(a[1]) || a[1] < 0 || a[0] + a[1] > 15) throw RangeError('Bad zone size value: ' + a[1]);\n  };\n  MPE.prototype.reset = function() { for (var n = 0; n < 16; n++) this[n] = { band: 0, master: n }; };\n  MPE.prototype.setup = function(m, n) {\n    MPE.validate(m, n);\n    var k;\n    var last = m + n;\n    if (this[m].master == m && this[m].band == n) return;\n    if (!n && !this[m].band) return;\n    if (this[m].band) {\n      k = m + this[m].band;\n      if (last < k) last = k;\n    }\n    else if (this[m].master == m - 1) {\n      k = m - 1;\n      k = k + this[k].band;\n      if (last < k) last = k;\n      this[m - 1] = { band: 0, master: m - 1 };\n    }\n    else if (this[m].master != m) {\n      k = this[m].master;\n      k = k + this[k].band;\n      if (last < k) last = k;\n      this[this[m].master].band = m - this[m].master - 1;\n    }\n    this[m].master = m;\n    this[m].band = n;\n    for (k = m + 1; k <= m + n; k++) {\n      if (this[k].band && last < k + this[k].band) last = k + this[k].band;\n      this[k] = { band: 0, master: m };\n    }\n    for (; k <= last; k++) this[k] = { band: 0, master: k };\n  };\n  MPE.prototype.filter = function(msg) {\n    var c = msg.getChannel();\n    if (!this[c] || !this[this[c].master].band) return msg;\n    var m = this[c].master;\n    var n = this[m].band;\n    var i, j, k;\n    if (typeof msg._mpe != 'undefined') {\n      k = 256;\n      for (i = m + 1; i <= m + n; i++) {\n        if (!this[i].notes) {\n          if (k > 0) { c = i; k = 0; }\n        }\n        else {\n          if (k > this[i].notes.length) { c = i; k = this[i].notes.length; }\n          for (j = 0; j < this[i].notes.length; j++) {\n            if (this[i].notes[j] == msg._mpe) { c = i; k = -1; break; }\n          }\n        }\n      }\n      msg.setChannel(c);\n      msg._mpe = undefined;\n    }\n    if (c == m) return msg; // bad mpe\n    if (msg.isNoteOn()) {\n      if (!this[c].notes) this[c].notes = [];\n      _push(this[c].notes, msg.getNote());\n    }\n    else if (msg.isNoteOff()) {\n      if (this[c].notes) _pop(this[c].notes, msg.getNote());\n    }\n    return msg;\n  };\n  JZZ.MPE = MPE;\n\n  JZZ.lib = {};\n  JZZ.lib.now = _now;\n  JZZ.lib.schedule = _schedule;\n  var _sch_list = [];\n  var _sch_worker;\n  var _sch_count = 0;\n  try {\n    var _blob = URL.createObjectURL(new Blob(['(', function() {\n      function tick() {\n        postMessage({});\n        setTimeout(tick, 0);\n      }\n      tick();\n    }.toString(), ')()'], { type: 'application/javascript' }));\n    var _sch_tick = function() {\n      var n = _sch_list.length;\n      // cannot use i < _sch_list.length !\n      for (var i = 0; i < n; i++) _sch_list.shift()();\n      _sch_count++;\n      if (_sch_count > 20 && _sch_worker) {\n        _sch_worker.terminate();\n        _sch_worker = undefined;\n      }\n    };\n    var _sch = function(x) {\n      _sch_list.push(x);\n      _sch_count = 0;\n      if (!_sch_worker) {\n        _sch_worker = new Worker(_blob);\n        _sch_worker.onmessage = _sch_tick;\n      }\n    };\n    _sch(function() { JZZ.lib.schedule = _sch; });\n  }\n  catch (e) {}\n\n  JZZ.lib.openMidiOut = function(name, engine) {\n    var port = new _M();\n    engine._openOut(port);\n    port._info = engine._info(name);\n    return port;\n  };\n  JZZ.lib.openMidiIn = function(name, engine) {\n    var port = new _M();\n    engine._openIn(port);\n    port._info = engine._info(name);\n    return port;\n  };\n  JZZ.lib.registerMidiOut = function(name, engine) {\n    var x = engine._info(name);\n    for (var i = 0; i < _virtual._outs.length; i++) if (_virtual._outs[i].name == x.name) return false;\n    x.engine = engine;\n    _virtual._outs.push(x);\n    if (_jzz) {\n      _postRefresh();\n      if (_jzz._bad) { _jzz._repair(); _jzz._resume(); }\n    }\n    return true;\n  };\n  JZZ.lib.registerMidiIn = function(name, engine) {\n    var x = engine._info(name);\n    for (var i = 0; i < _virtual._ins.length; i++) if (_virtual._ins[i].name == x.name) return false;\n    x.engine = engine;\n    _virtual._ins.push(x);\n    if (_jzz) {\n      _postRefresh();\n      if (_jzz._bad) { _jzz._repair(); _jzz._resume(); }\n    }\n    return true;\n  };\n  var _ac;\n  function _initAudioContext() {\n    if (!_ac && typeof window !== 'undefined') {\n      var AudioContext = window.AudioContext || window.webkitAudioContext;\n      if (AudioContext) {\n        _ac = new AudioContext();\n        if (_ac && !_ac.createGain) _ac.createGain = _ac.createGainNode;\n        var _activateAudioContext = function() {\n          if (_ac.state != 'running') {\n            _ac.resume();\n            var osc = _ac.createOscillator();\n            var gain = _ac.createGain();\n            try { gain.gain.value = 0; } catch (err) {}\n            gain.gain.setTargetAtTime(0, _ac.currentTime, 0.01);\n            osc.connect(gain);\n            gain.connect(_ac.destination);\n            if (!osc.start) osc.start = osc.noteOn;\n            if (!osc.stop) osc.stop = osc.noteOff;\n            osc.start(0.1); osc.stop(0.11);\n          }\n          else if (typeof document != 'undefined') {\n            document.removeEventListener('touchstart', _activateAudioContext);\n            document.removeEventListener('touchend', _activateAudioContext);\n            document.removeEventListener('mousedown', _activateAudioContext);\n            document.removeEventListener('keydown', _activateAudioContext);\n          }\n        };\n        if (typeof document != 'undefined') {\n          document.addEventListener('touchstart', _activateAudioContext);\n          document.addEventListener('touchend', _activateAudioContext);\n          document.addEventListener('mousedown', _activateAudioContext);\n          document.addEventListener('keydown', _activateAudioContext);\n        }\n        _activateAudioContext();\n      }\n    }\n  }\n  JZZ.lib.copyMidiHelpers = _copyMidiHelpers;\n  JZZ.lib.getAudioContext = function() { _initAudioContext(); return _ac; };\n  var _b64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n  JZZ.lib.fromBase64 = function(input) {\n    var output = '';\n    var chr1, chr2, chr3;\n    var enc1, enc2, enc3, enc4;\n    var i = 0;\n    input = input.replace(/[^A-Za-z0-9+/=]/g, '');\n    while (i < input.length) {\n      enc1 = _b64.indexOf(input.charAt(i++));\n      enc2 = _b64.indexOf(input.charAt(i++));\n      enc3 = _b64.indexOf(input.charAt(i++));\n      enc4 = _b64.indexOf(input.charAt(i++));\n      chr1 = (enc1 << 2) | (enc2 >> 4);\n      chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n      chr3 = ((enc3 & 3) << 6) | enc4;\n      output = output + String.fromCharCode(chr1);\n      if (enc3 != 64) {\n        output = output + String.fromCharCode(chr2);\n      }\n      if (enc4 != 64) {\n        output = output + String.fromCharCode(chr3);\n      }\n    }\n    return output;\n  };\n  JZZ.lib.toBase64 = function(data) {\n    var o1, o2, o3, h1, h2, h3, h4, bits, i = 0, ac = 0, enc = '', arr = [];\n    if (!data) return data;\n    do {\n      o1 = data.charCodeAt(i++);\n      o2 = data.charCodeAt(i++);\n      o3 = data.charCodeAt(i++);\n      bits = o1 << 16 | o2 << 8 | o3;\n      h1 = bits >> 18 & 0x3f;\n      h2 = bits >> 12 & 0x3f;\n      h3 = bits >> 6 & 0x3f;\n      h4 = bits & 0x3f;\n      arr[ac++] = _b64.charAt(h1) + _b64.charAt(h2) + _b64.charAt(h3) + _b64.charAt(h4);\n    } while(i < data.length);\n    enc = arr.join('');\n    var r = data.length % 3;\n    return (r ? enc.slice(0, r - 3) + '==='.slice(r) : enc);\n  };\n  JZZ.lib.fromUTF8 = function(data) {\n    data = typeof data == 'undefined' ? '' : '' + data;\n    var out = '';\n    var i, n, m;\n    for (i = 0; i < data.length; i++) {\n      n = data.charCodeAt(i);\n      if (n > 0xff) return data;\n      if (n < 0x80) out += data[i];\n      else if ((n & 0xe0) == 0xc0) {\n        n = (n & 0x1f) << 6;\n        i++; if (i >= data.length) return data;\n        m = data.charCodeAt(i);\n        if ((m & 0xc0) != 0x80) return data;\n        n += (m & 0x3f);\n        out += String.fromCharCode(n);\n      }\n      else if ((n & 0xf0) == 0xe0) {\n        n = (n & 0x0f) << 12;\n        i++; if (i >= data.length) return data;\n        m = data.charCodeAt(i);\n        if ((m & 0xc0) != 0x80) return data;\n        n += (m & 0x3f) << 6;\n        i++; if (i >= data.length) return data;\n        m = data.charCodeAt(i);\n        if ((m & 0xc0) != 0x80) return data;\n        n += (m & 0x3f);\n        out += String.fromCharCode(n);\n      }\n      else if ((n & 0xf8) == 0xf0) {\n        n = (n & 0x07) << 18;\n        i++; if (i >= data.length) return data;\n        m = data.charCodeAt(i);\n        if ((m & 0xc0) != 0x80) return data;\n        n += (m & 0x3f) << 12;\n        i++; if (i >= data.length) return data;\n        m = data.charCodeAt(i);\n        if ((m & 0xc0) != 0x80) return data;\n        n += (m & 0x3f) << 6;\n        i++; if (i >= data.length) return data;\n        m = data.charCodeAt(i);\n        if ((m & 0xc0) != 0x80) return data;\n        n += (m & 0x3f);\n        if (n > 0x10ffff) return data;\n        n -= 0x10000;\n        out += String.fromCharCode(0xd800 + (n >> 10));\n        out += String.fromCharCode(0xdc00 + (n & 0x3ff));\n      }\n    }\n    return out;\n  };\n  JZZ.lib.toUTF8 = function(data) {\n    data = typeof data == 'undefined' ? '' : '' + data;\n    var out = '';\n    var i, n;\n    for (i = 0; i < data.length; i++) {\n      n = data.charCodeAt(i);\n      if (n < 0x80) out += data[i];\n      else if (n < 0x800) {\n        out += String.fromCharCode(0xc0 + (n >> 6));\n        out += String.fromCharCode(0x80 + (n & 0x3f));\n      }\n      else if (n < 0x10000) {\n        out += String.fromCharCode(0xe0 + (n >> 12));\n        out += String.fromCharCode(0x80 + ((n >> 6) & 0x3f));\n        out += String.fromCharCode(0x80 + (n & 0x3f));\n      }\n      /* istanbul ignore next */\n      else {\n        out += String.fromCharCode(0xf0 + (n >> 18));\n        out += String.fromCharCode(0x80 + ((n >> 12) & 0x3f));\n        out += String.fromCharCode(0x80 + ((n >> 6) & 0x3f));\n        out += String.fromCharCode(0x80 + (n & 0x3f));\n      }\n    }\n    return out;\n  };\n\n  // Web MIDI API\n  var _wma = [];\n  var _outputMap = {};\n  var _inputMap = {};\n\n  var Promise = _scope.Promise;\n  /* istanbul ignore next */\n  if (typeof Promise !== 'function') {\n    Promise = function(executor) {\n      this.executor = executor;\n    };\n    Promise.prototype.then = function(resolve, reject) {\n      if (typeof resolve !== 'function') {\n        resolve = _nop;\n      }\n      if (typeof reject !== 'function') {\n        reject = _nop;\n      }\n      this.executor(resolve, reject);\n    };\n  }\n  function DOMException(name, message, code) {\n    this.name = name;\n    this.message = message;\n    this.code = code;\n  }\n\n  function MIDIConnectionEvent(port, target) {\n    this.bubbles = false;\n    this.cancelBubble = false;\n    this.cancelable = false;\n    this.currentTarget = target;\n    this.defaultPrevented = false;\n    this.eventPhase = 0;\n    this.path = [];\n    this.port = port;\n    this.returnValue = true;\n    this.srcElement = target;\n    this.target = target;\n    this.timeStamp = _now();\n    this.type = 'statechange';\n  }\n\n  function MIDIMessageEvent(port, data) {\n    this.bubbles = false;\n    this.cancelBubble = false;\n    this.cancelable = false;\n    this.currentTarget = port;\n    this.data = data;\n    this.defaultPrevented = false;\n    this.eventPhase = 0;\n    this.path = [];\n    this.receivedTime = _now();\n    this.returnValue = true;\n    this.srcElement = port;\n    this.target = port;\n    this.timeStamp = this.receivedTime;\n    this.type = 'midimessage';\n  }\n\n  function _statechange(p, a) {\n    if (p) {\n      if (p.onstatechange) p.onstatechange(new MIDIConnectionEvent(p, p));\n      if (a.onstatechange) a.onstatechange(new MIDIConnectionEvent(p, a));\n    }\n  }\n\n  function MIDIInput(a, p) {\n    var self = this;\n    var _open = false;\n    var _ochng = null;\n    var _onmsg = null;\n    this.type = 'input';\n    this.id = p.id;\n    this.name = p.name;\n    this.manufacturer = p.man;\n    this.version = p.ver;\n    Object.defineProperty(this, 'state', { get: function() { return p.connected ? 'connected' : 'disconnected'; }, enumerable: true });\n    Object.defineProperty(this, 'connection', { get: function() {\n      return _open ? p.proxy ? 'open' : 'pending' : 'closed';\n    }, enumerable: true });\n    Object.defineProperty(this, 'onmidimessage', {\n      get: function() { return _onmsg; },\n      set: function(value) {\n        if (_func(value)) {\n          _onmsg = value;\n          if (!_open) self.open().then(_nop, _nop);\n        }\n        else _onmsg = null;\n      },\n      enumerable: true\n    });\n    Object.defineProperty(this, 'onstatechange', {\n      get: function() { return _ochng; },\n      set: function(value) {\n        if (_func(value)) _ochng = value;\n        else _ochng = null;\n      },\n      enumerable: true\n    });\n    this.open = function() {\n      return new Promise(function(resolve, reject) {\n        if (_open) resolve(self);\n        else {\n          p.open().then(function() {\n            if (!_open) {\n              _open = true;\n              _statechange(self, a);\n            }\n            resolve(self);\n          }, function() {\n            reject(new DOMException('InvalidAccessError', 'Port is not available', 15));\n          });\n        }\n      });\n    };\n    this.close = function() {\n      return new Promise(function(resolve/*, reject*/) {\n        if (_open) {\n          _open = false;\n          p.close();\n          _statechange(self, a);\n        }\n        resolve(self);\n      });\n    };\n    Object.freeze(this);\n  }\n\n  function _split(q) {\n    var i, k;\n    while (q.length) {\n      for (i = 0; i < q.length; i++) if (q[i] == parseInt(q[i]) && q[i] >= 0x80 && q[i] <= 0xff && q[i] != 0xf7) break;\n      q.splice(0, i);\n      if (!q.length) return;\n      if (q[0] == 0xf0) {\n        for (i = 1; i < q.length; i++) if (q[i] == 0xf7) break;\n        if (i == q.length) return;\n        return q.splice(0, i + 1);\n      }\n      else {\n        k = _datalen(q[0]) + 1;\n        if (k > q.length) return;\n        for (i = 1; i < k; i++) if (q[i] != parseInt(q[i]) || q[i] < 0 || q[i] >= 0x80) break;\n        if (i == k) return q.splice(0, i);\n        else q.splice(0, i);\n      }\n    }\n  }\n\n  function _InputProxy(id, name, man, ver) {\n    var self = this;\n    this.id = id;\n    this.name = name;\n    this.man = man;\n    this.ver = ver;\n    this.connected = true;\n    this.ports = [];\n    this.pending = [];\n    this.proxy = undefined;\n    this.queue = [];\n    this.onmidi = function(msg) {\n      var m;\n      self.queue = self.queue.concat(msg.slice());\n      for (m = _split(self.queue); m; m = _split(self.queue)) {\n        for (i = 0; i < self.ports.length; i++) {\n          if (self.ports[i][0].onmidimessage && (m[0] != 0xf0 || self.ports[i][1])) {\n            self.ports[i][0].onmidimessage(new MIDIMessageEvent(self, new Uint8Array(m)));\n          }\n        }\n      }\n    };\n  }\n  _InputProxy.prototype.open = function() {\n    var self = this;\n    return new Promise(function(resolve, reject) {\n      var i;\n      if (self.proxy || !self.connected) resolve();\n      else {\n        self.pending.push([resolve, reject]);\n        if (self.pending.length == 1) {\n          JZZ().openMidiIn(self.name).or(function() {\n            for (i = 0; i < self.pending.length; i++) self.pending[i][1]();\n            self.pending = [];\n          }).and(function() {\n            self.proxy = this;\n            self.proxy.connect(self.onmidi);\n            for (i = 0; i < self.pending.length; i++) self.pending[i][0]();\n            self.pending = [];\n          });\n        }\n      }\n    });\n  };\n  _InputProxy.prototype.close = function() {\n    var i;\n    if (this.proxy) {\n      for (i = 0; i < this.ports.length; i++) if (this.ports[i].connection == 'open') return;\n      this.proxy.close();\n      this.proxy = undefined;\n    }\n  };\n  _InputProxy.prototype.disconnect = function() {\n    this.connected = false;\n    if (this.proxy) {\n      this.proxy.close();\n      this.proxy = undefined;\n    }\n  };\n  _InputProxy.prototype.reconnect = function() {\n    var self = this;\n    var i, p;\n    var a = [];\n    this.connected = true;\n    for (i = 0; i < _wma.length; i++) {\n      p = _wma[i].inputs.get(this.id);\n      if (p.connection == 'closed') _statechange(p, _wma[i]);\n      else a.push([p, _wma[i]]);\n    }\n    if (a.length) {\n      JZZ()._openMidiInNR(self.name).or(function() {\n        for (i = 0; i < a.length; i++) a[i][0].close();\n      }).and(function() {\n        self.proxy = this;\n        self.proxy.connect(self.onmidi);\n        for (i = 0; i < a.length; i++) _statechange(a[i][0], a[i][1]);\n      });\n    }\n  };\n\n  function _datalen(x) {\n    if (x >= 0x80 && x <= 0xbf || x >= 0xe0 && x <= 0xef || x == 0xf2) return 2;\n    if (x >= 0xc0 && x <= 0xdf || x == 0xf1 || x == 0xf3) return 1;\n    return 0;\n  }\n\n  var _epr = \"Failed to execute 'send' on 'MIDIOutput': \";\n\n  function _validate(arr, sysex) {\n    var i, k;\n    var msg;\n    var data = [];\n    for (i = 0; i < arr.length; i++) {\n      if (arr[i] != parseInt(arr[i]) || arr[i] < 0 || arr[i] > 255) throw TypeError(_epr + arr[i] + ' is not a UInt8 value.');\n    }\n    k = 0;\n    for (i = 0; i < arr.length; i++) {\n      if (!k) {\n        if (arr[i] < 0x80) throw TypeError(_epr + 'Running status is not allowed at index ' + i + ' (' + arr[i] + ').');\n        if (arr[i] == 0xf7) throw TypeError(_epr + 'Unexpected end of system exclusive message at index ' + i + ' (' + arr[i] + ').');\n        msg = [arr[i]];\n        data.push(msg);\n        if (arr[i] == 0xf0) {\n          if (!sysex) throw new DOMException('InvalidAccessError', _epr + 'System exclusive messag is not allowed at index ' + i + ' (' + arr[i] + ').', 15);\n          k = -1;\n          for (; i < arr.length; i++) {\n            msg.push(arr[i]);\n            if (arr[i] == 0xf7) {\n              k = 0;\n              break;\n            }\n          }\n        }\n        else {\n          k = _datalen(arr[i]);\n        }\n      }\n      else {\n        if (arr[i] > 0x7f) throw TypeError(_epr + 'Unexpected status byte at index ' + i + ' (' + arr[i] + ').');\n        msg.push(arr[i]);\n        k--;\n      }\n    }\n    if (k) throw TypeError(_epr + 'Message is incomplete');\n    return [data];\n  }\n\n  function MIDIOutput(a, p) {\n    var self = this;\n    var _open = false;\n    var _ochng = null;\n    this.type = 'output';\n    this.id = p.id;\n    this.name = p.name;\n    this.manufacturer = p.man;\n    this.version = p.ver;\n    Object.defineProperty(this, 'state', { get: function() { return p.connected ? 'connected' : 'disconnected'; }, enumerable: true });\n    Object.defineProperty(this, 'connection', { get: function() {\n      return _open ? p.proxy ? 'open' : 'pending' : 'closed';\n    }, enumerable: true });\n    Object.defineProperty(this, 'onstatechange', {\n      get: function() { return _ochng; },\n      set: function(value) {\n        if (_func(value)) _ochng = value;\n        else _ochng = null;\n      },\n      enumerable: true\n    });\n    this.open = function() {\n      return new Promise(function(resolve, reject) {\n        if (_open) resolve(self);\n        else {\n          p.open().then(function() {\n            if (!_open) {\n              _open = true;\n              _statechange(self, a);\n            }\n            resolve(self);\n          }, function() {\n            reject(new DOMException('InvalidAccessError', 'Port is not available', 15));\n          });\n        }\n      });\n    };\n    this.close = function() {\n      return new Promise(function(resolve/*, reject*/) {\n        if (_open) {\n          _open = false;\n          self.clear();\n          p.close();\n          _statechange(self, a);\n        }\n        resolve(self);\n      });\n    };\n    this.clear = function() {\n    };\n    this.send = function(data, timestamp) {\n      _validate(data, a.sysexEnabled);\n      if (!p.connected) throw new DOMException('InvalidStateError', 'Port is not connected', 11);\n      if (_open) {\n        var now = _now();\n        if (timestamp > now) setTimeout(function() { p.proxy.send(data); }, timestamp - now);\n        else p.proxy.send(data);\n      }\n      else this.open().then(function() { self.send(data, timestamp); }, _nop);\n    };\n    Object.freeze(this);\n  }\n\n  function _OutputProxy(id, name, man, ver) {\n    this.id = id;\n    this.name = name;\n    this.man = man;\n    this.ver = ver;\n    this.connected = true;\n    this.ports = [];\n    this.pending = [];\n    this.proxy = undefined;\n  }\n  _OutputProxy.prototype.open = function() {\n    var self = this;\n    return new Promise(function(resolve, reject) {\n      var i;\n      if (self.proxy || !self.connected) resolve();\n      else {\n        self.pending.push([resolve, reject]);\n        if (self.pending.length == 1) {\n          JZZ().openMidiOut(self.name).or(function() {\n            for (i = 0; i < self.pending.length; i++) self.pending[i][1]();\n            self.pending = [];\n          }).and(function() {\n            self.proxy = this;\n            for (i = 0; i < self.pending.length; i++) self.pending[i][0]();\n            self.pending = [];\n          });\n        }\n      }\n    });\n  };\n  _OutputProxy.prototype.close = function() {\n    var i;\n    if (this.proxy) {\n      for (i = 0; i < this.ports.length; i++) if (this.ports[i].connection == 'open') return;\n      this.proxy.close();\n      this.proxy = undefined;\n    }\n  };\n  _OutputProxy.prototype.disconnect = function() {\n    this.connected = false;\n    if (this.proxy) {\n      this.proxy.close();\n      this.proxy = undefined;\n    }\n  };\n  _OutputProxy.prototype.reconnect = function() {\n    var self = this;\n    var i, p;\n    var a = [];\n    this.connected = true;\n    for (i = 0; i < _wma.length; i++) {\n      p = _wma[i].outputs.get(this.id);\n      if (p.connection == 'closed') _statechange(p, _wma[i]);\n      else a.push([p, _wma[i]]);\n    }\n    if (a.length) {\n      JZZ()._openMidiOutNR(self.name).or(function() {\n        for (i = 0; i < a.length; i++) a[i][0].close();\n      }).and(function() {\n        self.proxy = this;\n        for (i = 0; i < a.length; i++) _statechange(a[i][0], a[i][1]);\n      });\n    }\n  };\n\n  function _Maplike(data) {\n    this.has = function(id) {\n      return data.hasOwnProperty(id) && data[id].connected;\n    };\n    this.keys = function() {\n      try { // some old browsers may have no Map object\n        var m = new Map();\n        for (var id in data) if (this.has(id)) m.set(id, this.get(id));\n        return m.keys();\n      } catch (e) {}\n    };\n    this.values = function() {\n      try {\n        var m = new Map();\n        for (var id in data) if (this.has(id)) m.set(id, this.get(id));\n        return m.values();\n      } catch (e) {}\n    };\n    this.entries = function() {\n      try {\n        var m = new Map();\n        for (var id in data) if (this.has(id)) m.set(id, this.get(id));\n        return m.entries();\n      } catch (e) {}\n    };\n    this.forEach = function(fun, self) {\n      if (typeof self == 'undefined') self = this;\n      for (var id in data) if (this.has(id)) fun.call(self, this.get(id), id, this);\n    };\n    Object.defineProperty(this, 'size', {\n      get: function() {\n        var len = 0;\n        for (var id in data) if (this.has(id)) len++;\n        return len;\n      },\n      enumerable: true\n    });\n  }\n\n  function MIDIInputMap(_access, _inputs) {\n    this.get = function(id) {\n      if (_inputMap.hasOwnProperty(id) && _inputMap[id].connected) {\n        if (!_inputs[id]) {\n          _inputs[id] = new MIDIInput(_access, _inputMap[id]);\n          _inputMap[id].ports.push([_inputs[id], _access.sysexEnabled]);\n        }\n        return _inputs[id];\n      }\n    };\n    Object.freeze(this);\n  }\n  MIDIInputMap.prototype = new _Maplike(_inputMap);\n  MIDIInputMap.prototype.constructor = MIDIInputMap;\n\n  function MIDIOutputMap(_access, _outputs) {\n    this.get = function(id) {\n      if (_outputMap.hasOwnProperty(id) && _outputMap[id].connected) {\n        if (!_outputs[id]) {\n          _outputs[id] = new MIDIOutput(_access, _outputMap[id]);\n          _outputMap[id].ports.push([_outputs[id], _access.sysexEnabled]);\n        }\n        return _outputs[id];\n      }\n    };\n    Object.freeze(this);\n  }\n  MIDIOutputMap.prototype = new _Maplike(_outputMap);\n  MIDIOutputMap.prototype.constructor = MIDIOutputMap;\n\n  function _wm_watch(x) {\n    var i, k, p, a;\n    for (i = 0; i < x.inputs.added.length; i++) {\n      p = x.inputs.added[i];\n      if (!_inputMap.hasOwnProperty(p.id)) _inputMap[p.id] = new _InputProxy(p.id, p.name, p.manufacturer, p.version);\n      _inputMap[p.id].reconnect();\n    }\n    for (i = 0; i < x.outputs.added.length; i++) {\n      p = x.outputs.added[i];\n      if (!_outputMap.hasOwnProperty(p.id)) _outputMap[p.id] = new _OutputProxy(p.id, p.name, p.manufacturer, p.version);\n      _outputMap[p.id].reconnect();\n    }\n    for (i = 0; i < x.inputs.removed.length; i++) {\n      p = x.inputs.removed[i];\n      if (_inputMap.hasOwnProperty(p.id)) {\n        a = [];\n        for (k = 0; k < _wma.length; k++) a.push([_wma[k].inputs.get(p.id), _wma[k]]);\n        _inputMap[p.id].disconnect();\n        for (k = 0; k < a.length; k++) _statechange(a[k][0], a[k][1]);\n      }\n    }\n    for (i = 0; i < x.outputs.removed.length; i++) {\n      p = x.outputs.removed[i];\n      if (_outputMap.hasOwnProperty(p.id)) {\n        a = [];\n        for (k = 0; k < _wma.length; k++) a.push([_wma[k].outputs.get(p.id), _wma[k]]);\n        _outputMap[p.id].disconnect();\n        for (k = 0; k < a.length; k++) _statechange(a[k][0], a[k][1]);\n      }\n    }\n  }\n\n  function MIDIAccess(sysex) {\n    var _inputs = {};\n    var _outputs = {};\n    var _onstatechange = null;\n    var self = this;\n    this.sysexEnabled = sysex;\n    this.inputs = new MIDIInputMap(self, _inputs);\n    this.outputs = new MIDIOutputMap(self, _outputs);\n    Object.defineProperty(this, 'onstatechange', {\n      get: function() { return _onstatechange; },\n      set: function(f) { _onstatechange = _func(f) ? f : null; },\n      enumerable: true\n    });\n    Object.freeze(this);\n    var i;\n    var p;\n    var info = _jzz._info;\n    for (i = 0; i < info.inputs.length; i++) {\n      p = info.inputs[i];\n      if (!_inputMap.hasOwnProperty(p.id)) _inputMap[p.id] = new _InputProxy(p.id, p.name, p.manufacturer, p.version);\n    }\n    for (i = 0; i < info.outputs.length; i++) {\n      p = info.outputs[i];\n      if (!_outputMap.hasOwnProperty(p.id)) _outputMap[p.id] = new _OutputProxy(p.id, p.name, p.manufacturer, p.version);\n    }\n    if (!_wma.length) JZZ().onChange(_wm_watch);\n    _wma.push(this);\n  }\n\n  JZZ.requestMIDIAccess = function(opt) {\n    return new Promise(function(resolve, reject) {\n      JZZ.JZZ(opt).or(function() {\n      }).and(function() {\n        var sysex = !!(opt && opt.sysex);\n        if (sysex && !this.info().sysex) reject(new DOMException('SecurityError', 'Sysex is not allowed', 18));\n        else {\n          var wma = new MIDIAccess(sysex);\n          resolve(wma);\n        }\n      });\n    });\n  };\n  if (typeof navigator !== 'undefined' && !navigator.requestMIDIAccess) navigator.requestMIDIAccess = JZZ.requestMIDIAccess;\n  JZZ.close = function() { if (_engine._close) _engine._close(); };\n\n  return JZZ;\n});\n\n//export {JZZ}\n\n\n//# sourceURL=webpack://Synthesizer/./src/js/JZZ.js?");

/***/ }),

/***/ "./src/js/Share.js":
/*!*************************!*\
  !*** ./src/js/Share.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MusicClip\": () => (/* binding */ MusicClip),\n/* harmony export */   \"MusicClipType\": () => (/* binding */ MusicClipType),\n/* harmony export */   \"MusicTrack\": () => (/* binding */ MusicTrack),\n/* harmony export */   \"SyntheysizerEvents\": () => (/* binding */ SyntheysizerEvents),\n/* harmony export */   \"TemplateClip\": () => (/* binding */ TemplateClip),\n/* harmony export */   \"dial_set\": () => (/* binding */ dial_set),\n/* harmony export */   \"joystick_set\": () => (/* binding */ joystick_set),\n/* harmony export */   \"note_set\": () => (/* binding */ note_set),\n/* harmony export */   \"pad_set\": () => (/* binding */ pad_set),\n/* harmony export */   \"poly_note_set\": () => (/* binding */ poly_note_set)\n/* harmony export */ });\nconst SyntheysizerEvents = window;\n\nconst note_set = {\n  pitch: 0,\n  note: 0,\n  value: 0\n};\nconst poly_note_set = {\n  pitch: [],\n  note : [],\n  value : []\n}\n\nconst pad_set = {\n  id: 0,\n};\n\nconst dial_set = {\n  value: [[0.0, 0.0, 0.0, 0.0], \n          [0.0, 0.0, 0.0, 0.0]]  //순서대로  [21, 22, 23, 24]]\n}; \n\nconst joystick_set = {\n  value:[0, 0]\n};  \n\nconst MusicClipType = {\n  Theme: \"Theme\",\n  Melody: \"Melody\",\n  Beat: \"Beat\",\n  Template: \"Template\"\n}\n\nconst MusicNote = {\n  note:\"C0\",\n  intensity : 0.0,\n  start: 0.0,\n  end: -1.0\n}\nclass TemplateClip{\n  constructor(Clip_id, duration = 30, instrument = 0){\n    this.Clip_id = Clip_id;\n    this.duration = duration;\n    this.instrument = instrument;\n    this.dial_set = [[0.0, 0.0, 0.0, 0.0], \n                     [0.0, 0.0, 0.0, 0.0]]\n  }\n  set_dial(dial_set){\n    this.dial_set = dial_set\n  }\n  set_duration(duration){\n    this.duration = duration;\n  }\n  get_Clip_id(){\n    return this.Clip_id;\n  }\n  get_duration(){\n    return this.duration;\n  }\n  get_instrument(){\n    return this.instrument;\n  }\n  get_dial(){\n    return this.dial_set;\n  }\n}\n\n\nclass MusicClip {\n  constructor (Type, Clip_id, duration = 30, arraySet = [], timeSet = [], lyricSet = [], lyrictimeSet = []) {\n      console.log(\"music Type : \", Type, \"Clip_id\", Clip_id,  \"duration\", duration);\n      this.Type = Type;\n      this.Clip_id = Clip_id;\n      this.duration = duration;\n      if(Type==MusicClipType.Melody){\n        this.melodyNoteSet = arraySet;\n        this.melodyTimeset = timeSet;\n        this.melodyNoteId = arraySet.length;\n\n        this.lyricSet = lyricSet;\n        this.lyrictimeSet = lyrictimeSet;\n        this.lyricId = lyricSet.length;\n      }\n      if(Type==MusicClipType.Beat){\n        this.beatSet = arraySet;\n        this.beatTime = timeSet;\n        this.beatSetId = arraySet.length;\n      }\n  }\n  setType(type){\n    console.log(\"Set Type: \", type);\n    this.Type = type;\n  }\n  setNoteInput(note, time) {\n    if(this.Type==MusicClipType.Melody){\n      //console.log(\"Pitch input Time:\", pitch, time);\n      this.melodyNoteSet.push(note);\n      this.melodyTimeset.push([time, -1]);\n      this.melodyNoteId +=1;\n    }\n    else{\n      alert(\"This Cilp type is Melody\");\n    }\n  }\n  setNoteRelease(note, time) {\n    if(this.Type==MusicClipType.Melody){\n      //console.log(\"Pitch Release Time:\", pitch, time);\n      for (let i = this.melodyNoteSet.length - 1; i >= 0; i--) {\n        if (this.melodyNoteSet[i] === note) {\n          if(this.melodyTimeset[i][1] == -1){\n            this.melodyTimeset[i][1] = time;\n            break;\n          }\n          break;\n        }\n      }\n    }\n    else{\n      alert(\"This Cilp type is Melody\");\n    }\n  }\n  setBeatInput(pad_id, time) {\n    if(this.Type==MusicClipType.Beat){\n      //console.log(\"Beat input Time:\", pad_id, time);\n      this.beatSet.push(pad_id);\n      this.beatTime.push(time);\n      this.beatSetId+=1;\n    }\n    else{\n      alert(\"This Clip type is Beat\");\n    }\n  }\n  setDuration(duration){\n    this.duration = duration;\n  }\n  setInstrument(instrument_id){\n    this.instrument_id = instrument_id;\n  }\n  setLyrics(lyric, timeset){\n    this.lyricSet.push(lyric);\n    this.lyrictimeSet.push(timeset);\n  }\n  editNote(noteIndex, deltaTimeset){\n    if(this.Type==MusicClipType.Melody){\n      this.melodyTimeset[noteIndex][0] += deltaTimeset[0];\n      this.melodyTimeset[noteIndex][1] += deltaTimeset[1];\n    }\n    else{\n      this.beatTime[noteIndex] += deltaTimeset[0];\n    }\n  }\n  editLyrics(lyricid, deltaTimeset){\n    if(this.Type==MusicClipType.Melody){\n      this.lyrictimeSet[lyricid][0] += deltaTimeset[0];\n      this.lyrictimeSet[lyricid][1] += deltaTimeset[1];\n    }\n  }\n  deleteNote(noteIndex){\n    console.log(\"delete note\", noteIndex);\n    if(this.Type==MusicClipType.Melody){\n      this.melodyNoteSet.splice(noteIndex,1);\n      this.melodyTimeset.splice(noteIndex,1);\n    }\n    else{\n      this.beatSet.splice(noteIndex,1);\n      this.beatTime.splice(noteIndex,1);\n    }\n  }\n  getClipId(){\n    return this.Clip_id;\n  }\n  getClipType(){\n    return this.Type;\n  }\n  getDuration(){\n    return parseFloat(this.duration);\n  }\n  getNoteIndex(){\n    if(this.Type==MusicClipType.Melody){\n      return this.melodyNoteId;\n    }\n    else{\n      return this.beatSetId;\n    }\n  }\n  getMusicClip(){\n    if(this.Type==MusicClipType.Melody){\n      return [this.melodyNoteSet, this.melodyTimeset]\n    }\n    else{\n      return [this.beatSet, this.beatTime]\n    }\n  }\n\n  getcurrentNoteSet(currentTime){\n    const noteSet = []\n    if(this.Type==MusicClipType.Melody){\n      //return [this.melodyNoteSet, this.melodyTimeset]\n      for (let i = 0; i < this.melodyTimeset.length; i++) {\n        if (this.melodyTimeset[i][0] <= currentTime && currentTime < this.melodyTimeset[i][1]) {\n          noteSet.push(this.melodyNoteSet[i]);\n        }\n      }\n      return noteSet;\n    }\n    else{\n      //return [this.beatSet, this.beatTime]\n      for (let i = 0; i < this.beatTime.length; i++) {\n        if (this.beatTime[i] - 1/60 <= currentTime && currentTime < this.beatTime[i] + 1/60) {\n          noteSet.push(this.beatSet[i]);\n        }\n      }\n      return noteSet;\n    }\n  }\n\n  getLyrics(currentTime){\n    //console.log(this.lyricSet, this.lyrictimeSet)\n    for (let i = 0; i < this.lyrictimeSet.length; i++) {\n      if (this.lyrictimeSet[i][0] <= currentTime && currentTime < this.lyrictimeSet[i][1]) {\n        return this.lyricSet[i];\n      }\n    }\n    return \"\";\n  }\n  getLyricsLastTime(){\n    if(this.lyrictimeSet.length >0){\n      return this.lyrictimeSet[this.lyrictimeSet.length-1][1];\n   }\n   else{\n    return 0;\n   }\n  }\n  getAllLyrics(){\n    return [this.lyricSet, this.lyrictimeSet];\n  }\n}\n\nclass MusicTrack{\n  constructor (userId = 0, id_set = [[],[],[]], time_set = [[], [], []]){\n    this.userId = userId;\n\n    this.TemplateIdClip = id_set[0];\n    this.MelodyClipIdList = id_set[1];\n    this.BeatClipIdList = id_set[2];\n\n    this.TemplateTimeset = time_set[0];\n    this.MelodyTimeset = time_set[1];\n    this.BeatTimeset = time_set[2];\n  }\n  setMusicClip(musicClip, clipTime){\n    if(musicClip.getClipType() == MusicClipType.Melody){\n      this.MelodyClipIdList.push(musicClip.getClipId());\n      let duration = parseFloat(musicClip.getDuration());\n      this.MelodyTimeset.push([clipTime, clipTime + duration]);\n      console.log(\"Add Melody box\", this.MelodyClipIdList);\n    }\n    else{\n      this.BeatClipIdList.push(musicClip.getClipId());\n      let duration = parseFloat(musicClip.getDuration());\n      this.BeatTimeset.push([clipTime, clipTime + duration]);\n      console.log(\"Add Beat box\", this.BeatClipIdList);\n    }\n  }\n  setTemplateClip(templateId, clipTime){  //지금 코드가 조금 꼬여서 임의로 Template은 30초 길이로 고정\n    this.TemplateIdClip.push(templateId);\n    this.TemplateTimeset.push([clipTime, clipTime + 30]);\n    console.log(\"Add Template box\", this.TemplateIdClip);\n  }\n  editMusicClip(type, clip_id, deltaTime){\n    if(type == MusicClipType.Melody){\n      this.MelodyTimeset[clip_id][0] += deltaTime;\n      this.MelodyTimeset[clip_id][1] += deltaTime;\n    }\n    else{\n      this.BeatTimeset[clip_id][0] += deltaTime;\n      this.BeatTimeset[clip_id][1] += deltaTime;\n    }\n  }\n  getTempalateId(){\n    return this.TemplateIdClip.length;\n  }\n  getMelodyId(){\n    return this.MelodyClipIdList.length;\n  }\n  getBeatId(){\n    return this.BeatClipIdList.length;\n  }\n  getcurrentClipSet(currentTime){\n    const Meldoy_set = []\n    const Beat_set = []\n    const Template_set = []\n    //console.log(this.BeatTimeset);\n    for (let i = 0; i < this.TemplateTimeset.length; i++) {\n      if (this.TemplateTimeset[i][0] <= currentTime && currentTime < this.TemplateTimeset[i][1]) {\n        Template_set.push(this.TemplateTimeset[i][0]);  // 시간이 먼저\n        Template_set.push(this.TemplateIdClip[i]);\n      }\n    }\n    for (let i = 0; i < this.MelodyTimeset.length; i++) {\n      if (this.MelodyTimeset[i][0] <= currentTime && currentTime < this.MelodyTimeset[i][1]) {\n        Meldoy_set.push(this.MelodyTimeset[i][0]);\n        Meldoy_set.push(this.MelodyClipIdList[i]);\n      }\n    }\n    for (let i = 0; i < this.BeatTimeset.length; i++) {\n      if (this.BeatTimeset[i][0] <= currentTime && currentTime < this.BeatTimeset[i][1]) {\n        Beat_set.push(this.BeatTimeset[i][0]);\n        Beat_set.push(this.BeatClipIdList[i]);\n      }\n    }\n    return [Template_set, Meldoy_set, Beat_set];  //순서는 항상 Template, Melody, Beat로 고정\n  }\n  getUserId(){\n    return this.userId;\n  }\n  getIdData(){\n    return [this.TemplateIdClip, this.MelodyClipIdList, this.BeatClipIdList]\n  }\n  getTimeData(){\n    return [this.TemplateTimeset, this.MelodyTimeset, this.BeatTimeset]\n  }\n  getTemplateSet(){\n    return [this.TemplateIdClip, this.TemplateTimeset]\n  }\n  getMelodySet(){\n    return [this.MelodyClipIdList, this.MelodyTimeset]\n  }\n  getBeatSet(){\n    return [this.BeatClipIdList, this.BeatTimeset]\n  }\n  deleteClip(clipType, clipIndex){\n    console.log(\"delete Track\", clipType, clipIndex);\n    if(clipType != null){\n      if(clipType == MusicClipType.Template){\n        this.TemplateIdClip.splice(clipIndex,1)\n        this.TemplateTimeset.splice(clipIndex,1)\n      }\n      else if(clipType == MusicClipType.Melody){\n        this.MelodyClipIdList.splice(clipIndex,1)\n        this.MelodyTimeset.splice(clipIndex,1)\n      }\n      else{\n        this.BeatClipIdList.splice(clipIndex,1)\n        this.BeatTimeset.splice(clipIndex,1)\n      }\n    }\n  }\n  // setMusicClip(Melody_clip_array){  //Track의 Clip 정리 코드\n  //   const MaxId = Math.max.apply(null, this.MelodyClipIdList);\n  // }\n  // setBeatClip(Beat_clip_array){  //Track의 Clip 정리 코드\n  //   const MaxId = Math.max.apply(null, this.BeatClipIdList);\n  // }\n  // saveTrack(){\n  //   console.log(\"save the Music Track\");\n  // }\n}\n\n//# sourceURL=webpack://Synthesizer/./src/js/Share.js?");

/***/ }),

/***/ "./src/js/SheetMusic.js":
/*!******************************!*\
  !*** ./src/js/SheetMusic.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Share_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Share.js */ \"./src/js/Share.js\");\n/* harmony import */ var _Synthesizer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Synthesizer.js */ \"./src/js/Synthesizer.js\");\n/* harmony import */ var _jsmidgen_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./jsmidgen.js */ \"./src/js/jsmidgen.js\");\n/* harmony import */ var _jsmidgen_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_jsmidgen_js__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n\n\n//최소 범위 A2 ~ C7\n\nconst fps = 30;\nlet currentTime = 0.0;\nlet currentTrackTime = 0.0;\nlet play_state = false;\nlet play_state_track = false;\nlet timer = null;\nlet duration = document.getElementById(\"clipduration\").value;\nlet duration_track = document.getElementById(\"trackduration\").value;\n\nlet clipduration = document.getElementById(\"clipduration\");\nlet timeLine1 = document.getElementById(\"timeLine1\");\nlet timeLine2 = document.getElementById(\"timeLine2\");\nlet timeLine3 = document.getElementById(\"timeLine3\");\nlet FileInput = document.getElementById(\"fileUpload\");\n\nconst Template_clip_array = [];\nconst Melody_clip_array = [];\nconst Beat_clip_array = [];\n\nlet current_clip_type = _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Theme;\nlet melody_clip = new _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClip(_Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Melody, Melody_clip_array.length, duration);\nlet beat_clip = new _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClip(_Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Beat, Beat_clip_array.length, duration);\nlet template_clip = new _Share_js__WEBPACK_IMPORTED_MODULE_0__.TemplateClip(Template_clip_array.length);\ntemplateConnectToVisualAndSound(template_clip);\nlet onNoteList = [];\nlet previousNote = [];\nlet previousNote_track = [];\nlet TrackObject = new _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicTrack();\nlet previousDial_ID = -1;\n\nlet doubleChecker = 0 //Webpack double Event error catcher\nlet trackActivaqte = false;\nlet noteClickIndex = -1;\nlet trackClickIndex = -1;\nlet trackClickType = null\nconst clip_box_width = 1810;\nconst clip_start_px = 80;\nconst track_box_width = 700;\nlet player1 = null;\nlet player2 = null;\nlet practiceMode = false\nlet saveModeCheck = false\n\nlet lyricsId = 0;\nlet lyricsDefaultTime = 5;\n\nconst userName = document.getElementById(\"userName\").innerHTML\nconst userEmail = document.getElementById(\"userEmail\").innerHTML\nconst musicId = parseInt(document.getElementById(\"musicType\").innerHTML);\n//setVideo();\n\n// // Check if YT is already loaded\n// function createVideo(id){\n//   if (window.YT && window.YT.Player) {\n//     createPlayer2(id);\n//     createPlayer1(id);\n//   } else {\n//     // If not, wait for the API to load\n//     window.onYouTubeIframeAPIReady = function() {\n//         createPlayer2(id);\n//         createPlayer1(id);\n//     };\n//   }\n// }\n\n// function setVideo(){\n//   switch(musicId){\n//     case 1:\n//       return createVideo(\"ZbdPiR0eC08\")\n//     case 2:\n//       return createVideo(\"vPVS7RvcNNw\")\n//     case 3:\n//       return createVideo(\"rhWJfpRo_2c\")\n//     default:\n//       return createVideo(\"ZbdPiR0eC08\")\n//   }\n// }\n\n\n// function createPlayer1(id) {\n//   player1 = new window.YT.Player('player1', {\n//       height: '390',\n//       width: '640',\n//       videoId: id, // 유투브 Share에 있는 ID 입력, 단 일부 영상은 안됌(이유를 모름)\n//       events: {\n//           'onReady': onPlayerReady,\n//           'onStateChange': onPlayerStateChange\n//       }\n//   });\n// }\n\n// function createPlayer2(id) {\n//   player2 = new window.YT.Player('player2', {\n//       height: '390',\n//       width: '640',\n//       videoId: id, // 유투브 Share에 있는 ID 입력, 단 일부 영상은 안됌(이유를 모름)\n//       events: {\n//           'onReady': onPlayerReady,\n//           'onStateChange': onPlayerStateChange\n//       }\n//   });\n// }\n\n// function onPlayerReady(event) { //비디오 duration을 Clip 길이로 설정\n//   if(practiceMode){\n//     console.log(\"Get Video Clip\", player1.getDuration());\n//     changeClipDuration(player1.getDuration());\n//   }\n//   else{\n//     console.log(\"Get Video Clip\", player2.getDuration());\n//     changeClipDuration(player2.getDuration());\n//   }\n//   //settingExample();\n//   document.getElementById(\"synthConnector\").click();\n// }\n\n// function onPlayerStateChange(event) {\n//     if (event.data == window.YT.PlayerState.PLAYING) {\n//         startRecording();\n//         if(saveModeCheck){\n//           canvasRecordingStart()\n//         }\n//     }\n//     if (event.data == window.YT.PlayerState.ENDED || event.data == window.YT.PlayerState.PAUSED){\n//         stopRecording();\n//         stopAllNotePlayer();\n//         if(saveModeCheck){\n//           canvasRecordingStop()\n//           saveModeCheck = false\n//         }\n//     } \n// }\n\n// document.getElementById(\"exampleVideoButton\").addEventListener('click', function(){\n//   practiceMode = true;\n//   player1.seekTo(0);\n//   player2.seekTo(0);\n//   player1.pauseVideo();\n//   player2.pauseVideo();\n//   stopRecording();\n//   stopAllNotePlayer();\n//   play_state = false;\n//   changeClipDuration(player1.getDuration());\n//   //clearExampleClip(current_clip_type);\n//   //settingExample();\n//   // if (window.YT && window.YT.Player) {\n//   //   createPlayer1();\n//   // } else {\n//   //   // If not, wait for the API to load\n//   //   window.onYouTubeIframeAPIReady = createPlayer1;\n//   // }\n//   document.getElementById(\"player1\").style.display = 'block' \n//   document.getElementById(\"player2\").style.display = 'none'\n//   document.getElementById(\"sheetMusicSaveButton\").disabled = true;\n//   if(Melody_clip_array.length ==0){\n//     clearNoteClip(MusicClipType.Melody);\n//     melody_clip = new MusicClip(MusicClipType.Melody, Melody_clip_array.length, duration);\n//   }\n//   else{\n//     clearNoteClip(MusicClipType.Beat);\n//     beat_clip = new MusicClip(MusicClipType.Beat, Beat_clip_array.length, duration);\n//   }\n// })\n// document.getElementById(\"danceVideoButton\").addEventListener('click', function(){\n//   practiceMode = false;\n//   player1.seekTo(0);\n//   player2.seekTo(0);\n//   player1.pauseVideo();\n//   player2.pauseVideo();\n//   stopRecording();\n//   stopAllNotePlayer();\n//   play_state = false;\n//   //clearExampleClip(current_clip_type);\n//   changeClipDuration(player2.getDuration());\n//   // if (window.YT && window.YT.Player) {\n//   //   createPlayer2();\n//   // } else {\n//   //   // If not, wait for the API to load\n//   //   window.onYouTubeIframeAPIReady = createPlayer2;\n//   // }\n//   document.getElementById(\"player1\").style.display = 'none' \n//   document.getElementById(\"player2\").style.display = 'block'\n//   document.getElementById(\"sheetMusicSaveButton\").disabled = false;\n//   if(current_clip_type == MusicClipType.Melody){\n//     clearNoteClip(MusicClipType.Melody);\n//     if(Melody_clip_array.length == 0){\n//       melody_clip = getExample();\n//     }\n//     else{\n//       melody_clip = Melody_clip_array[0]\n//     }\n//     loadClip(melody_clip, melody_clip.getDuration())\n//     //melody_clip = new MusicClip(MusicClipType.Melody, Melody_clip_array.length, duration);\n//   }\n//   else if(current_clip_type == MusicClipType.Beat){\n//     clearNoteClip(MusicClipType.Beat);\n//     if(Beat_clip_array.length ==0){\n//       beat_clip = new MusicClip(MusicClipType.Beat, Beat_clip_array.length, duration);\n//     }\n//     else{\n//       beat_clip = Beat_clip_array[0]\n//     }\n//     loadClip(beat_clip, beat_clip.getDuration())\n//     //beat_clip = new MusicClip(MusicClipType.Beat, Beat_clip_array.length, duration);\n//   }\n// })\n\n// function arrayPlus(array, delay){\n//   for(let i = 0; i < array.length; i++){\n//     for(let j = 0; j<array[0].length; j++){\n//       array[i][j] -= delay\n//     }\n//   }\n//   return array\n// }\n\n// function getExample(){\n//   if(musicId ==1){\n//     const delay1 = 0.5\n//     const clipDuration = 24.7\n//     const clipNoteset = [\"F5\",\"F5\",\"F5\",\"F5\",\"D#5\",\"D#5\",\"F5\",\"F5\",\"D#5\",\"D#5\",\"F5\",\"F5\",\"D#5\",\"D#5\",\"D#5\",\"D#5\",\"C5\",\"C5\",\"D#5\",\"D#5\",\"C5\",\"C5\",\"D#5\",\"D#5\",\"D#5\",\"D#5\",\"C5\",\"C5\",\"F5\",\"F5\",\"D#5\",\"D#5\",\"F5\",\"F5\",\"C5\",\"C5\",\"C5\",\"C5\",\"D#5\",\"D#5\",\"F5\",\"F5\",\"F5\",\"F5\",\"D#5\",\"D#5\",\"F5\",\"F5\",\"D#5\",\"D#5\",\"D#5\",\"D#5\",\"C5\",\"C5\",\"D#5\",\"D#5\",\"C5\",\"C5\",\"D#5\",\"D#5\",\"D#5\",\"D#5\",\"D#5\",\"D#5\",\"C5\",\"C5\",\"D#5\",\"D#5\",\"C5\",\"C5\",\"F5\",\"F5\",\"C5\",\"C5\",\"C5\",\"C5\",\"D#5\",\"D#5\",\"F5\",\"F5\",\"F5\",\"F5\",\"C6\",\"C6\",\"A#5\",\"A#5\",\"A#5\",\"A#5\",\"G#5\",\"G#5\",\"F5\",\"F5\",\"G#5\",\"G#5\",\"F5\",\"F5\",\"D#5\",\"D#5\",\"D#5\",\"D#5\",\"D#5\",\"D#5\",\"C5\",\"C5\",\"D#5\",\"D#5\",\"D#5\",\"D#5\",\"C5\",\"C5\",\"D#5\",\"D#5\",\"F5\",\"F5\",\"C5\",\"C5\",\"C5\",\"C5\",\"D#5\",\"D#5\",\"F5\",\"F5\",\"F5\",\"F5\",\"D#5\",\"D#5\",\"F5\",\"F5\",\"D#5\",\"D#5\",\"F5\",\"F5\",\"D#5\",\"D#5\",\"D#5\",\"D#5\",\"C5\",\"C5\",\"D#5\",\"D#5\",\"C5\",\"C5\",\"D#5\",\"D#5\",\"D#5\",\"D#5\",\"C5\",\"C5\",\"D#5\",\"D#5\",\"D#5\",\"D#5\",\"F5\",\"F5\"]\n//     const clipTimeset = [[0.647954979019165,-1],[0.647954979019165,0.7470661106262207],[0.8470660152587891,-1],[0.8470660152587891,1.2373997959136962],[1.2373997959136962,-1],[1.2373997959136962,1.3703999313354491],[1.3703999313354491,-1],[1.3703999313354491,1.7671941277923584],[1.7671941277923584,-1],[1.7671941277923584,1.9711941239776611],[1.9711941239776611,-1],[1.9711941239776611,2.378771],[2.3367709446868896,-1],[2.3367709446868896,2.602014068664551],[2.725013975204468,-1],[2.725013975204468,2.986477881744385],[3.0848358264312745,-1],[3.0848358264312745,3.2848358741149903],[3.2848358741149903,-1],[3.2848358741149903,3.4912540972747803],[3.450253969482422,-1],[3.450253969482422,3.653189933242798],[3.6151898264312745,-1],[3.6151898264312745,3.8782518054504393],[4.016251816894531,-1],[4.016251816894531,4.214254028610229],[4.244254,-1],[4.244254,4.341253883651733],[4.410256877929688,-1],[4.410256877929688,4.636256948501587],[4.801935043869019,-1],[4.801935043869019,4.967346921798706],[5.000346914169311,-1],\n//                         [5.000346914169311,5.494518055313111],[5.661517872207642,-1],[5.661517872207642,5.759305024795532],[5.831305051498413,-1],[5.831305051498413,6.133816137329101],[6.220816030517578,-1],[6.220816030517578,6.486191051498413],[6.617578112533569,-1],[6.617578112533569,6.685578190734863],[6.815630940872192,-1],[6.815630940872192,7.771677996185303],[7.746677900817871,-1],[7.746677900817871,7.911396954223632],[7.911396954223632,-1],[7.911396954223632,8.336253040054322],[8.369420165939331,-1],[8.369420165939331,8.631942],[8.728941883651734,-1],[8.728941883651734,9.098498996185302],[9.098498996185302,-1],[9.098498996185302,9.302419824523925],[9.39441983215332,-1],[9.39441983215332,9.519944225067139],[9.519944225067139,-1],[9.519944225067139,9.670944009536743],[9.670944009536743,-1],[9.670944009536743,9.753039973297119],[9.854040043869018,-1],[9.854040043869018,9.937039988555908],[9.998631034332275,-1],[9.998631034332275,10.265501106811524],[10.28750118119812,-1],[10.28750118119812,10.423501099182129],[10.379501188827515,-1],[10.379501188827515,10.743215855041504],[10.817222066757202,-1],[10.817222066757202,10.942222066757202],[11.008222051498413,-1],[11.008222051498413,11.474490202178956],[11.702572950408936,-1],[11.702572950408936,11.741572984741211],[11.838704011444092,-1],[11.838704011444092,12.202460937057495],[12.263460807357788,-1],[12.263460807357788,12.623494062942505],[12.599255144958496,-1],[12.599255144958496,12.689494047683716],[12.794494066757203,-1],[12.794494066757203,12.986207019073486],\n//                         [12.986207019073486,-1],[12.986207019073486,13.219377912261963],[13.152378,-1],[13.152378,13.266377843597413],[13.35437790272522,-1],[13.35437790272522,13.61115286076355],[13.61115286076355,-1],[13.61115286076355,13.820468053405762],[13.820468053405762,-1],[13.820468053405762,13.975521064849854],[13.943521,-1],[13.943521,14.338442020980835],[14.338442020980835,-1],[14.338442020980835,14.636548137329102],[14.702548122070313,-1],[14.702548122070313,14.968961091552734],[15.09839498664856,-1],[15.09839498664856,15.166395064849853],[15.269394990463256,-1],[15.269394990463256,15.533779917984008],[15.533779917984008,-1],[15.533779917984008,15.692114064849854],[15.66611404196167,-1],[15.66611404196167,15.933416072479249],[16.061416093460082,-1],[16.061416093460082,16.286133965667723],[16.286133965667723,-1],[16.286133965667723,16.784363087738036],[16.784363087738036,-1],[16.784363087738036,17.02023212588501],[17.12123195803833,-1],[17.12123195803833,17.609739110626222],[17.74741118310547,-1],[17.74741118310547,17.83641116975403],[17.905411175476075,-1],[17.905411175476075,18.267891047683715],[18.303891061035156,-1],[18.303891061035156,18.57058894659424],[18.63058888937378,-1],[18.63058888937378,18.729937020980834],[18.82893699809265,-1],[18.82893699809265,19.222282946594238],[19.264868990463256,-1],[19.264868990463256,19.359869019073486],[19.390868917984008,-1],[19.390868917984008,19.75131011253357],[19.82081601335144,-1],[19.82081601335144,19.948816034332275],[19.995815965667724,-1],[19.995815965667724,20.24800915068054],\n//                         [20.416937122070312,-1],[20.416937122070312,20.61939501335144],[20.745394940872192,-1],[20.745394940872192,21.007351064849853],[21.11235084550476,-1],[21.11235084550476,21.239734],[21.271734064849852,-1],[21.271734064849852,21.403700980926512],[21.46770087220764,-1],[21.46770087220764,21.59970108010864],[21.59970108010864,-1],[21.59970108010864,21.832057921798707],[22.030837102996827,-1],[22.030837102996827,22.233084973297117],[22.260084923706053,-1],[22.260084923706053,22.363084849319456],[22.39608508010864,-1],[22.39608508010864,22.629477160217284],[22.829621937057496,-1],[22.829621937057496,23.060766110626222],[23.085765967575075,-1],[23.085765967575075,23.585562851226808]]\n//     return new MusicClip(MusicClipType.Melody, 1, clipDuration, clipNoteset, arrayPlus(clipTimeset, delay1))\n//   }\n//   if(musicId ==3){  // 강남스타일\n//     const delay2 = 0\n//     const clipDuration = 29\n//     const clipNotesetn//     const clipTimeset = [[3.2567058931884767,-1],[3.2567058931884767,3.4579118569488525],[3.557912,-1],[3.557912,3.689911969482422],[3.5889118989105224,-1],[3.5889118989105224,3.7226458569488527],[3.62291181880188,-1],[3.62291181880188,3.78664598664856],[3.889645912261963,-1],[3.889645912261963,4.189145925613403],[4.348142009536743,-1],[4.348142009536743,4.621188],[4.775547104904175,-1],[4.775547104904175,4.888547020980835],[5.041248959945679,-1],[5.041248959945679,5.273249072479248],[5.408316988555908,-1],[5.408316988555908,5.568348207901001],[5.672348061035156,-1],[5.672348061035156,5.800348082015991],[5.737348118255615,-1],[5.737348118255615,5.832344135421753],[5.936343988555908,-1],[5.936343988555908,6.100642845504761],[6.169642851226807,-1],[6.169642851226807,6.295643017166138],[6.360233897003174,-1],[6.360233897003174,6.495233887466431],[6.559234017166138,-1],[6.559234017166138,6.658046127792359],[6.821046234603882,-1],[6.821046234603882,7.121540967575073],[7.15554088746643,-1],[7.15554088746643,7.288473897003174],[7.192473940872192,-1],[7.192473940872192,7.321474127792358],[7.255473904632568,-1],[7.255473904632568,7.388474040054321],[7.489225026702881,-1],[7.489225026702881,7.64922487411499],[7.948158032424927,-1],[7.948158032424927,8.176852977111817],[8.37378980545044,-1],[8.37378980545044,8.554147954223632],[8.671148057220458,-1],[8.671148057220458,8.873231020980835],[9.040223064849853,-1],[9.040223064849853,9.232222977111816],[9.399518030517578,-1],[9.399518030517578,9.498518007629395],[9.632309059127808,-1],[9.632309059127808,9.792309144958496],[9.829375908447266,-1],[9.829375908447266,9.957375929428101],[10.05737583406067,-1],[10.05737583406067,10.190274102996826],[10.256274087738037,-1],[10.256274087738037,10.390322900817871],[10.49132297138977,-1],[10.49132297138977,10.688927923706055],[10.784927879837037,-1],[10.784927879837037,10.981666967575073],[10.848928009536744,-1],[10.848928009536744,11.016667053405762],[10.91466705531311,-1],[10.91466705531311,11.085667059127807],[11.188902879837036,-1],[11.188902879837036,11.377903009536743],[11.188902879837036,-1],[11.188902879837036,11.354903007629394],[11.188902879837036,-1],[11.188902879837036,11.311902786376953],[11.682117938964844,-1],[11.682117938964844,11.90611791607666],[11.682117938964844,-1],[11.682117938964844,11.841117858856201],[11.682117938964844,-1],[11.682117938964844,11.873117923706054],[12.069004177383423,-1],\n//     [12.069004177383423,12.200682],[12.102004169754029,-1],[12.102004169754029,12.200682],[12.33668191798401,-1],[12.33668191798401,12.519072900817871],[12.33668191798401,-1],[12.33668191798401,12.466072927520752],[12.33668191798401,-1],[12.33668191798401,12.466072927520752],[12.69707311253357,-1],[12.69707311253357,12.89540505531311],[12.992577,-1],[12.992577,13.131577177383424],[13.222577019073487,-1],[13.222577019073487,13.364031049591064],[13.424031230789184,-1],[13.424031230789184,13.561736992370605],[13.690737179290771,-1],[13.690737179290771,13.828359158309937],[13.88935902861023,-1],[13.88935902861023,13.982358963760376],[14.157348904632569,-1],[14.157348904632569,16.233542786376955],[14.157348904632569,-1],[14.157348904632569,14.416863956130982],[14.58286408392334,-1],[14.58286408392334,14.87355895994568],[15.043559036239625,-1],[15.043559036239625,15.304633015258789],[15.472527059127808,-1],[15.472527059127808,15.73337094468689],[15.93364984550476,-1],[15.93364984550476,16.233542786376955],[16.394542799728395,-1],[16.394542799728395,16.491750982833864],[16.394542799728395,-1],[16.394542799728395,16.491750982833864],[16.59175112588501,-1],[16.59175112588501,16.73150805340576],[16.59175112588501,-1],[16.59175112588501,16.73150805340576],[16.857507980926513,-1],[16.857507980926513,17.097546051498412],[16.857507980926513,-1],[16.857507980926513,17.097546051498412],[16.857507980926513,-1],[16.857507980926513,17.097546051498412],[17.316477078201295,-1],[17.316477078201295,17.515796897003174],[17.316477078201295,-1],[17.316477078201295,17.496476906539918],[17.316477078201295,-1],[17.316477078201295,17.515796897003174],[17.779581782562257,-1],[17.779581782562257,17.976581809265138],[17.779581782562257,-1],[17.779581782562257,17.94858193133545],[17.779581782562257,-1],[17.779581782562257,17.94858193133545],[18.442111990463257,-1],[18.442111990463257,18.603422022888182],[18.442111990463257,-1],[18.442111990463257,18.672422028610228],[18.472111961853027,-1],[18.472111961853027,18.641421891281126],[18.472111961853027,-1],[18.472111961853027,18.547112009536743],[18.90182301525879,-1],[18.90182301525879,19.09982296948242],[18.90182301525879,-1],[18.90182301525879,19.132572116348268],[19.33657211253357,-1],[19.33657211253357,19.468231977111817],[19.36657208392334,-1],[19.36657208392334,19.496231855041504],[19.60023194659424,-1],[19.60023194659424,19.730580101089476],[19.635232032424927,-1],\n//     [19.635232032424927,19.794579992370604],[19.95876513923645,-1],[19.95876513923645,20.055765022888185],[20.25819198664856,-1],[20.25819198664856,20.429191990463256],[20.557494072479248,-1],[20.557494072479248,20.715801053405762],[20.85080104386902,-1],[20.85080104386902,20.982706908447266],[21.177706841690064,-1],[21.177706841690064,21.28033916975403],[21.409339118255616,-1],[21.409339118255616,21.609077988555907],[21.409339118255616,-1],[21.409339118255616,23.457958164031982],[21.44233911062622,-1],[21.44233911062622,23.424958171661377],[21.87029996757507,-1],[21.87029996757507,22.008299979019164],[22.299563062942504,-1],[22.299563062942504,22.46456302479553],[22.801332009536743,-1],[22.801332009536743,22.895155933242798],[23.258248889373778,-1],[23.258248889373778,23.394957961853027],[23.658449200271605,-1],[23.658449200271605,23.75744917738342],[23.693449047683714,-1],[23.693449047683714,23.78744914877319],[23.890449074386595,-1],[23.890449074386595,23.982915862670897],[23.890449074386595,-1],[23.890449074386595,23.982915862670897],[24.11591599809265,-1],[24.11591599809265,24.29822295994568],[24.11591599809265,-1],[24.11591599809265,24.29822295994568],[24.153915866485594,-1],[24.153915866485594,24.313222826431275],[24.576900085830687,-1],[24.576900085830687,24.71287189891052],[24.576900085830687,-1],[24.576900085830687,24.745871891281126],[24.576900085830687,-1],[24.576900085830687,24.745871891281126],[24.576900085830687,-1],[24.576900085830687,24.745871891281126],[25.040674965667726,-1],[25.040674965667726,25.204675],[25.040674965667726,-1],[25.040674965667726,25.272047066757203],[25.501109980926515,-1],[25.501109980926515,25.60010995803833],[25.734109782562257,-1],[25.734109782562257,25.867064979019165],[25.734109782562257,-1],[25.734109782562257,25.897064950408936],[25.766064908447266,-1],[25.766064908447266,25.933064963760376],[26.19991298474121,-1],[26.19991298474121,26.361738996185302],[26.19991298474121,-1],[26.19991298474121,26.391738967575073],[26.231913049591064,-1],[26.231913049591064,-1],[26.231913049591064,26.391738967575073],[26.231913049591064,26.361738996185302],[26.597031118255615,-1],[26.597031118255615,26.70803117929077],[26.597031118255615,-1],[26.597031118255615,26.729031087738036],[26.632030965667724,-1],[26.632030965667724,-1],[26.632030965667724,26.70803117929077],[26.632030965667724,26.66503095803833],[26.85717609727478,-1],[26.85717609727478,26.98817613923645],\n//     [26.89317611062622,-1],[26.89317611062622,27.051176102996827],[26.89317611062622,-1],[26.89317611062622,27.051176102996827],[26.89317611062622,-1],[26.89317611062622,27.031176122070313],[27.222837856948853,-1],[27.222837856948853,27.3829810038147],[27.222837856948853,-1],[27.222837856948853,27.31683795803833],[27.222837856948853,-1],[27.222837856948853,27.31683795803833],[27.25083797329712,-1],[27.25083797329712,27.349981011444093],[27.515980900817873,-1],[27.515980900817873,27.61690596948242],[27.54998105912781,-1],[27.54998105912781,27.648906034332274],[27.781905931335448,-1],[27.781905931335448,27.849906009536742],[27.781905931335448,-1],[27.781905931335448,27.91598412779236],[28.007984135421754,-1],[28.007984135421754,28.083984110626222],[28.20902402670288,-1],[28.20902402670288,28.34502394468689],[28.44222312779236,-1],[28.44222312779236,28.53722315640259],[0.24254682261657715,-1],[0.24254682261657715,0.3215108817443848],[0.6562768874664306,-1],[0.6562768874664306,0.7833260419616699],[1.1804810324249269,-1],[1.1804810324249269,1.2454810896453858],[1.376396026702881,-1],[1.376396026702881,1.442396011444092],[1.5763960743865968,-1],[1.5763960743865968,1.6761529771118164],[2.0077671277923583,-1],[2.0077671277923583,2.175566099182129],[2.304566047683716,-1],[2.304566047683716,2.431524202178955],[2.5305241792907713,-1],[2.5305241792907713,2.6425241678466795],[2.992806059127808,-1],[2.992806059127808,3.112806183105469],[3.2244580667572023,-1],[3.2244580667572023,3.421458093460083],[0.6189280820159913,-1],[0.6189280820159913,0.7199281525878907],[1.2180329523162843,-1],[1.2180329523162843,1.2840329370574952],[1.4799950247955322,-1],[1.4799950247955322,1.5489950305175781],[2.1176829809265136,-1],[2.1176829809265136,2.1796830171661377],[1.4824731182556152,-1],[1.4824731182556152,1.5769921354217529],[1.7429920247955322,-1],[1.7429920247955322,1.840012135421753],[2.1030121468658445,-1],[2.1030121468658445,2.23508904196167],[2.5403859313354493,-1],[2.5403859313354493,2.698997150680542],[2.7949971068115236,-1],[2.7949971068115236,2.8639971125335695],[3.0606037959136962,-1],[3.0606037959136962,3.1596040114440918]]\n//     return new MusicClip(MusicClipType.Melody, 1, clipDuration, clipNoteset, arrayPlus(clipTimeset, delay2))\n//   }\n//   if(musicId ==2){  //핑크퐁\n//     const delay3 = 0\n//     const clipDuration = 15\n//     const clipNoteset = [\"C4\",\"C4\",\"E5\",\"E5\",\"G5\",\"G5\",\"C5\",\"C5\",\"C4\",\"C4\",\"E5\",\"E5\",\"G5\",\"G5\",\"C4\",\"C4\",\"C4\",\"C4\",\"E5\",\"E5\",\"C5\",\"C5\",\"G5\",\"G5\",\"C4\",\"C4\",\"E5\",\"E5\",\"G5\",\"G5\",\"C5\",\"C5\",\"G4\",\"G4\",\"G5\",\"G5\",\"D5\",\"D5\",\"B4\",\"B4\",\"G4\",\"G4\",\"G5\",\"G5\",\"D5\",\"D5\",\"B4\",\"B4\",\"G4\",\"G4\",\"G4\",\"G4\",\"D5\",\"D5\",\"B4\",\"B4\",\"G5\",\"G5\",\"G4\",\"G4\",\"G5\",\"G5\",\"D5\",\"D5\",\"B4\",\"B4\",\"F#5\",\"F#5\",\"D4\",\"D4\",\"D5\",\"D5\",\"A4\",\"A4\",\"G4\",\"G4\",\"G5\",\"G5\",\"D5\",\"D5\",\"B4\",\"B4\",\"G4\",\"G4\",\"D5\",\"D5\",\"G5\",\"G5\",\"B4\",\"B4\",\"G4\",\"G4\",\"G4\",\"G4\",\"D5\",\"D5\",\"G5\",\"G5\",\"B4\",\"B4\",\"G4\",\"G4\",\"G5\",\"G5\",\"D5\",\"D5\",\"B4\",\"B4\",\"C4\",\"C4\",\"E5\",\"E5\",\"G5\",\"G5\",\"C5\",\"C5\",\"C4\",\"C4\",\"E5\",\"E5\",\"G5\",\"G5\",\"C5\",\"C5\",\"C4\",\"C4\",\"C4\",\"C4\",\"E5\",\"E5\",\"G5\",\"G5\",\"C5\",\"C5\",\"C4\",\"C4\",\"E5\",\"E5\",\"G5\",\"G5\",\"C5\",\"C5\",\"G4\",\"G4\",\"D5\",\"D5\",\"B4\",\"B4\",\"G5\",\"G5\",\"G4\",\"G4\",\"D5\",\"D5\",\"G5\",\"G5\",\"B4\",\"B4\",\"G4\",\"G4\",\"G4\",\"G4\",\"D5\",\"D5\",\"G5\",\"G5\",\"B4\",\"B4\",\"G4\",\"G4\",\"G5\",\"G5\",\"D5\",\"D5\",\"B4\",\"B4\",\"F#5\",\"F#5\",\"A4\",\"A4\",\"D4\",\"D4\",\"D5\",\"D5\"]\n//     const clipTimeset = [[1.3686621468658446,-1],[1.3686621468658446,1.5025598264312745],[1.601559803543091,-1],[1.601559803543091,1.6715599752044679],[1.601559803543091,-1],[1.601559803543091,1.7015599465942384],[1.601559803543091,-1],[1.601559803543091,1.6715599752044679],[1.8342479771118163,-1],[1.8342479771118163,2.000222855041504],[2.133222990463257,-1],[2.133222990463257,2.213222914169312],[2.133222990463257,-1],[2.133222990463257,2.2332228950958255],[2.26726204196167,-1],[2.26726204196167,2.366262019073486],[2.5622148474121094,-1],[2.5622148474121094,2.6272149046325683],[2.6272149046325683,-1],[2.6272149046325683,2.6912147959136963],[2.6272149046325683,-1],[2.6272149046325683,2.7372147997283935],[2.6762149294281006,-1],[2.6762149294281006,2.7572150190734863],[2.926414855041504,-1],[2.926414855041504,3.0204149561309817],[3.1933549694824217,-1],[3.1933549694824217,3.2633551411437987],[3.1933549694824217,-1],[3.1933549694824217,3.2853549771118162],[3.1933549694824217,-1],[3.1933549694824217,3.2633551411437987],[3.452313927520752,-1],[3.452313927520752,3.5483138836517334],[3.6808028416900633,-1],[3.6808028416900633,3.8138029771118163],[3.6808028416900633,-1],[3.6808028416900633,3.7828028397827147],[3.6808028416900633,-1],[3.6808028416900633,3.7828028397827147],[3.9464110076293943,-1],[3.9464110076293943,4.045410984741211],[4.216958841690063,-1],[4.216958841690063,4.308958849319458],[4.216958841690063,-1],[4.216958841690063,4.2779589504089355],[4.216958841690063,-1],[4.216958841690063,4.2779589504089355],[4.341958841690063,-1],[4.341958841690063,4.408002887466431],[4.606003080108643,-1],[4.606003080108643,4.709742828338623],[4.7367427787475584,-1],[4.7367427787475584,4.805742784469604],[4.7367427787475584,-1],[4.7367427787475584,4.836742921798706],[4.7367427787475584,-1],[4.7367427787475584,4.867742820709228],[5.007371986648559,-1],[5.007371986648559,5.134371841690063],[5.232361879837036,-1],[5.232361879837036,5.364361849319458],[5.232361879837036,-1],[5.232361879837036,5.297361937057495],[5.2723618416900635,-1],[5.2723618416900635,5.350361910354614],[5.498846045776367,-1],[5.498846045776367,5.933823841690064],[5.529846183105469,-1],[5.529846183105469,5.896823900817871],[5.529846183105469,-1],[5.529846183105469,5.933823841690064],[5.529846183105469,-1],[5.529846183105469,5.933823841690064],[7.55341595803833,-1],[7.55341595803833,7.773524171661377],[7.838925,-1],[7.838925,8.006925221252441],\n//     [7.871924992370605,-1],[7.871924992370605,8.006925221252441],[7.871924992370605,-1],[7.871924992370605,8.006925221252441],[8.103925104904175,-1],[8.103925104904175,8.334725946594238],[8.367725938964844,-1],[8.367725938964844,8.469452956130981],[8.367725938964844,-1],[8.367725938964844,8.502452948501587],[8.367725938964844,-1],[8.367725938964844,8.469452956130981],[8.502452948501587,-1],[8.502452948501587,8.598452904632568],[8.797741085830689,-1],[8.797741085830689,8.864740998092651],[8.864740998092651,-1],[8.864740998092651,8.99765595613098],[8.864740998092651,-1],[8.864740998092651,9.063655940872192],[8.864740998092651,-1],[8.903741032424927,8.99765595613098],[9.09265598474121,-1],[9.09265598474121,9.665876998092651],[9.35690798474121,-1],[9.35690798474121,9.554876937057495],[9.410907885559082,-1],[9.410907885559082,9.491876973297119],[9.410907885559082,-1],[9.410907885559082,9.53387702861023],[9.62387694277954,-1],[9.62387694277954,9.884661994277954],[9.926662049591064,-1],[9.926662049591064,10.064082122070312],[9.926662049591064,-1],[9.926662049591064,10.085082030517578],[9.926662049591064,-1],[9.926662049591064,10.085082030517578],[10.150082087738037,-1],[10.150082087738037,10.416554036239624],[10.446554007629395,-1],[10.446554007629395,10.581743996185303],[10.446554007629395,-1],[10.446554007629395,10.61574415449524],[10.446554007629395,-1],[10.446554007629395,10.581743996185303],[10.581743996185303,-1],[10.581743996185303,10.676744024795532],[10.878411988555909,-1],[10.878411988555909,10.975412110626221],[10.942412118255616,-1],[10.942412118255616,11.236708778747559],[10.975412110626221,-1],[10.975412110626221,11.270708937057496],[10.975412110626221,-1],[10.975412110626221,11.236708778747559],[11.236708778747559,-1],[11.236708778747559,11.668574822616577],[11.502612089645385,-1],[11.502612089645385,11.615574849319458],[11.502612089645385,-1],[11.502612089645385,11.668574822616577],[11.534612154495239,-1],[11.534612154495239,11.635574830245972],[11.770574820709228,-1],[11.770574820709228,12.035808893188477],[12.035808893188477,-1],[12.035808893188477,12.166612954223632],[12.035808893188477,-1],[12.035808893188477,12.199612946594238],[12.071808906539918,-1],[12.071808906539918,12.199612946594238],[12.262612910354614,-1],[12.262612910354614,12.493988156402589],[12.566988110626221,-1],[12.566988110626221,12.666757076293946],[12.566988110626221,-1],[12.566988110626221,12.693757026702881],\n//     [12.566988110626221,-1],[12.566988110626221,12.693757026702881],[12.693757026702881,-1],[12.693757026702881,12.799757211715699],[12.994352040054322,-1],[12.994352040054322,13.065351900817872],[13.086352047683716,-1],[13.086352047683716,13.197543148773194],[13.086352047683716,-1],[13.086352047683716,13.21854305722046],[13.086352047683716,-1],[13.086352047683716,13.197543148773194],[13.316543106811524,-1],[13.316543106811524,13.813176093460083],[13.583616179290772,-1],[13.583616179290772,13.788175998092651],[13.583616179290772,-1],[13.583616179290772,13.685616177383423],[13.621616047683716,-1],[13.621616047683716,13.685616177383423],[13.852175889373779,-1],[13.852175889373779,14.077703020980834],[13.852175889373779,-1],[13.852175889373779,14.077703020980834],[13.879176078201294,-1],[13.879176078201294,14.077703020980834],[13.879176078201294,-1],[13.879176078201294,14.077703020980834]]\n//     return new MusicClip(MusicClipType.Melody, 1, clipDuration, clipNoteset, arrayPlus(clipTimeset, delay3))\n//   }\n//   else{\n//     return new MusicClip(MusicClipType.Melody, Melody_clip_array.length, duration);\n//   }\n// }\n\n\n\n\n// function settingExample(){\n//   if(current_clip_type == MusicClipType.Melody){\n//     const clipDuration = 30\n//     const clipNoteset = [\"G5\",\"E5\",\"D5\",\"C5\",\"D5\",\"E5\",\"G5\",\"E5\",\"D5\",\"C5\",\"A5\",\"E5\",\"D5\",\"C5\",\"D5\",\"E5\",\"A4\",\"G5\",\"E5\",\"D5\",\"C5\",\"D5\",\"E5\",\"G5\",\"E5\",\"D5\",\"C5\",\"A5\",\"E5\",\"D5\",\"C5\",\"D5\",\"E5\",\"A5\",\"D5\",\"A5\",\"G5\",\"A5\",\"G5\",\"A5\",\"G5\",\"E5\",\"D5\",\"E5\",\"G5\",\"E5\",\"D5\",\"A4\",\"C5\"]\n//     const clipTimeset = [[0.5720410801086426,0.7300410724792481],[1.1610019294281007,1.2907990114440917],[1.4237989084472655,1.5540709179840089],[1.7190708798370362,1.8473000343322754],[2.1814630190734863,2.314463154495239],[2.4460749465942384,2.5120749313354493],[2.7430760114440917,2.8764059485015867],[3.3050919828338623,3.3710919675750732],[3.601070954223633,3.667070938964844],[3.8980990190734865,4.0300148836517335],[4.921056057220459,5.0193979294281],[5.448078870300293,5.515079020980835],[5.746056007629394,5.846544973297119],[6.043545,6.173041082015991],[6.636477931335449,6.767477973297119],[6.937605017166137,6.966605061035156],[7.26400212588501,8.685083061035156],[9.640039020980835,9.775039011444091],[10.201064992370606,10.267064977111817],[10.466885992370605,10.531886049591064],[10.829255876022339,10.960059885559081],[11.419733024795532,11.51973316784668],[11.653087794006348,11.765088020980835],[11.952059024795533,12.08105897329712],[12.5110841411438,12.643084110626221],[12.874066879837036,12.939066937057495],[13.171033851226806,13.368070917984008],[14.19523022125244,14.385710173568725],[14.787166091552734,14.896900954223632],[15.084900917984008,15.211124885559082],[15.447746007629394,15.54674622315979],[16.10807395613098,16.173827908447265],[16.375828049591064,16.404827855041503],[16.703048125885008,18.45108102479553],[19.208072062942506,19.37358789891052],[20.134640938964843,20.29910494087219],[20.464018870300293,20.597019005722046],[21.650081870300294,21.815736038146973],[22.016539980926513,22.147540022888183],[22.320095160217285,22.445095160217285],[22.70805482833862,22.809270990463258],[22.973271024795533,23.43309004005432],[24.09308415449524,24.32402906866455],[24.984623984741212,25.128623799728395],[25.281047122070312,25.413047091552734],[25.621105076293944,25.646105171661375],[25.942291998092653,26.074030173568726],[26.30606394277954,26.403064064849854],[26.60307215258789,28.02907389128113]]\n//     melody_clip = new MusicClip(MusicClipType.Melody, 0, clipDuration, clipNoteset, clipTimeset)\n//     loadClip(melody_clip, melody_clip.getDuration());\n//   }\n//   else if(current_clip_type == MusicClipType.Beat){\n//     const clipDuration = 33\n//     const clipNoteset = [0,2,0,2,0,2,0,2,0,1,0,1,0,1,0,1,0,2,0,2,1,2,1,2,0,2,0,2,1,2,1,2,1,2,2,0,2,2,0,2,2,0,2,2,0,3,0,3,0,3,3,0,3,3,3,0,3,3,3,0,0,0,0,2,0,2,3,1,3,2,2,1,2,3,2]\n//     const clipTimeset = [0.8923350743865966,1.3215988893737793,1.783887082015991,2.210053062942505,2.6426171792907716,3.071248047683716,3.5009819771118162,3.937069855041504,4.357986919891357,4.688954977111816,5.150106043869019,5.546112814987183,5.973742160217285,6.371558003814697,6.767146973297119,7.203359017166138,7.669121959945679,8.086711982833862,8.516056912261963,8.946046946594238,9.373160093460083,9.804123950408936,10.232187963760376,10.694013051498413,11.123076032424926,11.520072929428101,11.948057003814696,12.375916809265137,12.805368946594239,13.235294948501586,13.670276024795532,14.139074061035156,14.587094043869019,15.049020977111816,15.214032072479249,15.447037007629394,15.809105036239623,15.973025893188476,16.27105195803833,16.63296491416931,16.80208719645691,17.096145074386598,17.537091994277954,17.723091864578247,17.987112175476074,18.383171019073487,18.812052855041504,19.208062897003174,19.638008064849853,20.071020120162963,20.891656049591063,21.452100020980836,21.81414294468689,22.21116015258789,22.64113691607666,23.036157864578247,23.431101112533568,23.870385104904173,24.323038141143797,25.314036114440917,26.105072834060667,26.93616991989136,27.757107160217284,28.11808784550476,28.513469032424926,28.952086952316286,29.3380860038147,29.8010610705719,30.19804004005432,30.626112114440918,30.659112106811524,31.023299990463258,31.452135992370607,31.886031036239626,32.30906002861023]\n//     beat_clip = new MusicClip(MusicClipType.Beat, 0, clipDuration, clipNoteset, clipTimeset)\n//     loadClip(beat_clip, beat_clip.getDuration());\n//   }\n// }\n\ndocument.getElementById(\"PreviousButton\").addEventListener(\"click\", function(){\n  console.log(\"previous check\")\n  // player1.seekTo(0);\n  // player2.seekTo(0);\n  // player1.pauseVideo();\n  // player2.pauseVideo();\n  stopRecording();\n  stopAllNotePlayer();\n  play_state = false;\n  if(current_clip_type == _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Beat){\n    console.log('to Login')\n    document.getElementById(\"loginPage\").click();\n  }\n  else if(current_clip_type == _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Melody){\n    console.log(\"to Beat\")\n    current_clip_type = _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Beat;\n    document.getElementById(\"BeatContainer\").style.display = 'block'\n    document.getElementById(\"MelodyContainer\").style.display = 'none'\n    document.getElementById(\"TemplateContainer\").style.display = 'none'\n    //document.getElementById(\"sheetMusicRecordButton\").style.display = 'none'\n    clearNoteClip(_Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Beat);\n    initializeTimer();\n    // settingExample();\n    //document.getElementById(\"danceVideoButton\").click();\n    //addClipToTrack(false, false, false);\n  }\n  else{\n    console.log('to Melody')\n    saveModeCheck  = false\n    current_clip_type = _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Melody;\n    document.getElementById(\"BeatContainer\").style.display = 'none' \n    document.getElementById(\"MelodyContainer\").style.display = 'block'\n    document.getElementById(\"TemplateContainer\").style.display = 'none'\n    //document.getElementById(\"sheetMusicRecordButton\").style.display = 'none'\n    clearNoteClip(_Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Melody);\n    initializeTimer();\n    //document.getElementById(\"danceVideoButton\").click();\n    //addClipToTrack(false, false, false);\n    //document.getElementById(\"exampleVideoButton\").disabled = false;\n  }\n})\n\ndocument.getElementById(\"NextButton\").addEventListener(\"click\", function(){\n  console.log(\"next check\")\n  // player1.seekTo(0);\n  // player2.seekTo(0);\n  // player1.pauseVideo();\n  // player2.pauseVideo();\n  stopRecording();\n  stopAllNotePlayer();\n  play_state = false;\n  if(current_clip_type == _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Theme){\n    current_clip_type = _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Beat;\n    document.getElementById(\"sheetMusicController\").style.display = \"block\";\n    document.getElementById(\"ThemaContainer\").style.display = \"none\";\n    document.getElementById(\"BeatContainer\").style.display = 'block';\n    document.getElementById(\"MelodyContainer\").style.display = 'none';\n    document.getElementById(\"TemplateContainer\").style.display = 'none';\n    clearNoteClip(_Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Beat);\n    initializeTimer();\n  }\n  else if(current_clip_type == _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Beat){\n    console.log(\"to Melody\")\n    current_clip_type = _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Melody;\n    document.getElementById(\"ThemaContainer\").style.display = \"none\";\n    document.getElementById(\"BeatContainer\").style.display = 'none' \n    document.getElementById(\"MelodyContainer\").style.display = 'block'\n    document.getElementById(\"TemplateContainer\").style.display = 'none'\n    clearNoteClip(_Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Melody);\n    initializeTimer();\n  }\n  // else if(current_clip_type == MusicClipType.Melodys){\n  //   console.log(\"to Tempalte\")\n  //   if(play_state){\n  //     player1.pauseVideo();\n  //     player2.pauseVideo();\n  //     player1.seekTo(0);\n  //     player2.seekTo(0);\n  //     stopRecording();\n  //     stopAllNotePlayer();\n  //     play_state = false;\n  //   }\n  //   current_clip_type = MusicClipType.Template;\n  //   document.getElementById(\"BeatContainer\").style.display = 'none'\n  //   document.getElementById(\"MelodyContainer\").style.display = 'none'\n  //   //document.getElementById(\"TemplateContainer\").style.display = 'block'\n  //   document.getElementById(\"danceVideoButton\").click();\n  //   addClipToTrack(true, true, false);\n  // }\n  else{\n    console.log(\"to Save\")\n    current_clip_type = _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Template;\n    document.getElementById(\"ThemaContainer\").style.display = \"none\";\n    document.getElementById(\"BeatContainer\").style.display = 'none'\n    document.getElementById(\"MelodyContainer\").style.display = 'none'\n    document.getElementById(\"TemplateContainer\").style.display = 'block'\n    //document.getElementById(\"sheetMusicRecordButton\").style.display = 'block'\n    //document.getElementById(\"danceVideoButton\").click();\n    // player2.mute();\n    //addClipToTrack(true, true, true);\n    //document.getElementById(\"exampleVideoButton\").disabled = true;\n  }\n})\n\n// function addClipToTrack(melodyBool, BeatBool, TemplateBool){\n//   TrackObject = new MusicTrack(); \n//   InitializeAllTrack();\n//   if(melodyBool){\n//     if(Melody_clip_array.length > 0){\n//       const Tmp_clip = get_clip(MusicClipType.Melody, 0)\n//       const clipTime = createTrackClipObject('melody-dropzone', Tmp_clip.getClipType(), Tmp_clip.getClipId(), Tmp_clip.getDuration(), TrackObject.getMelodyId())\n//       TrackObject.setMusicClip(Tmp_clip, clipTime)\n//     }\n//   }\n//   if(BeatBool){\n//     if(Beat_clip_array.length > 0){\n//       const Tmp_clip = get_clip(MusicClipType.Beat, 0)\n//       const clipTime = createTrackClipObject('beat-dropzone', Tmp_clip.getClipType(), Tmp_clip.getClipId(), Tmp_clip.getDuration(), TrackObject.getMelodyId())\n//       TrackObject.setMusicClip(Tmp_clip, clipTime)\n//     }\n//   }\n//   if(TemplateBool){\n//     if(Template_clip_array.length > 0){\n//       const tempalteId = parseInt(0);\n//       const clipTime = createTrackClipObject_template('template-dropzone', tempalteId, TrackObject.getTempalateId())\n//       TrackObject.setTemplateClip(tempalteId, clipTime)\n//     }\n//   }\n// }\n\nfunction convertCharacters(inputString) {\n  let convertedString = '';\n  for (let i = 0; i < inputString.length; i++) {\n    if (inputString[i] === '.') {\n      convertedString += '_';\n    } else if (inputString[i] === '@') {\n      convertedString += '()';\n    } else {\n      convertedString += inputString[i];\n    }\n  }\n  return convertedString;\n}\n\n// let mediaRecorder = null;\n// const arrVideoData = [];\n// async function canvasRecordingStart(){\n//   // 캔버스 영역 화면을 스트림으로 취득\n//   const mediaStream = document.getElementById(\"shape-canvas\").firstElementChild.captureStream();\n\n//   // Get audio stream\n//   //const audioStream = await navigator.mediaDevices.getUserMedia({ audio: true, video: false });\n\n//   // Combine video and audio streams\n//   //let combinedStream = new MediaStream([...mediaStream.getTracks(), ...audioStream.getTracks()]);\n\n  \n//   // // Get display and audio streams\n//   // const displayMediaOptions = {\n//   //   video: {\n//   //     cursor: 'always'\n//   //   },\n//   //   audio: true\n//   // };\n//   // const displayStream = await navigator.mediaDevices.getDisplayMedia(displayMediaOptions);\n\n//   // // Combine canvas video and display audio streams\n//   // let combinedStream = new MediaStream([...canvasStream.getVideoTracks(), ...displayStream.getAudioTracks()]);\n\n\n\n\n//   // MediaRecorder(녹화기) 객체 생성\n//   mediaRecorder = new MediaRecorder(mediaStream);\n\n//   // MediaRecorder.dataavailable 이벤트 처리\n//   mediaRecorder.ondataavailable = (event)=>{\n//       // 스트림 데이터(Blob)가 들어올 때마다 배열에 담아둔다.\n//       arrVideoData.push(event.data);\n//   }\n\n//   // MediaRecorder.stop 이벤트 처리\n//   mediaRecorder.onstop = (event)=>{\n//       // 들어온 스트림 데이터들(Blob)을 통합한 Blob객체를 생성\n//       const blob = new Blob(arrVideoData);\n\n//       // BlobURL 생성: 통합한 스트림 데이터를 가르키는 임시 주소를 생성\n//       const blobURL = window.URL.createObjectURL(blob);\n\n//       // 다운로드 구현\n//       const $anchor = document.createElement(\"a\"); // 앵커 태그 생성\n//       document.body.appendChild($anchor);\n//       $anchor.style.display = \"none\";\n//       $anchor.href = blobURL; // 다운로드 경로 설정\n//       $anchor.download = convertCharacters(userName + \"_\" + userEmail) + \".mp4\"; // 파일명 설정\n//       $anchor.click(); // 앵커 클릭\n      \n//       // 배열 초기화\n//       arrVideoData.splice(0);\n//   }\n\n//   // 녹화 시작\n//   mediaRecorder.start(); \n// }\n// function canvasRecordingStop(){\n//   // 녹화 중단!\n//   mediaRecorder.stop(); \n// }\n/*-----------------------------MIDI 파일 생성용 코드-----------------------------------------*/\n\nfunction generateMidi() {\n  var file = new _jsmidgen_js__WEBPACK_IMPORTED_MODULE_2__.File();\n  var track = new _jsmidgen_js__WEBPACK_IMPORTED_MODULE_2__.Track();\n  file.addTrack(track);\n\n  // Test MIDI 작업용 코드 //\n  // let [TestNoteSet, TestTimeSet] = melody_clip.getMusicClip();\n  // for(let i = 0; i < TestNoteSet.length; i ++){\n  //   console.log(\"Test\", TestNoteSet[i], TestTimeSet[i][0])\n  //   track.addNote(0, TestNoteSet[i], TestTimeSet[i][1] - TestTimeSet[i][0], TestTimeSet[i][0]);\n  // }\n\n\n  track.addNote(0, 'c4', 32, 14);\n  track.addNote(0, 'd4', 32, 15);\n  track.addNote(0, 'e4', 32, 16);\n  track.addNote(0, 'f4', 32, 17);\n  track.addNote(0, 'g4', 32, 25);\n  track.addNote(0, 'a4', 32, 26);\n  track.addNote(0, 'b4', 32, 27);\n  track.addNote(0, 'c5', 32, 28);\n\n\n  // Convert file to a binary string\n  var midiData = file.toBytes();\n  // Convert binary string to array of 8-bit integers\n  var byteNumbers = new Array(midiData.length);\n  for (var i = 0; i < midiData.length; i++) {\n      byteNumbers[i] = midiData.charCodeAt(i);\n  }\n  var byteArray = new Uint8Array(byteNumbers);\n  // Create a blob that looks like a file.\n  var blob = new Blob([byteArray], {type: \"application/octet-stream\"});\n  // Create a link for our script to 'click'\n  var downloadLink = document.createElement('a');\n  // Supply the blob as the link's href\n  downloadLink.href = window.URL.createObjectURL(blob);\n  // Give the link a default file name\n  downloadLink.download = 'test.mid';\n  // Append the link to the body\n  document.body.appendChild(downloadLink);\n  // Simulate a click to start the download\n  downloadLink.click();\n  // Remove the link from the body\n  document.body.removeChild(downloadLink);\n}\n\n/*-----------------------------MIDI 파일 생성용 코드-----------------------------------------*/\n\n\n\nfunction InitializeAllSetting(){\n  currentTime = 0.0;\n  currentTrackTime = 0.0;\n  play_state = false;\n  play_state_track = false;\n  Template_clip_array.length = 0;\n  Melody_clip_array.length = 0;\n  Beat_clip_array.length = 0;\n  melody_clip = new _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClip(_Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Melody, Melody_clip_array.length, duration);\n  beat_clip = new _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClip(_Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Beat, Beat_clip_array.length, duration);\n  template_clip = new _Share_js__WEBPACK_IMPORTED_MODULE_0__.TemplateClip(Template_clip_array.length);\n  current_clip_type = _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Beat;\n  onNoteList = [];\n  previousNote = [];\n  previousNote_track = [];\n  TrackObject = new _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicTrack();\n  previousDial_ID = -1;\n  doubleChecker = 0;\n  trackActivaqte = false;\n  noteClickIndex = -1;\n  trackClickIndex = -1;\n  trackClickType = null\n  lyricsId = 0;\n  stopRecording();\n  clearNoteClip(_Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Beat);\n  clearNoteClip(_Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Melody);\n  clearAllBoxClip();\n  initializeTimer();\n  initializeTimer2();\n}\n\n/* Timer Setting and Update code*/\nfunction startRecording(){//Timer를 시작하는 코드\n  stopTrack()\n  play_state = true;\n  startTimer();\n  startMetronome();\n}\nfunction stopRecording(){//Timer를 중지하는 코드\n  play_state = false;\n  noteSizeAllOff();\n  stopTimer();\n  stopMetronome();\n}\nfunction startTimer() { // 타이머 시작 코드\n  if (!timer) { // 타이머가 이미 실행 중이지 않은 경우에만 실행\n    timer = setInterval(updateTime, 1 / fps * 1000); // 0.01초 간격으로 updateTime 함수 실행\n  }\n}\nfunction stopTimer() {  // 타이머 정지 코드\n  clearInterval(timer);\n  timer = null; // 타이머 변수 초기화\n}\n\n\n// track timer code\nfunction startTrack(){//Timer를 시작하는 코드\n  stopRecording()\n  play_state_track = true;\n  startTimer2();\n}\nfunction stopTrack(){//Timer를 중지하는 코드\n  play_state_track = false;\n  noteSizeAllOff();\n  stopTimer2();\n}\nfunction startTimer2() { // 타이머 시작 코드\n  if (!timer) { // 타이머가 이미 실행 중이지 않은 경우에만 실행\n    timer = setInterval(updateTime2, 1 / fps * 1000); // 0.01초 간격으로 updateTime 함수 실행\n  }\n}\nfunction stopTimer2() {  // 타이머 정지 코드\n  clearInterval(timer);\n  timer = null; // 타이머 변수 초기화\n}\n\nfunction updateTime() { //시간에 따라 업데이트 해야하는 함수들\n  currentTime += 1/fps;\n  musicPlayer(currentTime);\n  //console.log(time_to_px(currentTime, duration)-clip_start_px);\n  $(\"#slider\").slider(\"value\",time_to_px(currentTime, duration));\n  timeLine2.style.left = (time_to_px(currentTime, duration)-clip_start_px) + \"px\";\n  timeLine1.style.left = (time_to_px(currentTime, duration)-clip_start_px) + \"px\";\n  // console.log(onNoteList[0].style.left, time_to_px(currentTime, duration) + \"px\")\n  // updateTime2(currentTime)\n  if(current_clip_type == _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Melody){\n    document.getElementById(\"lyricsDisplay\").innerHTML = melody_clip.getLyrics(currentTime);\n  }\n  for (let item of onNoteList){\n    noteResizeChanger(item, time_to_px(currentTime, duration));\n  }\n  if(currentTime >= duration){\n    stopRecording() //끝 도달하면 자동으로 종료\n  }\n}\n$(\"#slider\").slider({ //Timer 슬라이더\n  value: clip_start_px,\n  min: clip_start_px,\n  max: clip_box_width,\n  step: 0.01,\n  slide: function( event, ui ) {\n    timeLine1.style.left = ((ui.value)-clip_start_px) + \"px\";\n    timeLine2.style.left = ((ui.value)-clip_start_px) + \"px\";\n    currentTime = px_to_time(ui.value, duration);\n    // if(practiceMode){\n    //   player1.seekTo(px_to_time(ui.value, duration), true);\n    // }\n    // else{\n    //   player2.seekTo(px_to_time(ui.value, duration), true);\n    // }\n    noteSizeAllOff();\n  }\n});\nfunction initializeTimer(){ //Timer 초기화\n  stopRecording();\n  currentTime = 0.0;\n  $(\"#slider\").slider(\"value\",time_to_px(currentTime, duration));\n  timeLine2.style.left = (time_to_px(currentTime, duration)-clip_start_px) + \"px\";\n  timeLine1.style.left = (time_to_px(currentTime, duration)-clip_start_px) + \"px\";\n}\nfunction time_to_px(time, duration, width = clip_box_width, start = clip_start_px){ //Time을 Px로 변환하는 코드\n  return start + time / duration * (width - start)\n}\nfunction time_to_px_Scale(time, duration, width = clip_box_width, start = clip_start_px){ //Time을 Px로 변환하는 코드\n  return time / duration * (width - start)\n}\nfunction px_to_time(px, duration, width = clip_box_width, start = clip_start_px){  //Px을 Time으로 변환하는 코드\n  return (px - start) * duration / (width - start)\n}\nfunction px_to_time_Scale(px, duration, width = clip_box_width, start = clip_start_px){  //Px Scale을 Time Scale로 변환하는 코드\n  return px * duration / (width - start)\n}\n/*Note Sound Maker*/\nfunction musicPlayer(currentTime){  //음, 비트 소리를 재생하는 코드\n  if(current_clip_type == _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Melody){\n    let currentNote = melody_clip.getcurrentNoteSet(currentTime)\n    notePlayer(currentNote, previousNote);\n    previousNote = melody_clip.getcurrentNoteSet(currentTime);\n  }\n  else if(current_clip_type == _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Beat){\n    let currentBeat = beat_clip.getcurrentNoteSet(currentTime);\n    for (let beat of currentBeat){\n      (0,_Synthesizer_js__WEBPACK_IMPORTED_MODULE_1__.beat_player)(beat);\n      setTimeout(() => (0,_Synthesizer_js__WEBPACK_IMPORTED_MODULE_1__.beat_output_play)(beat), 100);\n    }\n  }\n}\nfunction notePlayer(currentNote, previousNote){ //피아노 음 재생 함수\n  //piano_player(currentNote[0], true);\n  var exclusiveArr1 = currentNote.filter(function(val) {\n    return previousNote.indexOf(val) === -1;\n  });\n  var exclusiveArr2 = previousNote.filter(function(val) {\n    return currentNote.indexOf(val) === -1;\n  });\n  if(exclusiveArr1.length > 0){\n    //console.log(\"Inpnut\", exclusiveArr1);\n    for( let note of exclusiveArr1){\n      (0,_Synthesizer_js__WEBPACK_IMPORTED_MODULE_1__.piano_player)(note, true);\n    }  \n  }\n  if(exclusiveArr2.length > 0){\n    //console.log(\"Ouput \", exclusiveArr2);\n    for( let note of exclusiveArr2){\n      (0,_Synthesizer_js__WEBPACK_IMPORTED_MODULE_1__.piano_player)(note, false);\n    }  \n  }\n}\nfunction stopAllNotePlayer(){ //재생되는 음을 모두 정지하는\n  if(previousNote.length > 0){\n    //console.log(\"Ouput \", exclusiveArr2);\n    for(let note of previousNote){\n      (0,_Synthesizer_js__WEBPACK_IMPORTED_MODULE_1__.piano_player)(note, false);\n    }  \n  }\n  if(previousNote_track.length > 0){\n    //console.log(\"Ouput \", exclusiveArr2);\n    for(let note of previousNote_track){\n      (0,_Synthesizer_js__WEBPACK_IMPORTED_MODULE_1__.piano_player)(note, false);\n    }  \n  }\n  previousNote = []\n  previousNote_track = []\n}\nfunction OctaveToColor(octave){\n  switch(octave){\n    case \"C4\":\n      return 'hsl(0,99%,41%)'\n    case \"C#4\":\n      return 'hsl(24,99%,41%)';\n    case \"D4\":\n      return 'hsl(36,99%,41%)';\n    case \"D#4\":\n      return 'hsl(46,99%,41%)';\n    case \"E4\":\n      return 'hsl(55,99%,41%)';\n    case \"F4\":\n      return 'hsl(129,100%,31%)';\n    case \"F#4\":\n      return 'hsl(179,100%,27%)';\n    case \"G4\":\n      return 'hsl(186,99%,41%)';\n    case \"G#4\":\n      return  '#2E93FF';\n    case \"A4\":\n      return 'hsl(273,99%,40%)';\n    case \"A#4\":\n      return  'hsl(284,100%,34%)';\n    case \"B4\":\n      return 'hsl(329,100%,39%)';\n    //let magenta = 'hsl(346,100%,39%)'\n    case \"C5\":\n      return 'hsl(0,100%,25%)'\n    case \"C#5\":\n      return 'hsl(25,100%,24%)'\n    case \"D5\":\n      return 'hsl(36,100%,24%)'\n    case \"D#5\":\n      return 'hsl(48,100%,24%)'\n    case \"E5\":\n      return  'hsl(57,100%,26%)'\n    case \"F5\":\n      return  'hsl(120,100%,19%)'\n    case \"F#5\":\n      return 'hsl(178,100%,18%)'\n    case \"G5\":\n      return 'hsl(210,100%,22%)'\n    case \"G#5\":\n      return 'hsl(246,100%,22%)'\n    case \"A5\":\n      return 'hsl(275,100%,22%)'\n    case \"A#5\":\n      return  'hsl(308,100%,22%)'\n    case \"B5\":\n      return  'hsl(323,100%,21%)'\n    case \"C6\":\n      return  'hsl(351,100%,21%)'\n    default:\n      return 'hsl(0,100%,0%)'\n  }\n}\n\n/*Cilp Note Object creater*/\nfunction createResizeDragElement(note, leftPosition, noteId, type) { //Melody, Beat 노트 생성\n  const resizeDrag = document.createElement(\"div\");\n  let boxItem = null\n  if(type == _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Melody){\n    resizeDrag.classList.add(\"resize-drag\");  // resize-drag로 생성\n    const Itemid = \"box_\" + note.substr(0, note.length - 1); \n    boxItem = document.getElementById(Itemid);\n    resizeDrag.textContent = note.substr(note.length - 1, note.length);\n    resizeDrag.style.backgroundColor =  OctaveToColor(note)\n  }\n  else{\n    resizeDrag.classList.add(\"draggable\");  // resize-drag로 생성\n    const Itemid = \"box_\" + note;\n    boxItem = document.getElementById(Itemid);\n    resizeDrag.textContent = \"\"\n  }\n  resizeDrag.style.left = leftPosition + \"px\"; // left 스타일 추가\n  resizeDrag.setAttribute(\"note_id\", noteId); // note_id 속성 추가\n  resizeDrag.setAttribute(\"note\", note); // note_id 속성 추가\n  resizeDrag.addEventListener(\"click\", function(){\n    //console.log(\"Note Id:\", resizeDrag.getAttribute(\"note_id\"));\n    noteClickIndex = resizeDrag.getAttribute(\"note_id\");\n  })\n  noteClickIndex = noteId;\n  boxItem.appendChild(resizeDrag);\n  return resizeDrag\n}\n\n// function createExamplteInResizeDragElement(note, leftPosition, noteId, type) { //Melody, Beat 노트 생성\n//   const resizeDrag = document.createElement(\"div\");\n//   let boxItem = null\n//   if(type == MusicClipType.Melody){\n//     resizeDrag.classList.add(\"inresize-drag\");  // resize-drag로 생성\n//     const Itemid = \"box_\" + note.substr(0, note.length - 1); \n//     boxItem = document.getElementById(Itemid);\n//     resizeDrag.textContent = note.substr(note.length - 1, note.length);\n//   }\n//   else{\n//     resizeDrag.classList.add(\"indraggable\");  // resize-drag로 생성\n//     const Itemid = \"box_\" + note;\n//     boxItem = document.getElementById(Itemid);\n//     resizeDrag.textContent = \"\"\n//   }\n//   resizeDrag.style.left = leftPosition + \"px\"; // left 스타일 추가\n//   resizeDrag.setAttribute(\"note_id\", noteId); // note_id 속성 추가\n//   resizeDrag.setAttribute(\"note\", note); // note_id 속성 추가\n//   resizeDrag.addEventListener(\"click\", function(){\n//     //console.log(\"Note Id:\", resizeDrag.getAttribute(\"note_id\"));\n//     noteClickIndex = resizeDrag.getAttribute(\"note_id\");\n//   })\n//   noteClickIndex = noteId;\n//   boxItem.appendChild(resizeDrag);\n//   return resizeDrag\n// }\n\nfunction noteResizeChanger(noteObejct, target_pix){\n  const currentWidth = 10;  //Meldoy 음표의 최소 길이값(css에서 변경시 바꿔야함)\n  const currentleft = parseFloat(noteObejct.style.left);\n  if(currentWidth < target_pix - currentleft){\n    noteObejct.style.width = (target_pix - currentleft) + \"px\";\n  }\n}\nfunction noteSizeAllOff(){ //Note 변화용 array 초기화\n  for (let i = 0; i < onNoteList.length; i++) {\n    melody_clip.setNoteRelease(onNoteList[i].getAttribute(\"note\"), currentTime);\n  }\n  onNoteList = [];\n}\nfunction noteOff(note){//Note 변화 설정 초기화\n  for (let i = 0; i < onNoteList.length; i++) {\n    if (onNoteList[i].getAttribute(\"note\") === note) {\n      onNoteList.splice(i, 1);\n      break;\n    }\n  }\n}\n\n/* Clip Event Code */\ndocument.getElementById(\"trackClipCreateButton\").addEventListener('click', function (){\n  if(current_clip_type == _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Melody){\n    console.log(\"New Melody Clip Create\", Melody_clip_array.length)\n    melody_clip = new _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClip(_Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Melody, Melody_clip_array.length, duration);\n    noteClickIndex = -1;\n    clearNoteClip(_Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Melody);\n    initializeTimer();\n  }\n  else if(current_clip_type == _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Beat){\n    console.log(\"New Beat Clip Create\", Beat_clip_array.length)\n    beat_clip = new _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClip(_Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Beat, Beat_clip_array.length, duration);\n    noteClickIndex = -1;\n    clearNoteClip(_Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Beat);\n    initializeTimer();\n  }\n  else if(current_clip_type == _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Template){\n    console.log(\"New Template Clip Create\", Template_clip_array.length)\n    template_clip = new _Share_js__WEBPACK_IMPORTED_MODULE_0__.TemplateClip(Template_clip_array.length);\n    templateConnectToVisualAndSound(template_clip);\n    console.log(Template_clip_array)\n  }\n\n})\n// document.getElementById(\"sheetMusicBeatButton\").addEventListener('click', function (){\n//   current_clip_type = MusicClipType.Beat;\n//   document.getElementById(\"BeatContainer\").style.display = 'block'\n//   document.getElementById(\"MelodyContainer\").style.display = 'none'\n//   if(beat_clip.getClipId() != Beat_clip_array.length){\n//     console.log(\"New Beat Clip Create\", beat_clip.getClipId(), Beat_clip_array.length)\n//     beat_clip = new MusicClip(MusicClipType.Beat, Beat_clip_array.length, duration);\n//     noteClickIndex = -1;\n//     clearNoteClip(MusicClipType.Beat);\n//     initializeTimer();\n//   }\n// })\ndocument.getElementById(\"sheetMusicTemplateButton\").addEventListener('click', function (){\n  if(template_clip.get_Clip_id() != Template_clip_array.length){\n    console.log(\"New Template Clip Create\", template_clip.get_Clip_id(), Template_clip_array.length)\n    template_clip = new _Share_js__WEBPACK_IMPORTED_MODULE_0__.TemplateClip(Template_clip_array.length);\n    templateConnectToVisualAndSound(template_clip);\n    console.log(Template_clip_array)\n  }\n})\n// document.getElementById(\"sheetTemplateSaveButton\").addEventListener('click', function (){\n//   if(template_clip.get_Clip_id() == Template_clip_array.length){\n//     createTemplateClipBox(template_clip);\n//     Template_clip_array.push(template_clip);\n//     template_clip = new TemplateClip(Template_clip_array.length);\n//     templateConnectToVisualAndSound(template_clip);\n//     console.log(Template_clip_array)\n//     alert(\"Template Clip saved\")\n//   }\n//   else{\n//     Template_clip_array[template_clip.get_Clip_id()] = template_clip;\n//     alert(\"Template Clip resaved\")\n//   }\n// })\n\n// document.getElementById(\"sheetMusicSaveButton\").addEventListener('click', function (){\n//   if(play_state){\n//     // player1.pauseVideo();\n//     // player2.pauseVideo();\n//     stopRecording();\n//     stopAllNotePlayer();\n//     play_state = false;\n//   }\n//   if(current_clip_type == MusicClipType.Melody){     // Melody Save \n//     if(Melody_clip_array.length == 0){\n//       createClipBox(melody_clip);\n//       //Melody_clip_array.push(melody_clip);\n//       createTemplateClipBox(template_clip);\n//       Template_clip_array.push(template_clip);\n//       alert(\"멜로디 클립 저장\")\n//       initializeTimer();\n//     }\n//     else{\n//       //Template_clip_array[template_clip.get_Clip_id()] = template_clip;\n//       //Melody_clip_array[melody_clip.getClipId()] = melody_clip;\n//       alert(\"멜로디 클립 다시 저장\")\n//     }\n//   }\n//   else if(current_clip_type == MusicClipType.Beat){      \n//     if(Beat_clip_array.length==0){                                   // Beat Save\n//       createClipBox(beat_clip);\n//       Beat_clip_array.push(beat_clip);\n//       alert(\"비트 클립 저장\")\n//       initializeTimer();\n//     }\n//     else{\n//       Beat_clip_array[beat_clip.getClipId()] = beat_clip;\n//       alert(\"비트 클립 다시 저장\")\n//     }\n//   }\n//   else{\n//     if(Template_clip_array.length==0){ \n//       createTemplateClipBox(template_clip);\n//       Template_clip_array.push(template_clip);\n//       alert(\"Template Clip saved\");\n//       initializeTimer();\n//     }\n//     else{\n//       Template_clip_array[template_clip.get_Clip_id()] = template_clip;\n//       alert(\"Template Clip resaved\")\n//     }\n//   }\n//   document.getElementById(\"trackMusicSaveButton\").click()\n// })\ndocument.getElementById(\"sheetMusicSaveButton\").addEventListener('click', function (){\n  if(current_clip_type == _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Melody){     // Melody Save \n    if(melody_clip.getClipId() == Melody_clip_array.length){\n      createClipBox(melody_clip);\n      Melody_clip_array.push(melody_clip);\n      melody_clip = new _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClip(_Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Melody, Melody_clip_array.length, duration);\n      alert(\"Melody Clip saved\")\n      clearNoteClip(_Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Melody);\n      initializeTimer();\n    }\n    else{\n      Melody_clip_array[melody_clip.getClipId()] = melody_clip;\n      alert(\"Melody Clip resaved\")\n    }\n  }\n  else if(current_clip_type == _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Beat){      \n    if(beat_clip.getClipId() == Beat_clip_array.length){                                   // Beat Save\n      createClipBox(beat_clip);\n      Beat_clip_array.push(beat_clip);\n      beat_clip = new _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClip(_Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Beat, Beat_clip_array.length, duration);\n      alert(\"Beat Clip saved\")\n      clearNoteClip(_Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Beat);\n      initializeTimer();\n    }\n    else{\n      Beat_clip_array[beat_clip.getClipId()] = beat_clip;\n      alert(\"Beat Clip resaved\")\n    }\n  }\n  else{\n    if(template_clip.get_Clip_id() == Template_clip_array.length){\n      createTemplateClipBox(template_clip);\n      Template_clip_array.push(template_clip);\n      template_clip = new _Share_js__WEBPACK_IMPORTED_MODULE_0__.TemplateClip(Template_clip_array.length);\n      templateConnectToVisualAndSound(template_clip);\n      console.log(Template_clip_array)\n      alert(\"Template Clip saved\")\n    }\n    else{\n      Template_clip_array[template_clip.get_Clip_id()] = template_clip;\n      alert(\"Template Clip resaved\")\n    }\n  }\n})\n\n\n\n\ndocument.getElementById(\"sheetMusicRecordButton\").addEventListener(\"click\", function(){\n  saveModeCheck = true;\n  // if(practiceMode){\n  //   player1.playVideo();\n  // }\n  // else{\n  //   player2.playVideo();\n  // }\n})\n\n\ndocument.getElementById(\"sheetMusicPlayButton\").addEventListener('click', function (){\n  startRecording();\n  // if(practiceMode){\n  //   player1.playVideo();\n  // }\n  // else{\n  //   player2.playVideo();\n  // }\n})\ndocument.getElementById(\"sheetMusicPauseButton\").addEventListener('click', function (){\n  stopRecording();\n  stopAllNotePlayer();\n  // if(practiceMode){\n  //   player1.pauseVideo();\n  // }\n  // else{\n  //   player2.pauseVideo();\n  // }\n\n  stopAllNotePlayer();\n})\ndocument.getElementById(\"sheetMusicDeleteButton\").addEventListener('click', function (){\n  if(noteClickIndex!=1){\n    if(current_clip_type == _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Melody){\n      melody_clip.deleteNote(noteClickIndex);\n      clearNoteClip(_Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Melody);\n      loadClip(melody_clip, melody_clip.getDuration())\n    }\n    else if(current_clip_type == _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Beat){\n      beat_clip.deleteNote(noteClickIndex);\n      clearNoteClip(_Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Beat);\n      loadClip(beat_clip, beat_clip.getDuration())\n    }\n  }\n})\ndocument.getElementById(\"sheetMusicAllDeleteButton\").addEventListener('click', function (){\n    if(current_clip_type == _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Melody){\n      melody_clip = new _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClip(_Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Melody, 0, duration);\n      clearNoteClip(_Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Melody);\n    }\n    else if(current_clip_type == _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Beat){\n      beat_clip = new _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClip(_Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Beat, 0, duration);\n      clearNoteClip(_Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Beat);\n    }\n})\n\n\n\n\n\n// document.getElementById(\"sheetMusicLyricsButton\").addEventListener('click', function (){\n//   let Lyrics = document.getElementById(\"sheetMusiclyricsInput\").value\n//   if(current_clip_type == MusicClipType.Melody){\n//     melody_clip.setLyrics(noteClickIndex,Lyrics)\n//     const elements = document.getElementsByClassName(\"resize-drag\");\n//     for (const element of elements) {\n//       if (element.getAttribute('note_id') === noteClickIndex) {\n//           element.textContent = Lyrics;e\n//       }current_clip_type\n//     }\n//   }\n// })\n\n\n/* Synthesizer Event Code */\n_Share_js__WEBPACK_IMPORTED_MODULE_0__.SyntheysizerEvents.addEventListener('pianoKeyInput', function (e){\n  doubleChecker += 1\n  if(doubleChecker%2 ==0){\n    if(play_state && current_clip_type == _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Melody){\n      melody_clip.setNoteInput(e.detail.note, currentTime);\n        //console.log(\"noteInpu Check\", e.detail.note)\n      let NoteItem = createResizeDragElement(e.detail.note, time_to_px(currentTime, duration), melody_clip.getNoteIndex(), _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Melody);\n      onNoteList.push(NoteItem); \n    }\n  }\n})\n_Share_js__WEBPACK_IMPORTED_MODULE_0__.SyntheysizerEvents.addEventListener('pianoKeyOutput', function (e){\n  doubleChecker += 1\n  if(doubleChecker%2 ==0){\n    if(play_state && current_clip_type == _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Melody){\n      melody_clip.setNoteRelease(e.detail.note, currentTime);\n      noteOff(e.detail.note)\n    }\n  }\n})\n_Share_js__WEBPACK_IMPORTED_MODULE_0__.SyntheysizerEvents.addEventListener('padkeyInput', function (e){\n  doubleChecker += 1\n  if(doubleChecker%2 ==0){\n    if(play_state && current_clip_type == _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Beat){\n      beat_clip.setBeatInput(e.detail.id, currentTime);\n      console.log(\"Pad Input\")\n      let PadItem = createResizeDragElement(e.detail.id, time_to_px(currentTime, duration), beat_clip.getNoteIndex(), _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Beat);\n    }\n  }\n})\n_Share_js__WEBPACK_IMPORTED_MODULE_0__.SyntheysizerEvents.addEventListener('dialInput', function(e){\n  doubleChecker += 1\n  if(doubleChecker%2 ==0){\n    template_clip.set_dial(e.detail.value);\n    document.getElementById(\"dial_1\").value = e.detail.value[0][0]\n    document.getElementById(\"dial_2\").value = e.detail.value[0][1]\n    document.getElementById(\"dial_3\").value = e.detail.value[0][2]\n    document.getElementById(\"dial_4\").value = e.detail.value[0][3]\n  }\n})\n\n/*Clip Edit code*/\nclipduration.addEventListener(\"change\", function(){ //Clip duration change code\n  changeClipDuration(parseFloat(clipduration.value));\n})\nfunction changeClipDuration(inputDuration){\n  duration = inputDuration\n  console.log(\"Clip duration Set : \", duration);\n  noteSizeAllOff();\n  clearNoteClip(current_clip_type);\n  if(time_to_px(currentTime, duration) >= clip_box_width){\n    $(\"#slider\").slider(\"value\", clip_box_width);\n    timeLine2.style.left = (clip_box_width-clip_start_px) + \"px\";\n    timeLine1.style.left = (clip_box_width-clip_start_px) + \"px\";\n  }\n  else{\n    $(\"#slider\").slider(\"value\",time_to_px(currentTime, duration));\n    timeLine2.style.left = (time_to_px(currentTime, duration)-clip_start_px) + \"px\";\n    timeLine1.style.left = (time_to_px(currentTime, duration)-clip_start_px) + \"px\";\n  }\n  if(current_clip_type == _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Melody){\n    melody_clip.setDuration(duration);\n    template_clip.set_duration(duration);\n    loadClip(melody_clip, duration);\n  }\n  else if(current_clip_type == _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Beat){\n    beat_clip.setDuration(duration);\n    loadClip(beat_clip, duration);\n  }\n}\nfunction removeAllElementsByClassName(className) {//\n  const elements = document.getElementsByClassName(className);\n  while (elements.length > 0) {\n    elements[0].parentNode.removeChild(elements[0]);\n  }\n}\nfunction clearNoteClip(type){// 편집기에 모든 노트 제거\n  if(type == _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Melody){\n    removeAllElementsByClassName(\"resize-drag\");\n    removeAllElementsByClassName(\"resize-lyrics\");\n  }\n  else{\n    removeAllElementsByClassName(\"draggable\");\n  }\n}\nfunction clearExampleClip(type){\n  if(type == _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Melody){\n    removeAllElementsByClassName(\"inresize-drag\");\n  }\n  else{\n    removeAllElementsByClassName(\"indraggable\");\n  }\n}\n\n\nfunction loadClip(MusicClip, duration){ // 입력 클립을 편집기에 반영\n  if(MusicClip.getClipType() == _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Melody){\n    const [NoteSet, TimeSet] = MusicClip.getMusicClip();\n    //const lyricsList = MusicClip.getLyrics();\n    for(let i=0; i<NoteSet.length; i++){\n      //console.log(NoteSet[i], time_to_px(TimeSet[i][0], duration), i, MusicClipType.Melody)\n      let NoteItem = createResizeDragElement(NoteSet[i], time_to_px(TimeSet[i][0], duration), i, _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Melody);\n      noteResizeChanger(NoteItem, time_to_px(TimeSet[i][1], duration));\n    }\n    const[LyricsSet, LyricsTimeSet] = MusicClip.getAllLyrics();\n    for(let i=0; i<LyricsSet.length; i++){\n      createLyricsbject(i, LyricsSet[i], LyricsTimeSet[i][0],LyricsTimeSet[i][1])\n    }\n\n\n  }\n  else{\n    const [padSet, TimeSet] = MusicClip.getMusicClip()\n    for(let i=0; i<padSet.length; i++){\n      //console.log(padSet[i], time_to_px(TimeSet[i][0], duration), i, MusicClipType.Beat)\n      let NoteItem = createResizeDragElement(padSet[i], time_to_px(TimeSet[i], duration), i, _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Beat);\n    }\n  }\n  noteClickIndex = -1;\n}\n\nfunction changeMusicClip(noteIndex, deltaTimeset){ // 노트 위치, 크기 편집을 클립 시간에 반영\n  if(current_clip_type == _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Melody){\n    melody_clip.editNote(noteIndex, deltaTimeset)\n  }\n  else if(current_clip_type == _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Beat){\n    beat_clip.editNote(noteIndex, deltaTimeset)\n  }\n}\nfunction changelyricsClip(noteIndex, deltaTimeset){ // 노트 위치, 크기 편집을 클립 시간에 반영\n  if(current_clip_type == _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Melody){\n    melody_clip.editLyrics(noteIndex, deltaTimeset);\n  }\n}\n\n//-------------------------------------------------------------------------------------------------------------------//\n//-------------------------------------------------------------------------------------------------------------------//\n//------------------------------------------- Track Code------------------------------------------------------//\n//-------------------------------------------------------------------------------------------------------------------//\n//-------------------------------------------------------------------------------------------------------------------//\n\n//Track Clip Icon Maker\nfunction createClipBox(musicClip) { //Melody, Beat 노트 생성\n  let currenctCliptType = musicClip.getClipType();\n  let clip_id = musicClip.getClipId();\n  const dragdrop = document.createElement(\"div\");\n  dragdrop.classList.add(\"drag-drop\");  // resize-drag로 생성\n  dragdrop.setAttribute(\"clip_id\", clip_id); // clip_id 속성 추가\n  dragdrop.setAttribute(\"clip_type\", currenctCliptType); // clip_type 속성 추가\n  dragdrop.addEventListener(\"click\", function(){\n    console.log(\"current Clip Type:\", dragdrop.getAttribute(\"clip_type\"),\"current Clip id\", dragdrop.getAttribute(\"clip_id\"))\n    loadFromTrackToMusicClip(dragdrop.getAttribute(\"clip_type\"), dragdrop.getAttribute(\"clip_id\"));\n  })\n  if(currenctCliptType == _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Melody){\n    dragdrop.textContent = \"Melody \" + clip_id; //내용이 있어야 나와서 -로 일단 임시로 추가\n    dragdrop.setAttribute(\"id\", \"melody-drop\");\n    let boxItem = document.getElementById(\"MelodydropContainer\");\n    boxItem.appendChild(dragdrop);\n  }\n  else{\n    dragdrop.textContent = \"Beat \" + clip_id; //내용이 있어야 나와서 -로 일단 임시로 추가\n    dragdrop.setAttribute(\"id\", \"beat-drop\");\n    let boxItem = document.getElementById(\"BeatdropContainer\");\n    boxItem.appendChild(dragdrop);\n  }\n}\nfunction createTemplateClipBox(template_clip){\n  let clip_id = template_clip.get_Clip_id()\n  const dragdrop_template = document.createElement(\"div\");\n  dragdrop_template.classList.add(\"drag-drop\");  // resize-drag로 생성\n  dragdrop_template.setAttribute(\"clip_id\", clip_id); // clip_id 속성 추가\n  dragdrop_template.setAttribute(\"clip_type\", _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Template); // clip_type 속성 추가\n  dragdrop_template.addEventListener(\"click\", function(){\n    //console.log(\"current Clip Type:\", dragdrop_template.getAttribute(\"clip_type\"),\"current Clip id\", dragdrop_template.getAttribute(\"clip_id\"))\n    loadFromTrackToTemplateClip(dragdrop_template.getAttribute(\"clip_id\"));\n  })\n    dragdrop_template.textContent = \"Effect \" + clip_id; //내용이 있어야 나와서 -로 일단 임시로 추가\n    dragdrop_template.setAttribute(\"id\", \"template-drop\");\n    let boxItem_template = document.getElementById(\"TemplatedropContainer\");\n    boxItem_template.appendChild(dragdrop_template);\n  }\n\n\n//Track Clip Object 생성용 코드(melody, Beat용)\nfunction createTrackClipObject(dropzoneName, clipType, clip_id, duration, box_id){\n  //let clipType = musicClip.getClipType();\n  //let clip_id = musicClip.getClipId();\n  //let duration = musicClip.getDuration();\n  //console.log(\"duration Check\", duration);\n  const trackClip = document.createElement(\"div\");\n  trackClip.classList.add(\"draggable_clip\");\n  trackClip.style.width = time_to_px(duration, duration_track, track_box_width, 0) + \"px\"\n\n  if(clipType == _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Melody){\n    trackClip.textContent = \"Melody_\" + clip_id; //내용이 있어야 나와서 -로 일단 임시로 추가\n    //dragdrop.setAttribute(\"id\", \"melody-drop\");\n  }\n  else{\n    trackClip.textContent = \"Beat_\" + clip_id; //내용이 있어야 나와서 -로 일단 임시로 추가\n    //dragdrop.setAttribute(\"id\", \"beat-drop\");\n  }\n  let boxItem = document.getElementById(dropzoneName);\n  trackClip.setAttribute(\"box_id\", box_id); // clip_id 속성 추가\n  trackClip.setAttribute(\"box_type\", clipType); // clip_type 속성 추가\n  trackClip.addEventListener(\"click\", function(){\n    console.log(\"type:\", trackClip.getAttribute(\"box_type\"), \"id\", trackClip.getAttribute(\"box_id\"));\n    trackClickIndex = trackClip.getAttribute(\"box_id\");\n    trackClickType = trackClip.getAttribute(\"box_type\");\n  })\n  boxItem.appendChild(trackClip);\n  return px_to_time_Scale(trackClip.offsetLeft, duration_track, track_box_width, 0)\n}\n\n//Track Clip Object 생성용 코드(Template용)\nfunction createTrackClipObject_template(dropzoneName, clip_id, box_id){\n  const trackClip = document.createElement(\"div\");\n  trackClip.classList.add(\"resize-drag_clip\");\n  trackClip.style.width = time_to_px(30, duration_track, track_box_width, 0) + \"px\"\n  let boxItem = document.getElementById(dropzoneName);\n  trackClip.textContent = \"Effect_\" + clip_id\n  trackClip.setAttribute(\"box_id\", box_id); // clip_id 속성 추가\n  trackClip.setAttribute(\"box_type\", _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Template); // clip_type 속성 추가\n  trackClip.addEventListener(\"click\", function(){\n    console.log(\"type:\", trackClip.getAttribute(\"box_type\"), \"id\", trackClip.getAttribute(\"box_id\"));\n    trackClickIndex = trackClip.getAttribute(\"box_id\");\n    trackClickType = trackClip.getAttribute(\"box_type\");\n  })\n  boxItem.appendChild(trackClip);\n  return px_to_time_Scale(trackClip.offsetLeft, duration_track, track_box_width, 0)\n}\n\n//clip 정보를 가져오는 코드\nfunction get_clip(clipType, clip_id){\n  if(clipType == _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Melody){\n    return Melody_clip_array[clip_id]\n    //dragdrop.setAttribute(\"id\", \"melody-drop\");\n  }\n  else{\n    return Beat_clip_array[clip_id]\n    //dragdrop.setAttribute(\"id\", \"beat-drop\");\n  }\n}\n\n$(\"#slider_track\").slider({ //Timer 슬라이더2\n  value: 0,\n  min: 0,\n  max: track_box_width,\n  step: 0.1,\n  slide: function( event, ui ) {\n    timeLine3.style.left = (ui.value) + \"px\";\n    currentTrackTime = px_to_time(ui.value, duration_track, track_box_width, 0)\n    //console.log(\"Track Time\", currentTrackTime)\n  }\n});\n\nfunction updateTime2() { //시간에 따라 업데이트 해야하는 함수들\n  currentTrackTime += 1/fps\n  //musicPlayer(currentTime);\n  $(\"#slider_track\").slider(\"value\",time_to_px(currentTrackTime, duration_track, track_box_width, 0));\n  timeLine3.style.left = time_to_px(currentTrackTime, duration_track, track_box_width, 0) + \"px\";\n  //console.log(\"Test Track\", cur_track_set[0][1]);\n  let cur_track_set = TrackObject.getcurrentClipSet(currentTrackTime);\n  //console.log(cur_track_set)\n  if(cur_track_set[0].length > 0){\n    //console.log(Template_clip_array);\n    templatePlayerClip(Template_clip_array[cur_track_set[0][1]]);\n    console.log(\"Test1\");\n  }\n  if(cur_track_set[1].length > 0){\n    musicPlayerMelodyClip(currentTrackTime - cur_track_set[1][0], Melody_clip_array[cur_track_set[1][1]]);\n    console.log(\"Test2\");\n  }\n  if(cur_track_set[2].length > 0){\n    musicPlayerBeatClip(currentTrackTime - cur_track_set[2][0], Beat_clip_array[cur_track_set[2][1]]);\n    console.log(\"Test3\");\n  }\n  if(currentTrackTime >= duration_track){\n    stopTrack() // 끝 도달하면 자동으로 종료\n  }\n  // if(Template_clip_array.length > 0){\n  //   //console.log(Template_clip_array);\n  //   templatePlayerClip(Template_clip_array[0]);\n  // }\n  // if(Melody_clip_array.length > 0){\n  //   musicPlayerMelodyClip(currentTrackTime, Melody_clip_array[0]);\n  // }\n  // if(Beat_clip_array.length > 0){\n  //   musicPlayerBeatClip(currentTrackTime, Beat_clip_array[0]);\n  // }\n}\nfunction initializeTimer2(){ // Timer 초기화\n  $(\"#slider_track\").slider(\"value\",time_to_px(currentTrackTime, duration_track, track_box_width, 0));\n  timeLine3.style.left = time_to_px(currentTrackTime, duration_track, track_box_width, 0) + \"px\";\n}\nfunction musicPlayerMelodyClip(currentTime, melody_clip){  //음이나 비트 소리를 재생하는 코드\n  let currentNote = melody_clip.getcurrentNoteSet(currentTime);\n  notePlayer(currentNote, previousNote_track);\n  previousNote_track = melody_clip.getcurrentNoteSet(currentTime);\n  console.log(\"Lyrics Time\", currentTime);\n  document.getElementById(\"lyricsDisplay\").innerHTML = melody_clip.getLyrics(currentTime);\n}\nfunction musicPlayerBeatClip(currentTime, beat_clip){  //음이나 비트 소리를 재생하는 코드\n  let currentBeat = beat_clip.getcurrentNoteSet(currentTime);\n  for (let beat of currentBeat){\n    (0,_Synthesizer_js__WEBPACK_IMPORTED_MODULE_1__.beat_player)(beat);\n    setTimeout(() => (0,_Synthesizer_js__WEBPACK_IMPORTED_MODULE_1__.beat_output_play)(beat), 100);\n  }\n}\nfunction templatePlayerClip(inputClip){\n  if(inputClip.get_Clip_id() != previousDial_ID){\n    //console.log(\"id\", inputClip.get_Clip_id())\n    template_clip = inputClip\n    templateConnectToVisualAndSound(inputClip);\n     previousDial_ID = inputClip.get_Clip_id();\n  }\n}\nfunction templateConnectToVisualAndSound(inputClip){\n  const event = new CustomEvent('templateLoad', { detail: inputClip.get_dial() });\n  _Share_js__WEBPACK_IMPORTED_MODULE_0__.SyntheysizerEvents.dispatchEvent(event);\n}\nfunction clearAllBoxClip(){// 편집기에 모든 노트 제거\n  InitializeAllTrack();\n  removeAllElementsByClassName(\"drag-drop\");\n}\nfunction InitializeAllTrack(){\n  removeAllElementsByClassName(\"resize-drag_clip\");\n  removeAllElementsByClassName(\"draggable_clip\");\n}\ndocument.getElementById(\"trackMusicPlayButton\").addEventListener('click', function (){\n  startTrack();\n})\ndocument.getElementById(\"trackMusicPauseButton\").addEventListener('click', function (){\n  stopTrack();\n  stopAllNotePlayer2();\n})\ndocument.getElementById(\"trackMusicDeleteButton\").addEventListener('click', function (){\n  TrackObject.deleteClip(trackClickType, trackClickIndex);\n  InitializeAllTrack();\n  loadTrack(TrackObject);\n})\nfunction loadTrack(MusicTrack){ // Track을 편집기에 반영\n  const [TemplateId, TemplateTimeset] = MusicTrack.getTemplateSet()\n  const [MelodyClipId, MelodyTimeset] = MusicTrack.getMelodySet()\n  const [BeatClipId, BeatTimeset] = MusicTrack.getBeatSet()\n  for(let i=0; i<TemplateId.length; i++){\n    createTrackClipObject_template('template-dropzone', TemplateId[i], i);\n  }\n  for(let i=0; i<MelodyClipId.length; i++){\n    createTrackClipObject(\"melody-dropzone\", _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Melody, MelodyClipId[i], MelodyTimeset[i][1]-MelodyTimeset[i][0], i)\n  }\n  for(let i=0; i<BeatClipId.length; i++){\n    createTrackClipObject(\"beat-dropzone\", _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Beat, BeatClipId[i], BeatTimeset[i][1]-BeatTimeset[i][0], i)\n  }\n}\n\nfunction stopAllNotePlayer2(){\n  if(previousNote_track.length > 0){\n    //console.log(\"Ouput \", exclusiveArr2);\n    for( let note of previousNote_track){\n      (0,_Synthesizer_js__WEBPACK_IMPORTED_MODULE_1__.piano_player)(note, false);\n    }  \n  }\n  previousNote_track - [];\n}\nfunction loadFromTrackToMusicClip(clip_type, clip_id){\n  if(clip_type == _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Melody){\n    current_clip_type = _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Melody;\n    document.getElementById(\"BeatContainer\").style.display = 'none';\n    document.getElementById(\"MelodyContainer\").style.display = 'block';\n    document.getElementById(\"TemplateContainer\").style.display = 'none';\n    clearNoteClip(_Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Melody);\n    initializeTimer();\n    melody_clip = Melody_clip_array[clip_id];\n    loadClip(melody_clip, melody_clip.getDuration());\n  }\n  else{\n    current_clip_type = _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Beat;\n    document.getElementById(\"BeatContainer\").style.display = 'block';\n    document.getElementById(\"MelodyContainer\").style.display = 'none';\n    document.getElementById(\"TemplateContainer\").style.display = 'none';\n    clearNoteClip(_Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Beat);\n    initializeTimer();\n    beat_clip = Beat_clip_array[clip_id];\n    loadClip(beat_clip, beat_clip.getDuration());\n  }\n}\nfunction loadFromTrackToTemplateClip(clip_id){\n  template_clip = Template_clip_array[clip_id];\n  document.getElementById(\"BeatContainer\").style.display = 'none';\n  document.getElementById(\"MelodyContainer\").style.display = 'none';\n  document.getElementById(\"TemplateContainer\").style.display = 'block';\n  templateConnectToVisualAndSound(template_clip);\n}\n\n//-------------------------------------------------------------------------------------------------------------------//\n//-------------------------------------------------------------------------------------------------------------------//\n//-------------------------------------------- File Save and upLoad code -------------------------------------------//\n//-------------------------------------------------------------------------------------------------------------------//\n//-------------------------------------------------------------------------------------------------------------------//\n\nfunction downloadJsonFile(filename, data) { // 객체를 JSON 파일로 다운로드하는 함수\n  const jsonData = JSON.stringify(data);\n  const blob = new Blob([jsonData], { type: 'application/json' });\n  const url = URL.createObjectURL(blob);\n\n  const link = document.createElement('a');\n  link.download = filename;\n  link.href = url;\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n  URL.revokeObjectURL(url);\n}\n//Track이랑 Clip을 따로 파일로 저장하는 함수, Track은 Clip의 위치값만 있기 때문에 한 번에 가져와야함\nconst tmp_Meldoy_array = []\nconst tmp_Beat_array = []\nconst tmp_template_array = []\n\n\ndocument.getElementById(\"trackMusicSaveButton\").addEventListener('click', function(){\n  generateMidi()\n\n\n\n\n\n\n\n\n//   let MusicTrackObejct = {\n//     \"Type\":\"MusicTrack\",\n//     \"user_Id\": TrackObject.getUserId(),\n//     \"id_set\" : TrackObject.getIdData(),\n//     \"time_set\" : TrackObject.getTimeData()\n//   }\n//   //downloadJsonFile(\"MusicTrack_\" + TrackObject.getUserId(), MusicTrackObejct);  //Track 정보 저장\n//   if(current_clip_type == MusicClipType.Template){\n//     for(let i = 0; i < Template_clip_array.length; i ++){\n//       let templateObejct = {\n//         \"userName\":userName,\n//         \"musicName\":musicId,\n//         \"Type\": MusicClipType.Template,\n//         \"CLip id\": Template_clip_array[i].get_Clip_id(),\n//         \"duration\": Template_clip_array[i].get_duration(),\n//         \"instrument\": Template_clip_array[i].get_instrument(),\n//         \"dial_set\": Template_clip_array[i].get_dial()\n//       }\n//       downloadJsonFile(\"template_clip_\" + userName + \"_\" + musicId, templateObejct); \n//     }\n//   }\n//   if(current_clip_type == MusicClipType.Melody){\n//     for(let i = 0; i < Melody_clip_array.length; i ++){\n//       let MusicObejct = {\n//         \"userName\":userName,\n//         \"musicName\":musicId,\n//         \"Type\": Melody_clip_array[i].getClipType(),\n//         \"CLip id\": Melody_clip_array[i].getClipId(),\n//         \"duration\": Melody_clip_array[i].getDuration(),\n//         \"noteSet\": Melody_clip_array[i].getMusicClip()[0],\n//         \"timeSet\": Melody_clip_array[i].getMusicClip()[1],\n//       }\n//       downloadJsonFile(\"Melody_clip_\" + userName + \"_\" + musicId, MusicObejct); \n//     }\n//   }\n//   if(current_clip_type == MusicClipType.Beat){\n//     for(let i = 0; i < Beat_clip_array.length; i ++){\n//       let MusicObejct = {\n//         \"userName\":userName,\n//         \"musicName\":musicId,\n//         \"Type\": Beat_clip_array[i].getClipType(),\n//         \"CLip id\": Beat_clip_array[i].getClipId(),\n//         \"duration\": Beat_clip_array[i].getDuration(),\n//         \"noteSet\": Beat_clip_array[i].getMusicClip()[0],\n//         \"timeSet\": Beat_clip_array[i].getMusicClip()[1]\n//       }\n//       downloadJsonFile(\"Beat_clip_\" + userName + \"_\" + musicId, MusicObejct); \n//     }\n//   }\n})\ndocument.getElementById(\"trackMusicLoadButton\").addEventListener('click', function (){\n  InitializeAllSetting();\n  tmp_Meldoy_array.length = 0;\n  tmp_Beat_array.length = 0;\n  tmp_template_array.length = 0;\n  FileInput.click();\n})\nFileInput.addEventListener('change', function(e){\n  const Files = e.target.files;\n  for(let file of Files){\n    const reader = new FileReader();\n    reader.onload = function(event) {\n      const contents = event.target.result;\n      const jsonObject = JSON.parse(contents);\n      if(jsonObject[\"Type\"]==_Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Melody){\n        let Tmp_melody_clip = new _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClip(jsonObject[\"Type\"], jsonObject[\"CLip_id\"], jsonObject[\"duration\"], jsonObject[\"noteSet\"], jsonObject[\"TimeSet\"])\n        console.log(\"Melody push\", Tmp_melody_clip);\n        tmp_Meldoy_array.push(Tmp_melody_clip)\n      }\n      if(jsonObject[\"Type\"]==_Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Beat){\n        let Tmp_beat_clip = new _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClip(jsonObject[\"Type\"], jsonObject[\"CLip_id\"], jsonObject[\"duration\"], jsonObject[\"noteSet\"], jsonObject[\"TimeSet\"]);\n        console.log(\"Beat push\", Tmp_beat_clip);\n        tmp_Beat_array.push(Tmp_beat_clip);\n      }\n      if(jsonObject[\"Type\"]==_Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicClipType.Template){\n        let Tmp_template_clip = new _Share_js__WEBPACK_IMPORTED_MODULE_0__.TemplateClip(jsonObject[\"CLip_id\"], jsonObject[\"duration\"], jsonObject[\"instrument\"]);\n        Tmp_template_clip.set_dial(jsonObject[\"dial_set\"]);\n        console.log(\"Template push\", Tmp_template_clip);\n        tmp_template_array.push(Tmp_template_clip);\n      }\n      if(jsonObject[\"Type\"]==\"MusicTrack\"){\n        TrackObject = new _Share_js__WEBPACK_IMPORTED_MODULE_0__.MusicTrack(jsonObject[\"user_Id\"], jsonObject[\"id_set\"], jsonObject[\"time_set\"]);\n        console.log(\"TrackObject : \", TrackObject);\n      }\n    };\n    reader.readAsText(file);\n  }\n  // for(let i = 0; i<tmp_Meldoy_array.length; i++){\n  //   console.log(\"loop check\")\n  //   for(let melodyclip of tmp_Meldoy_array){\n  //     if(melodyclip.getClipId()==i){\n  //       Melody_clip_array.push(melodyclip);\n  //       console.log('create clip', melodyclip)\n  //       createClipBox(melodyclip);\n  //     }\n  //   }\n  // }\n  // for(let i = 0; i<tmp_Beat_array.length; i++){\n  //   for(let beatclip of tmp_Beat_array){\n  //     if(beatclip.getClipId()==i){\n  //       Beat_clip_array.push(beatclip);\n  //       console.log('create clip', beatclip)\n  //       createClipBox(beatclip);\n  //     }\n  //   }\n  // }\n  // for(let i = 0; i<tmp_template_array.length; i++){\n  //   for(let templateCLip of tmp_template_array){\n  //     if(templateCLip.get_Clip_id()==i){\n  //       Template_clip_array.push(templateCLip);\n  //       console.log('create clip', templateCLip)\n  //       createTemplateClipBox(templateCLip);\n  //     }\n  //   }\n  // }\n})\n\n//-------------------------------------------------------------------------------------------------------------------//\n//-------------------------------------------------------------------------------------------------------------------//\n//---------------------------------------------가사 관련 추가 코드---------------------------------------------------//\n//-------------------------------------------------------------------------------------------------------------------//\n//-------------------------------------------------------------------------------------------------------------------//\n\n\n\n\ndocument.getElementById(\"LyricsPushButton\").addEventListener(\"click\", function(){\n  let lyricsText = document.getElementById(\"lyricsInputer\").value;\n  createLyricsbject(lyricsId, lyricsText);\n  melody_clip.setLyrics(lyricsText,[melody_clip.getLyricsLastTime(), melody_clip.getLyricsLastTime() + lyricsDefaultTime])\n  lyricsId += 1;\n  document.getElementById(\"lyricsInputer\").value = \"\"\n})\nfunction createLyricsbject(note_id, lyricsText, startTime = null, endTime = null){\n  const boxItem = document.getElementById(\"LyricsBox1\");\n  const lyricsNote = document.createElement(\"div\");\n  lyricsNote.classList.add(\"resize-lyrics\");\n  console.log(time_to_px(melody_clip.getLyricsLastTime(), duration))\n  if(startTime == null){\n    lyricsNote.style.left = time_to_px(melody_clip.getLyricsLastTime(), duration) + \"px\";\n  }\n  else{\n    lyricsNote.style.left = time_to_px(startTime, duration) + \"px\";\n  }\n  if(endTime == null && startTime == null){\n    lyricsNote.style.width = time_to_px_Scale(lyricsDefaultTime, duration) + \"px\";\n  }\n  else{\n    lyricsNote.style.width = time_to_px_Scale(endTime - startTime, duration) + \"px\";\n  }\n  lyricsNote.textContent = lyricsText\n  lyricsNote.setAttribute(\"note_id\", note_id); // clip_id 속성 추가\n  lyricsNote.addEventListener(\"click\", function(){\n    console.log(\"id\", lyricsNote.getAttribute(\"note_id\"));\n  })\n  boxItem.appendChild(lyricsNote);\n}\ninteract('.resize-lyrics')\n  .resizable({\n    edges: { top: false, left: true, bottom: false, right: true },\n    listeners: {\n      move: function (event) {\n        let { x, y } = event.target.dataset\n        x = (parseFloat(x) || 0) + event.deltaRect.left\n        y = (parseFloat(y) || 0) + event.deltaRect.top\n        Object.assign(event.target.style, {\n          width: `${event.rect.width}px`,\n          height: `${event.rect.height}px`,\n          transform: `translate(${x}px, ${y}px)`\n        })\n        changelyricsClip(event.target.getAttribute(\"note_id\"), [px_to_time_Scale(event.deltaRect.left, duration), px_to_time_Scale(event.deltaRect.left + event.deltaRect.width, duration)])\n        Object.assign(event.target.dataset, { x, y })\n      }\n    }\n  })\n  .draggable({\n    listeners: { move: window.dragMoveListener_lyrics },\n    inertia: true,\n    modifiers: [\n      interact.modifiers.restrictRect({\n        restriction: 'parent',\n        endOnly: true\n      })\n    ]\n  })\n  .draggable({\n    // enable inertial throwing\n    inertia: true,\n    // keep the element within the area of it's parent\n    modifiers: [\n      interact.modifiers.restrictRect({\n        restriction: 'parent',\n        endOnly: true\n      })\n    ],\n    // enable autoScroll\n    autoScroll: true,\n    listeners: {\n      // call this function on every dragmove event\n      move: dragMoveListener_lyrics,\n\n      // call this function on every dragend event\n      end (event) {\n        var textEl = event.target.querySelector('p')\n        textEl && (textEl.textContent =\n          'moved a distance of ' +\n          (Math.sqrt(Math.pow(event.pageX - event.x0, 2) +\n                     Math.pow(event.pageY - event.y0, 2) | 0))\n            .toFixed(2) + 'px')\n      }\n    }\n  })\nfunction dragMoveListener_lyrics(event) {\n  var target = event.target\n  // keep the dragged position in the data-x/data-y attributes\n  var x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx\n  var y = 0\n  // translate the element\n  target.style.transform = 'translate(' + x + 'px, ' + y + 'px)'\n  //console.log( \"type:\", event.target.getAttribute(\"box_type\"), \"id:\", event.target.getAttribute(\"box_id\"), \"Add timeset:\", event.dx/10);\n  // console.log(\"Add Plus :\", px_to_time(x, duration), \"id:\", target.getAttribute(\"note_id\"));\n  \n  changelyricsClip(event.target.getAttribute(\"note_id\"), [px_to_time_Scale(event.dx, duration), px_to_time_Scale(event.dx, duration)])\n  // update the posiion attributes\n  target.setAttribute('data-x', x)\n}\n\n//------------------------------------------- 매트로늄 생성용 코드---------------------------------------------------//\n\nconst metronome = new Tone.Loop(time => {\n  const synth = new Tone.NoiseSynth().toDestination();\n  synth.triggerAttackRelease(\"2n\", time);\n}, \"4n\");\n\nfunction startMetronome() {\n  const bpm = parseFloat(document.getElementById(\"bpm\").value);\n  Tone.Transport.bpm.value = bpm;\n  metronome.start(0);\n  Tone.Transport.start();\n}\nfunction stopMetronome() {\n  metronome.stop();\n  Tone.Transport.stop();\n}\n\n\n\n//-------------------------------------------------------------------------------------------------------------------//\n//-------------------------------------------------------------------------------------------------------------------//\n//------------------------------------------- Note Interaction용 ----------------------------------------------------//\n//-------------------------------------------------------------------------------------------------------------------//\n//-------------------------------------------------------------------------------------------------------------------//\n\n\n//Piano clip note \ninteract('.resize-drag')\n  .resizable({\n    edges: { top: false, left: true, bottom: false, right: true },\n    listeners: {\n      move: function (event) {\n        let { x, y } = event.target.dataset\n        x = (parseFloat(x) || 0) + event.deltaRect.left\n        y = (parseFloat(y) || 0) + event.deltaRect.top\n        Object.assign(event.target.style, {\n          width: `${event.rect.width}px`,\n          height: `${event.rect.height}px`,\n          transform: `translate(${x}px, ${y}px)`\n        })\n        //console.log( \"id:\", event.target.getAttribute(\"note_id\"), \"Add timeset:\", [px_to_time_Scale(event.deltaRect.left, duration), px_to_time_Scale(event.deltaRect.left + event.deltaRect.width, duration)]);\n        changeMusicClip(event.target.getAttribute(\"note_id\"), [px_to_time_Scale(event.deltaRect.left, duration), px_to_time_Scale(event.deltaRect.left + event.deltaRect.width, duration)])\n        \n        Object.assign(event.target.dataset, { x, y })\n      }\n    }\n  })\n  .draggable({\n    listeners: { move: window.dragMoveListener_note },\n    inertia: true,\n    modifiers: [\n      interact.modifiers.restrictRect({\n        restriction: 'parent',\n        endOnly: true\n      })\n    ]\n  })\n  .draggable({\n    // enable inertial throwing\n    inertia: true,\n    // keep the element within the area of it's parent\n    modifiers: [\n      interact.modifiers.restrictRect({\n        restriction: 'parent',\n        endOnly: true\n      })\n    ],\n    // enable autoScroll\n    autoScroll: true,\n    listeners: {\n      // call this function on every dragmove event\n      move: dragMoveListener_note,\n\n      // call this function on every dragend event\n      end (event) {\n        var textEl = event.target.querySelector('p')\n        textEl && (textEl.textContent =\n          'moved a distance of ' +\n          (Math.sqrt(Math.pow(event.pageX - event.x0, 2) +\n                     Math.pow(event.pageY - event.y0, 2) | 0))\n            .toFixed(2) + 'px')\n      }\n    }\n  })\n  // Track Template\n  interact('.resize-drag_clip')\n  .resizable({\n    edges: { top: false, left: false, bottom: false, right: true },\n    listeners: {\n      move: function (event) {\n        let { x, y } = event.target.dataset\n        x = (parseFloat(x) || 0) + event.deltaRect.left\n        y = (parseFloat(y) || 0) + event.deltaRect.top\n        Object.assign(event.target.style, {\n          width: `${event.rect.width}px`,\n          height: `${event.rect.height}px`,\n          transform: `translate(${x}px, ${y}px)`\n        })\n        Object.assign(event.target.dataset, { x, y })\n      }\n    }\n  })\n\n//beat clip note \ninteract('.draggable')\n  .draggable({\n    listeners: { move: window.dragMoveListener_note },\n    inertia: true,\n    modifiers: [\n      interact.modifiers.restrictRect({\n        restriction: 'parent',\n        endOnly: true\n      })\n    ]\n  })\n  .draggable({\n    // enable inertial throwing\n    inertia: true,\n    // keep the element within the area of it's parent\n    modifiers: [\n      interact.modifiers.restrictRect({\n        restriction: 'parent',\n        endOnly: true\n      })\n    ],\n    // enable autoScroll\n    autoScroll: true,\n    listeners: {\n      // call this function on every dragmove event\n      move: dragMoveListener_note,\n\n      // call this function on every dragend event\n      end (event) {\n        var textEl = event.target.querySelector('p')\n\n        textEl && (textEl.textContent =\n          'moved a distance of ' +\n          (Math.sqrt(Math.pow(event.pageX - event.x0, 2) +\n                    Math.pow(event.pageY - event.y0, 2) | 0))\n            .toFixed(2) + 'px')\n      }\n    }\n  })\n\n//track music box\ninteract('.draggable_clip')\n.draggable({\n  listeners: { move: window.dragMoveListener_clip },\n  inertia: true,\n  modifiers: [\n    interact.modifiers.restrictRect({\n      restriction: 'parent',\n      endOnly: true\n    })\n  ]\n})\n.draggable({\n  // enable inertial throwing\n  inertia: true,\n  // keep the element within the area of it's parent\n  modifiers: [\n    interact.modifiers.restrictRect({\n      restriction: 'parent',\n      endOnly: true\n    })\n  ],\n  // enable autoScroll\n  autoScroll: true,\n  listeners: {\n    // call this function on every dragmove event\n    move: dragMoveListener_clip,\n\n    // call this function on every dragend event\n    end (event) {\n      var textEl = event.target.querySelector('p')\n\n      textEl && (textEl.textContent =\n        'moved a distance of ' +\n        (Math.sqrt(Math.pow(event.pageX - event.x0, 2) +\n                  Math.pow(event.pageY - event.y0, 2) | 0))\n          .toFixed(2) + 'px')\n    }\n  }\n})\n\n  function dragMoveListener_note (event) {\n    var target = event.target\n    // keep the dragged position in the data-x/data-y attributes\n    var x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx\n    var y = 0\n    // translate the element\n    target.style.transform = 'translate(' + x + 'px, ' + y + 'px)'\n    //console.log( \"id:\", event.target.getAttribute(\"note_id\"), \"Add timeset:\", [px_to_time_Scale(event.dx, duration), px_to_time_Scale(event.dx, duration)]);\n    changeMusicClip(event.target.getAttribute(\"note_id\"), [px_to_time_Scale(event.dx, duration), px_to_time_Scale(event.dx, duration)])\n    // console.log(\"Add Plus :\", px_to_time(x, duration), \"id:\", target.getAttribute(\"note_id\"));\n    // update the posiion attributes\n    target.setAttribute('data-x', x)\n  }\n\n  function dragMoveListener_clip (event) {\n    var target = event.target\n    // keep the dragged position in the data-x/data-y attributes\n    var x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx\n    var y = 0\n    // translate the element\n    target.style.transform = 'translate(' + x + 'px, ' + y + 'px)'\n    //console.log( \"type:\", event.target.getAttribute(\"box_type\"), \"id:\", event.target.getAttribute(\"box_id\"), \"Add timeset:\", event.dx/10);\n    TrackObject.editMusicClip(event.target.getAttribute(\"box_type\"), event.target.getAttribute(\"box_id\"), px_to_time(event.dx, duration_track, track_box_width, 0))\n    // console.log(\"Add Plus :\", px_to_time(x, duration), \"id:\", target.getAttribute(\"note_id\"));\n    // update the posiion attributes\n    target.setAttribute('data-x', x)\n  }\n\n\n  //clip dropzone 설정용 코드\n  interact('.template-dropzone').dropzone({\n    // only accept elements matching this CSS selector\n    accept: '#template-drop',\n    // Require a 75% element overlap for a drop to be possible\n    overlap: 0.75,\n  \n    // listen for drop related events:\n  \n    ondropactivate: function (event) {\n      // add active dropzone feedback\n      event.target.classList.add('drop-active')\n    },\n    ondragenter: function (event) {\n      var draggableElement = event.relatedTarget\n      var dropzoneElement = event.target\n      // feedback the possibility of a drop\n      if(trackActivaqte){\n      dropzoneElement.classList.add('drop-target')\n      draggableElement.classList.add('can-drop')\n      //draggableElement.textContent = 'Dragged in'\n      event.target.classList.remove('drop-active')\n      event.target.classList.remove('drop-target')\n      const tempalteId = parseInt(event.relatedTarget.getAttribute(\"clip_id\"));\n      const clipTime = createTrackClipObject_template('template-dropzone', tempalteId, TrackObject.getTempalateId())\n        //console.log(\"clip Time Check\", clipTime/10);\n      TrackObject.setTemplateClip(tempalteId, clipTime)\n        trackActivaqte = false;\n      }\n    },\n    ondragleave: function (event) {\n      // remove the drop feedback style\n      event.target.classList.remove('drop-target')\n      event.relatedTarget.classList.remove('can-drop')\n      //event.relatedTarget.textContent = 'Dragged out'\n    },\n    ondrop: function (event) {\n      //event.relatedTarget.textContent = 'Dropped'\n    },\n    ondropdeactivate: function (event) {\n      // remove active dropzone feedback\n      trackActivaqte = true\n    }\n  })\n\n  interact('.melody-dropzone').dropzone({\n    // only accept elements matching this CSS selector\n    accept: '#melody-drop',\n    // Require a 75% element overlap for a drop to be possible\n    overlap: 0.75,\n    // listen for drop related events:\n    ondropactivate: function (event) {\n      // add active dropzone feedback\n      event.target.classList.add('drop-active')\n    },\n    ondragenter: function (event) {\n      var draggableElement = event.relatedTarget\n      var dropzoneElement = event.target\n      if(trackActivaqte){\n      // feedback the possibility of a drop\n      dropzoneElement.classList.add('drop-target')\n      draggableElement.classList.add('can-drop')\n      //draggableElement.textContent = 'Dragged in'\n      event.target.classList.remove('drop-active')\n      event.target.classList.remove('drop-target')\n      const Tmp_clip = get_clip(event.relatedTarget.getAttribute(\"clip_type\"), event.relatedTarget.getAttribute(\"clip_id\"))\n      const clipTime = createTrackClipObject('melody-dropzone', Tmp_clip.getClipType(), Tmp_clip.getClipId(), Tmp_clip.getDuration(), TrackObject.getMelodyId())\n      //console.log(\"clip Time Check\", clipTime/10);\n      TrackObject.setMusicClip(Tmp_clip, clipTime)\n        trackActivaqte = false;\n      }\n    },\n    ondragleave: function (event) {\n      // remove the drop feedback style\n      event.target.classList.remove('drop-target')\n      event.relatedTarget.classList.remove('can-drop')\n      //event.relatedTarget.textContent = 'Dragged out'\n    },\n    ondrop: function (event) {\n      //event.relatedTarget.textContent = 'Dropped'\n      //createTrackClipObject('melody-dropzone',get_clip(event.target.getAttribute(\"clip_id\"), event.target.getAttribute(\"clip_type\")))\n\n    },\n    ondropdeactivate: function (event) {\n      // remove active dropzone feedback\n      trackActivaqte = true\n    }\n  })\n\n    interact('.beat-dropzone').dropzone({\n    // only accept elements matching this CSS selector\n    accept: '#beat-drop',\n    // Require a 75% element overlap for a drop to be possible\n    overlap: 0.75,\n    // listen for drop related events:\n    ondropactivate: function (event) {\n      // add active dropzone feedback\n      event.target.classList.add('drop-active')\n    },\n    ondragenter: function (event) {\n      var draggableElement = event.relatedTarget\n      var dropzoneElement = event.target\n      if(trackActivaqte){\n      // feedback the possibility of a drop\n      dropzoneElement.classList.add('drop-target')\n      draggableElement.classList.add('can-drop')\n      //draggableElement.textContent = 'Dragged in'\n      event.target.classList.remove('drop-active')\n      event.target.classList.remove('drop-target')\n      const Tmp_clip = get_clip(event.relatedTarget.getAttribute(\"clip_type\"), event.relatedTarget.getAttribute(\"clip_id\"))\n      const clipTime = createTrackClipObject('beat-dropzone', Tmp_clip.getClipType(), Tmp_clip.getClipId(), Tmp_clip.getDuration(), TrackObject.getBeatId())\n      TrackObject.setMusicClip(Tmp_clip, clipTime)\n      //console.log(\"clip Time Check\", clipTime/10);\n        trackActivaqte = false;\n      }\n    },\n    ondragleave: function (event) {\n      // remove the drop feedback style\n      event.target.classList.remove('drop-target')\n      event.relatedTarget.classList.remove('can-drop')\n      //event.relatedTarget.textContent = 'Dragged out'\n    },\n    ondrop: function (event) {\n      //event.relatedTarget.textContent = 'Dropped'\n      //createTrackClipObject('beat-dropzone',get_clip(event.target.getAttribute(\"clip_id\"), event.target.getAttribute(\"clip_type\")))\n  \n    },\n    ondropdeactivate: function (event) {\n      // remove active dropzone feedback\n      trackActivaqte = true\n    }\n  })\n  \n  interact('.drag-drop')\n    .draggable({\n      inertia: true,\n      modifiers: [\n        interact.modifiers.restrictRect({\n          restriction: 'parent',\n          endOnly: true\n        })\n      ],\n      autoScroll: true,\n      // dragMoveListener from the dragging demo above\n      listeners: { move: dragMoveListenerxy }\n    })\n  \n  function dragMoveListenerxy (event) {\n    var target = event.target\n    // keep the dragged position in the data-x/data-y attributes\n    var x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx\n    var y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy\n    // translate the element\n    target.style.transform = 'translate(' + x + 'px, ' + y + 'px)'\n    // update the posiion attributes\n    target.setAttribute('data-x', x)\n    target.setAttribute('data-y', y)\n  }\n\n//# sourceURL=webpack://Synthesizer/./src/js/SheetMusic.js?");

/***/ }),

/***/ "./src/js/Synthesizer.js":
/*!*******************************!*\
  !*** ./src/js/Synthesizer.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"beat_output_play\": () => (/* binding */ beat_output_play),\n/* harmony export */   \"beat_player\": () => (/* binding */ beat_player),\n/* harmony export */   \"dialInitialize\": () => (/* binding */ dialInitialize),\n/* harmony export */   \"piano_player\": () => (/* binding */ piano_player)\n/* harmony export */ });\n/* harmony import */ var _JZZ_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./JZZ.js */ \"./src/js/JZZ.js\");\n/* harmony import */ var _JZZ_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_JZZ_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Share_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Share.js */ \"./src/js/Share.js\");\n\n\n\nlet noteType = [\"C\",\"C#\",\"D\",\"D#\",\"E\",\"F\",\"F#\",\"G\",\"G#\",\"A\",\"A#\",\"B\"]\nlet vector = {X:\"x\", Y:\"y\"}\n//AutiFilter >> 그냥 필터!\nconst filter = new Tone.Filter().toDestination();\nfilter.set({\n  frequency: \"C4\",\n  type:\"highpass\"\n});\n\nconst beatAudio1 = document.getElementById('beat1');\nconst beatAudio2 = document.getElementById('beat2');\nconst beatAudio3 = document.getElementById('beat3');\nconst beatAudio4 = document.getElementById('beat4');\n//AutoWah >> 울리는 효과\n// const autoWah = new Tone.AutoWah(50, 6, -30).toDestination();\n// autoWah.Q.value = 6;\n\n//BitCrusher >> 찢어지는 듯한 효과\n// const crusher = new Tone.BitCrusher(4).toDestination();\n\n//Chebyshev >> 고양이 소리?\n// const cheby = new Tone.Chebyshev(50).toDestination();\n\n//Chorus >> 동시에 누를 때 확인\n// const chorus = new Tone.Chorus(4, 2.5, 0.5).toDestination().start();\n\n//Distortion >> 음이 더 늘어지는 효과\n//const dist = new Tone.Distortion(1.5).toDestination();\n\n//FeedbackDelay >> delay랑 코러스 효과음?\n// const feedbackDelay = new Tone.FeedbackDelay(\"8n\", 0.5).toDestination();\n\n//Freeverb >> 먹먹해지는 효과?\n// const freeverb = new Tone.Freeverb().toDestination();\n// freeverb.dampening = 1000;\n\n//JCReverb >> 두 음이 울리는 느낌?\n//const reverb = new Tone.JCReverb(0.4).toDestination();\nconst delay = new Tone.FeedbackDelay(0.5).toDestination();;\n//const synth = new Tone.Synth().chain(delay, reverb);\n\n//Phaser >> 잡음이 섞이는 느낌\n// const phaser = new Tone.Phaser({\n// \tfrequency: 150,\n// \toctaves: 10,\n// \tbaseFrequency: 1000\n// }).toDestination();\n\n// //PingPonDelay >> 탁구공이 튀는 느낌으로 점점 음이 생기는 느낌\n// const pingPong = new Tone.PingPongDelay(\"4n\", 0.2).toDestination();\n\n// const vibrato = new Tone.Vibrato(5, 0.1).toDestination();\n\nlet autoWah = new Tone.AutoWah(50, 6, -30).toDestination();\nlet crusher = new Tone.BitCrusher(4).toDestination();\nlet cheby = new Tone.Chebyshev(50).toDestination();\nlet chorus = new Tone.Chorus(5, 2.5, 0.5).toDestination();\nlet feedbackDelay = new Tone.FeedbackDelay(\"8n\", 0.5).toDestination();\nlet freeverb = new Tone.Freeverb().toDestination();\nlet phaser = new Tone.Phaser({\n  frequency: 150,\n  octaves: 10,\n  baseFrequency: 1000\n}).toDestination();\nlet vibrato = new Tone.Vibrato(5, 0.1).toDestination();\nlet dial_bool = [false, false, false, false, false, false, false, false]\n\n// const synth = new Tone.Synth().chain(chorus).toDestination();\n// const AMsynth = new Tone.AMSynth().toDestination();\n// const duoSynth = new Tone.DuoSynth().toDestination();\nconst fmSynth = new Tone.FMSynth().toDestination();\n// const MembraneSynth = new Tone.MembraneSynth().toDestination();\n// const plucky = new Tone.PluckSynth().toDestination();\n\n\nconst polySynth = new Tone.PolySynth().toDestination();\npolySynth.set({ detune: -1200 });\n\nconst MonoSynth = new Tone.MonoSynth({\n\toscillator: {\n\t\ttype: \"square\"\n\t},\n\tenvelope: {\n\t\tattack: 0.1\n\t}\n}).toDestination();\n\nconst sampler = new Tone.Sampler({\n\turls: {\n\t\tA1: \"A1.mp3\",\n\t\tA2: \"A2.mp3\",\n\t},\n\t//baseUrl: \"https://tonejs.github.io/audio/salamander/\",\n  baseUrl: \"https://tonejs.github.io/audio/casio/\",\n  attack: 1,\n  release: 0,\n}).toDestination();\n\n//sampler.connect(pingPong)\n\n\n\n// Beat\n//const MetalSynth = new Tone.MetalSynth().toDestination();\n//const noiseSynth = new Tone.NoiseSynth().toDestination();\n\n\n\nfunction set_synthesiser(msg){\n  let synthesiser_msg = get_msg_input(msg)\n    switch (synthesiser_msg.input_type){\n      case \"90\":  //Press the piano keys\n        piano_key_input(synthesiser_msg.input_id, synthesiser_msg.input_value)\n        break;\n      case \"80\":  //Release the piano keys\n        piano_key_release(synthesiser_msg.input_id)\n        break;\n      case \"99\":  //tap the touch pad\n        pad_input(synthesiser_msg.input_id)\n        break;\n      case \"89\":  //Release the touch pad\n        pad_output(synthesiser_msg.input_id)\n        break;\n      case \"b0\":  //Moving the dial or Moving the joystick(up,down)\n        if(synthesiser_msg.input_id != 1){\n          dial_input(synthesiser_msg.input_id, synthesiser_msg.input_value)\n        }\n        else{\n          joystick_input(synthesiser_msg.input_id, synthesiser_msg.input_value, vector.Y)\n        }\n        break;\n      case \"e0\":  //Moving the joystick(left, right)\n        joystick_input(synthesiser_msg.input_id, synthesiser_msg.input_value, vector.X)\n        break;\n      case \"d9\":  //Press the touch pad\n        break;\n      default:\n        break;\n      }\n}\n\nfunction get_msg_input(msg){\n  // output list : [input_type, input_id, input_value, bool(OnOff)]\n  return {\n    input_type: msg.substr(0,2), \n    input_id: parseInt(msg.substr(3,2), 16), \n    input_value: parseInt(msg.substr(6,2), 16)\n  }\n}\nfunction piano_player(input_note, attackRelase, value = 127){\n  if(attackRelase){\n    polySynth.triggerAttack(input_note);\n    _Share_js__WEBPACK_IMPORTED_MODULE_1__.note_set.pitch = note2Pitch(input_note);  //output : 0 ~ 127\n    _Share_js__WEBPACK_IMPORTED_MODULE_1__.note_set.note = input_note; //output : C0 ~ B7\n    _Share_js__WEBPACK_IMPORTED_MODULE_1__.note_set.value = value; //output : 0 ~ 127\n    const event = new CustomEvent('noteInput', { detail: _Share_js__WEBPACK_IMPORTED_MODULE_1__.note_set });\n    _Share_js__WEBPACK_IMPORTED_MODULE_1__.SyntheysizerEvents.dispatchEvent(event);\n  }\n  else{\n    polySynth.triggerRelease(input_note);\n    _Share_js__WEBPACK_IMPORTED_MODULE_1__.note_set.pitch = note2Pitch(input_note);  //output : 0 ~ 127\n    _Share_js__WEBPACK_IMPORTED_MODULE_1__.note_set.note = input_note; //output : C0 ~ B7\n    const event = new CustomEvent('noteRelease', { detail: _Share_js__WEBPACK_IMPORTED_MODULE_1__.note_set });\n    _Share_js__WEBPACK_IMPORTED_MODULE_1__.SyntheysizerEvents.dispatchEvent(event);\n  }\n}\nfunction note2Pitch(input_note){\n  //console.log(\"input\", input_note.slice(0,-1), input_note.slice(-1));\n  let num = noteType.findIndex((num) => num == input_note.slice(0,1));\n  return num + noteType.length * parseInt(input_note.slice(-1))\n}\nfunction pitch2Note(input_pitch){\n  return noteType[input_pitch%12] + String(parseInt(input_pitch/12))\n}\n\nfunction piano_key_input(input_id, input_value){\n  let input_note = pitch2Note(input_id)\n  piano_player(input_note, true);\n  _Share_js__WEBPACK_IMPORTED_MODULE_1__.note_set.pitch = input_id;  //output : 0 ~ 127\n  _Share_js__WEBPACK_IMPORTED_MODULE_1__.note_set.note = input_note; //output : C0 ~ B7\n  _Share_js__WEBPACK_IMPORTED_MODULE_1__.note_set.value = input_value; //output : 0 ~ 127\n  const event = new CustomEvent('pianoKeyInput', { detail: _Share_js__WEBPACK_IMPORTED_MODULE_1__.note_set });\n  _Share_js__WEBPACK_IMPORTED_MODULE_1__.SyntheysizerEvents.dispatchEvent(event);\n}\n\nfunction piano_key_release(input_id){\n  let input_note = pitch2Note(input_id)\n  piano_player(input_note, false);\n  _Share_js__WEBPACK_IMPORTED_MODULE_1__.note_set.pitch = input_id;  //output : 0 ~ 127\n  _Share_js__WEBPACK_IMPORTED_MODULE_1__.note_set.note = input_note; //output : C0 ~ B7\n  const event = new CustomEvent('pianoKeyOutput', { detail: _Share_js__WEBPACK_IMPORTED_MODULE_1__.note_set });\n  _Share_js__WEBPACK_IMPORTED_MODULE_1__.SyntheysizerEvents.dispatchEvent(event);\n}\nfunction restartAudio(audioElement) {\n  audioElement.currentTime = 0; // 재생 위치를 0으로 설정\n  audioElement.play(); // 오디오 재생 시작\n}\nfunction beat_player(input_id){\n  _Share_js__WEBPACK_IMPORTED_MODULE_1__.pad_set.id = input_id;\n  const event = new CustomEvent('padInput', { detail: _Share_js__WEBPACK_IMPORTED_MODULE_1__.pad_set });\n  _Share_js__WEBPACK_IMPORTED_MODULE_1__.SyntheysizerEvents.dispatchEvent(event);\n  document.getElementById('HapticPlayButton').click();\n  //console.log(\"tap Check\");\n  switch (input_id){\n    case 0:\n      restartAudio(beatAudio1);\n      break;\n    case 1:\n      restartAudio(beatAudio2);\n      break;\n    case 2:\n      restartAudio(beatAudio3);\n      break;\n    case 3:\n      restartAudio(beatAudio4);\n      break;\n    default:\n      break;\n  }\n}\nfunction beat_output_play(input_id){\n  _Share_js__WEBPACK_IMPORTED_MODULE_1__.pad_set.id = input_id;\n  const event = new CustomEvent('padOutput', { detail: _Share_js__WEBPACK_IMPORTED_MODULE_1__.pad_set });\n  _Share_js__WEBPACK_IMPORTED_MODULE_1__.SyntheysizerEvents.dispatchEvent(event);\n}\n\nfunction pad_input(input_id){\n  _Share_js__WEBPACK_IMPORTED_MODULE_1__.pad_set.id = input_id - 36;\n  beat_player(input_id - 36)\n  console.log(\"test\")\n  const event = new CustomEvent('padkeyInput', { detail: _Share_js__WEBPACK_IMPORTED_MODULE_1__.pad_set });\n  _Share_js__WEBPACK_IMPORTED_MODULE_1__.SyntheysizerEvents.dispatchEvent(event);\n}\nfunction pad_output(input_id){\n  beat_output_play(input_id - 36)\n}\n_Share_js__WEBPACK_IMPORTED_MODULE_1__.SyntheysizerEvents.addEventListener('templateLoad', function (e){\n  // console.log(\"In Circle note: \", e.detail.value); //범위가 0~127입니다.\n  _Share_js__WEBPACK_IMPORTED_MODULE_1__.dial_set.value = e.detail;\n  //console.log(\"set chnaged\", dial_set);\n  const event = new CustomEvent('dialInput', { detail: _Share_js__WEBPACK_IMPORTED_MODULE_1__.dial_set });\n  _Share_js__WEBPACK_IMPORTED_MODULE_1__.SyntheysizerEvents.dispatchEvent(event);\n  //console.log(dial_set);\n  //for(let i = 70; i < 78; i++){\n  //  dial_effect(i, dial_set.value[parseInt((i-70)/4)][(i-70)%4]);\n  //}\n})\n\n\nfunction dialInitialize(){\n  _Share_js__WEBPACK_IMPORTED_MODULE_1__.dial_set.value = [[0.0, 0.0, 0.0, 0.0], \n                  [0.0, 0.0, 0.0, 0.0]]\n  const event = new CustomEvent('dialInput', { detail: _Share_js__WEBPACK_IMPORTED_MODULE_1__.dial_set });\n  _Share_js__WEBPACK_IMPORTED_MODULE_1__.SyntheysizerEvents.dispatchEvent(event);\n  for(let i = 70; i < 78; i++){\n    dial_effect(i, 0);\n  }\n  \n}\nfunction dial_input(input_id, input_value){\n  //console.log(\"dial_input\", input_id, );\n  if(input_id > 69){  //there are except case in joystick\n    _Share_js__WEBPACK_IMPORTED_MODULE_1__.dial_set.value[parseInt((input_id-70)/4)][(input_id-70)%4] = input_value;\n    const event = new CustomEvent('dialInput', { detail: _Share_js__WEBPACK_IMPORTED_MODULE_1__.dial_set });\n    _Share_js__WEBPACK_IMPORTED_MODULE_1__.SyntheysizerEvents.dispatchEvent(event);\n    dial_effect(input_id, input_value);\n  }\n}\n\nfunction Normaizing(input_value, minmaxList){\n  return minmaxList[0] + (minmaxList[1] - minmaxList[0]) * ((input_value - 10) / (127 - 10));\n}\n\nfunction dial_effect(input_id, input_value){\n    switch (input_id){\n      case 70:\n        console.log(\"feedbackDelay\", input_value)\n        if(dial_bool[0]){\n          // console.log(\"disconnect\");\n          polySynth.disconnect(feedbackDelay);\n          dial_bool[0] = false;\n        }\n        if(input_value > 10){\n          // console.log(\"connect\");\n          //feedbackDelay = new Tone.FeedbackDelay(\"8n\", Normaizing(input_value, [0, 0.8])).toDestination();\n          feedbackDelay.feedback.value = Normaizing(input_value, [0, 0.5]);\n          polySynth.connect(feedbackDelay);\n          dial_bool[0] = true;\n        }\n        break;\n      case 71:\n        console.log(\"crusher\", input_value)\n        if(dial_bool[1]){\n          // console.log(\"disconnect\");\n          polySynth.disconnect(crusher);\n          dial_bool[1] = false;\n        }\n        if(input_value > 10){\n          // console.log(\"connect\");\n          crusher.bits.value = 9 - parseInt(Normaizing(input_value, [1, 3]));\n          polySynth.connect(crusher);\n          dial_bool[1] = true;\n        }\n        break;\n      case 72:\n        console.log(\"cheby\", input_value)\n        if(dial_bool[2]){\n          // console.log(\"disconnect\");\n          polySynth.disconnect(cheby);\n          dial_bool[2] = false;\n        }\n        if(input_value > 10){  \n          // console.log(\"connect\");\n          cheby.order = parseInt(Normaizing(input_value, [1, 20]));\n          polySynth.connect(cheby);\n          dial_bool[2] = true;\n        }\n        break;\n      case 73:\n        console.log(\"chorus\", input_value)\n        if(dial_bool[3]){\n          // console.log(\"disconnect\");\n          polySynth.disconnect(chorus);\n          dial_bool[3] = false;\n        }\n        if(input_value > 10){\n          // console.log(\"connect\");\n          //chorus = new Tone.Chorus(Normaizing(input_value, [1, 10]), 2.5, 0.5).toDestination();\n          chorus.frequency.value = Normaizing(input_value, [1, 7])\n          polySynth.connect(chorus);\n          dial_bool[3] = true;\n        }\n        break;\n      default:\n        break;\n      }\n}\n\n\n\nfunction joystick_input(input_id, input_value, type){\n  if(type == vector.X){\n    //console.log(type, input_value - 64)\n    _Share_js__WEBPACK_IMPORTED_MODULE_1__.joystick_set.value[0] = input_value - 64;\n    const event = new CustomEvent('joystickInpnut', { detail: _Share_js__WEBPACK_IMPORTED_MODULE_1__.joystick_set });\n    _Share_js__WEBPACK_IMPORTED_MODULE_1__.SyntheysizerEvents.dispatchEvent(event);\n  }\n  else{\n    //console.log(type, parseInt(input_value/2))\n    _Share_js__WEBPACK_IMPORTED_MODULE_1__.joystick_set.value[1] = parseInt(input_value/2)\n    const event = new CustomEvent('joystickInpnut', { detail: _Share_js__WEBPACK_IMPORTED_MODULE_1__.joystick_set });\n    _Share_js__WEBPACK_IMPORTED_MODULE_1__.SyntheysizerEvents.dispatchEvent(event);\n  }\n}\n\n// MIDI Device Detect code\nvar midi_in;\nlet open_midi = document.querySelector('[data-action=\"open_midi_in\"]');\nopen_midi.addEventListener('click', event => {\n  midi_in = (0,_JZZ_js__WEBPACK_IMPORTED_MODULE_0__.JZZ)().openMidiIn()\n  .or(function(){document.getElementById(\"midiInName\").innerHTML = \"Cannot open!\";})\n  .and(function(){document.getElementById(\"midiInName\").innerHTML = this.name(); console.log(this.info());})\n  .connect(function(msg){\n    set_synthesiser(msg.toString());\n  });\n });\n\n let close_midi = document.querySelector('[data-action=\"close_midi_in\"]');\n close_midi.addEventListener('click', event => {\n  if (midi_in) {\n    midi_in.close();\n    midi_in = undefined;\n    document.getElementById(\"midiInName\").innerHTML = \"closed\";\n  }\n  });\n\n//# sourceURL=webpack://Synthesizer/./src/js/Synthesizer.js?");

/***/ }),

/***/ "./src/js/jsmidgen.js":
/*!****************************!*\
  !*** ./src/js/jsmidgen.js ***!
  \****************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar Midi = {};\n\n(function(exported) {\n\n\tvar DEFAULT_VOLUME   = exported.DEFAULT_VOLUME   = 90;\n\tvar DEFAULT_DURATION = exported.DEFAULT_DURATION = 128;\n\tvar DEFAULT_CHANNEL  = exported.DEFAULT_CHANNEL  = 0;\n\n\t/* ******************************************************************\n\t * Utility functions\n\t ****************************************************************** */\n\n\tvar Util = {\n\n\t\tmidi_letter_pitches: { a:21, b:23, c:12, d:14, e:16, f:17, g:19 },\n\n\t\t/**\n\t\t * Convert a symbolic note name (e.g. \"c4\") to a numeric MIDI pitch (e.g.\n\t\t * 60, middle C).\n\t\t *\n\t\t * @param {string} n - The symbolic note name to parse.\n\t\t * @returns {number} The MIDI pitch that corresponds to the symbolic note\n\t\t * name.\n\t\t */\n\t\tmidiPitchFromNote: function(n) {\n\t\t\tvar matches = /([a-g])(#+|b+)?([0-9]+)$/i.exec(n);\n\t\t\tvar note = matches[1].toLowerCase(), accidental = matches[2] || '', octave = parseInt(matches[3], 10);\n\t\t\treturn (12 * octave) + Util.midi_letter_pitches[note] + (accidental.substr(0,1)=='#'?1:-1) * accidental.length;\n\t\t},\n\n\t\t/**\n\t\t * Ensure that the given argument is converted to a MIDI pitch. Note that\n\t\t * it may already be one (including a purely numeric string).\n\t\t *\n\t\t * @param {string|number} p - The pitch to convert.\n\t\t * @returns {number} The resulting numeric MIDI pitch.\n\t\t */\n\t\tensureMidiPitch: function(p) {\n\t\t\tif (typeof p == 'number' || !/[^0-9]/.test(p)) {\n\t\t\t\t// numeric pitch\n\t\t\t\treturn parseInt(p, 10);\n\t\t\t} else {\n\t\t\t\t// assume it's a note name\n\t\t\t\treturn Util.midiPitchFromNote(p);\n\t\t\t}\n\t\t},\n\n\t\tmidi_pitches_letter: { '12':'c', '13':'c#', '14':'d', '15':'d#', '16':'e', '17':'f', '18':'f#', '19':'g', '20':'g#', '21':'a', '22':'a#', '23':'b' },\n\t\tmidi_flattened_notes: { 'a#':'bb', 'c#':'db', 'd#':'eb', 'f#':'gb', 'g#':'ab' },\n\n\t\t/**\n\t\t * Convert a numeric MIDI pitch value (e.g. 60) to a symbolic note name\n\t\t * (e.g. \"c4\").\n\t\t *\n\t\t * @param {number} n - The numeric MIDI pitch value to convert.\n\t\t * @param {boolean} [returnFlattened=false] - Whether to prefer flattened\n\t\t * notes to sharpened ones. Optional, default false.\n\t\t * @returns {string} The resulting symbolic note name.\n\t\t */\n\t\tnoteFromMidiPitch: function(n, returnFlattened) {\n\t\t\tvar octave = 0, noteNum = n, noteName, returnFlattened = returnFlattened || false;\n\t\t\tif (n > 23) {\n\t\t\t\t// noteNum is on octave 1 or more\n\t\t\t\toctave = Math.floor(n/12) - 1;\n\t\t\t\t// subtract number of octaves from noteNum\n\t\t\t\tnoteNum = n - octave * 12;\n\t\t\t}\n\n\t\t\t// get note name (c#, d, f# etc)\n\t\t\tnoteName = Util.midi_pitches_letter[noteNum];\n\t\t\t// Use flattened notes if requested (e.g. f# should be output as gb)\n\t\t\tif (returnFlattened && noteName.indexOf('#') > 0) {\n\t\t\t\tnoteName = Util.midi_flattened_notes[noteName];\n\t\t\t}\n\t\t\treturn noteName + octave;\n\t\t},\n\n\t\t/**\n\t\t * Convert beats per minute (BPM) to microseconds per quarter note (MPQN).\n\t\t *\n\t\t * @param {number} bpm - A number in beats per minute.\n\t\t * @returns {number} The number of microseconds per quarter note.\n\t\t */\n\t\tmpqnFromBpm: function(bpm) {\n\t\t\tvar mpqn = Math.floor(60000000 / bpm);\n\t\t\tvar ret=[];\n\t\t\tdo {\n\t\t\t\tret.unshift(mpqn & 0xFF);\n\t\t\t\tmpqn >>= 8;\n\t\t\t} while (mpqn);\n\t\t\twhile (ret.length < 3) {\n\t\t\t\tret.push(0);\n\t\t\t}\n\t\t\treturn ret;\n\t\t},\n\n\t\t/**\n\t\t * Convert microseconds per quarter note (MPQN) to beats per minute (BPM).\n\t\t *\n\t\t * @param {number} mpqn - The number of microseconds per quarter note.\n\t\t * @returns {number} A number in beats per minute.\n\t\t */\n\t\tbpmFromMpqn: function(mpqn) {\n\t\t\tvar m = mpqn;\n\t\t\tif (typeof mpqn[0] != 'undefined') {\n\t\t\t\tm = 0;\n\t\t\t\tfor (var i=0, l=mpqn.length-1; l >= 0; ++i, --l) {\n\t\t\t\t\tm |= mpqn[i] << l;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn Math.floor(60000000 / mpqn);\n\t\t},\n\n\t\t/**\n\t\t * Converts an array of bytes to a string of hexadecimal characters. Prepares\n\t\t * it to be converted into a base64 string.\n\t\t *\n\t\t * @param {Array} byteArray - Array of bytes to be converted.\n\t\t * @returns {string} Hexadecimal string, e.g. \"097B8A\".\n\t\t */\n\t\tcodes2Str: function(byteArray) {\n\t\t\treturn String.fromCharCode.apply(null, byteArray);\n\t\t},\n\n\t\t/**\n\t\t * Converts a string of hexadecimal values to an array of bytes. It can also\n\t\t * add remaining \"0\" nibbles in order to have enough bytes in the array as the\n\t\t * `finalBytes` parameter.\n\t\t *\n\t\t * @param {string} str - string of hexadecimal values e.g. \"097B8A\"\n\t\t * @param {number} [finalBytes] - Optional. The desired number of bytes\n\t\t * (not nibbles) that the returned array should contain.\n\t\t * @returns {Array} An array of nibbles.\n\t\t */\n\t\tstr2Bytes: function (str, finalBytes) {\n\t\t\tif (finalBytes) {\n\t\t\t\twhile ((str.length / 2) < finalBytes) { str = \"0\" + str; }\n\t\t\t}\n\n\t\t\tvar bytes = [];\n\t\t\tfor (var i=str.length-1; i>=0; i = i-2) {\n\t\t\t\tvar chars = i === 0 ? str[i] : str[i-1] + str[i];\n\t\t\t\tbytes.unshift(parseInt(chars, 16));\n\t\t\t}\n\n\t\t\treturn bytes;\n\t\t},\n\n\t\t/**\n\t\t * Translates number of ticks to MIDI timestamp format, returning an array\n\t\t * of bytes with the time values. MIDI has a very particular way to express\n\t\t * time; take a good look at the spec before ever touching this function.\n\t\t *\n\t\t * @param {number} ticks - Number of ticks to be translated.\n\t\t * @returns {number} Array of bytes that form the MIDI time value.\n\t\t */\n\t\ttranslateTickTime: function(ticks) {\n\t\t\tvar buffer = ticks & 0x7F;\n\n\t\t\twhile (ticks = ticks >> 7) {\n\t\t\t\tbuffer <<= 8;\n\t\t\t\tbuffer |= ((ticks & 0x7F) | 0x80);\n\t\t\t}\n\n\t\t\tvar bList = [];\n\t\t\twhile (true) {\n\t\t\t\tbList.push(buffer & 0xff);\n\n\t\t\t\tif (buffer & 0x80) { buffer >>= 8; }\n\t\t\t\telse { break; }\n\t\t\t}\n\t\t\treturn bList;\n\t\t},\n\n\t};\n\n\t/* ******************************************************************\n\t * Event class\n\t ****************************************************************** */\n\n\t/**\n\t * Construct a MIDI event.\n\t *\n\t * Parameters include:\n\t *  - time [optional number] - Ticks since previous event.\n\t *  - type [required number] - Type of event.\n\t *  - channel [required number] - Channel for the event.\n\t *  - param1 [required number] - First event parameter.\n\t *  - param2 [optional number] - Second event parameter.\n\t */\n\tvar MidiEvent = function(params) {\n\t\tif (!this) return new MidiEvent(params);\n\t\tif (params &&\n\t\t\t\t(params.type    !== null || params.type    !== undefined) &&\n\t\t\t\t(params.channel !== null || params.channel !== undefined) &&\n\t\t\t\t(params.param1  !== null || params.param1  !== undefined)) {\n\t\t\tthis.setTime(params.time);\n\t\t\tthis.setType(params.type);\n\t\t\tthis.setChannel(params.channel);\n\t\t\tthis.setParam1(params.param1);\n\t\t\tthis.setParam2(params.param2);\n\t\t}\n\t};\n\n\t// event codes\n\tMidiEvent.NOTE_OFF           = 0x80;\n\tMidiEvent.NOTE_ON            = 0x90;\n\tMidiEvent.AFTER_TOUCH        = 0xA0;\n\tMidiEvent.CONTROLLER         = 0xB0;\n\tMidiEvent.PROGRAM_CHANGE     = 0xC0;\n\tMidiEvent.CHANNEL_AFTERTOUCH = 0xD0;\n\tMidiEvent.PITCH_BEND         = 0xE0;\n\n\n\t/**\n\t * Set the time for the event in ticks since the previous event.\n\t *\n\t * @param {number} ticks - The number of ticks since the previous event. May\n\t * be zero.\n\t */\n\tMidiEvent.prototype.setTime = function(ticks) {\n\t\tthis.time = Util.translateTickTime(ticks || 0);\n\t};\n\n\t/**\n\t * Set the type of the event. Must be one of the event codes on MidiEvent.\n\t *\n\t * @param {number} type - Event type.\n\t */\n\tMidiEvent.prototype.setType = function(type) {\n\t\tif (type < MidiEvent.NOTE_OFF || type > MidiEvent.PITCH_BEND) {\n\t\t\tthrow new Error(\"Trying to set an unknown event: \" + type);\n\t\t}\n\n\t\tthis.type = type;\n\t};\n\n\t/**\n\t * Set the channel for the event. Must be between 0 and 15, inclusive.\n\t *\n\t * @param {number} channel - The event channel.\n\t */\n\tMidiEvent.prototype.setChannel = function(channel) {\n\t\tif (channel < 0 || channel > 15) {\n\t\t\tthrow new Error(\"Channel is out of bounds.\");\n\t\t}\n\n\t\tthis.channel = channel;\n\t};\n\n\t/**\n\t * Set the first parameter for the event. Must be between 0 and 255,\n\t * inclusive.\n\t *\n\t * @param {number} p - The first event parameter value.\n\t */\n\tMidiEvent.prototype.setParam1 = function(p) {\n\t\tthis.param1 = p;\n\t};\n\n\t/**\n\t * Set the second parameter for the event. Must be between 0 and 255,\n\t * inclusive.\n\t *\n\t * @param {number} p - The second event parameter value.\n\t */\n\tMidiEvent.prototype.setParam2 = function(p) {\n\t\tthis.param2 = p;\n\t};\n\n\t/**\n\t * Serialize the event to an array of bytes.\n\t *\n\t * @returns {Array} The array of serialized bytes.\n\t */\n\tMidiEvent.prototype.toBytes = function() {\n\t\tvar byteArray = [];\n\n\t\tvar typeChannelByte = this.type | (this.channel & 0xF);\n\n\t\tbyteArray.push.apply(byteArray, this.time);\n\t\tbyteArray.push(typeChannelByte);\n\t\tbyteArray.push(this.param1);\n\n\t\t// Some events don't have a second parameter\n\t\tif (this.param2 !== undefined && this.param2 !== null) {\n\t\t\tbyteArray.push(this.param2);\n\t\t}\n\t\treturn byteArray;\n\t};\n\n\t/* ******************************************************************\n\t * MetaEvent class\n\t ****************************************************************** */\n\n\t/**\n\t * Construct a meta event.\n\t *\n\t * Parameters include:\n\t *  - time [optional number] - Ticks since previous event.\n\t *  - type [required number] - Type of event.\n\t *  - data [optional array|string] - Event data.\n\t */\n\tvar MetaEvent = function(params) {\n\t\tif (!this) return new MetaEvent(params);\n\t\tvar p = params || {};\n\t\tthis.setTime(params.time);\n\t\tthis.setType(params.type);\n\t\tthis.setData(params.data);\n\t};\n\n\tMetaEvent.SEQUENCE   = 0x00;\n\tMetaEvent.TEXT       = 0x01;\n\tMetaEvent.COPYRIGHT  = 0x02;\n\tMetaEvent.TRACK_NAME = 0x03;\n\tMetaEvent.INSTRUMENT = 0x04;\n\tMetaEvent.LYRIC      = 0x05;\n\tMetaEvent.MARKER     = 0x06;\n\tMetaEvent.CUE_POINT  = 0x07;\n\tMetaEvent.CHANNEL_PREFIX = 0x20;\n\tMetaEvent.END_OF_TRACK   = 0x2f;\n\tMetaEvent.TEMPO      = 0x51;\n\tMetaEvent.SMPTE      = 0x54;\n\tMetaEvent.TIME_SIG   = 0x58;\n\tMetaEvent.KEY_SIG    = 0x59;\n\tMetaEvent.SEQ_EVENT  = 0x7f;\n\n\t/**\n\t * Set the time for the event in ticks since the previous event.\n\t *\n\t * @param {number} ticks - The number of ticks since the previous event. May\n\t * be zero.\n\t */\n\tMetaEvent.prototype.setTime = function(ticks) {\n\t\tthis.time = Util.translateTickTime(ticks || 0);\n\t};\n\n\t/**\n\t * Set the type of the event. Must be one of the event codes on MetaEvent.\n\t *\n\t * @param {number} t - Event type.\n\t */\n\tMetaEvent.prototype.setType = function(t) {\n\t\tthis.type = t;\n\t};\n\n\t/**\n\t * Set the data associated with the event. May be a string or array of byte\n\t * values.\n\t *\n\t * @param {string|Array} d - Event data.\n\t */\n\tMetaEvent.prototype.setData = function(d) {\n\t\tthis.data = d;\n\t};\n\n\t/**\n\t * Serialize the event to an array of bytes.\n\t *\n\t * @returns {Array} The array of serialized bytes.\n\t */\n\tMetaEvent.prototype.toBytes = function() {\n\t\tif (!this.type) {\n\t\t\tthrow new Error(\"Type for meta-event not specified.\");\n\t\t}\n\n\t\tvar byteArray = [];\n\t\tbyteArray.push.apply(byteArray, this.time);\n\t\tbyteArray.push(0xFF, this.type);\n\n\t\t// If data is an array, we assume that it contains several bytes. We\n\t\t// apend them to byteArray.\n\t\tif (Array.isArray(this.data)) {\n\t\t\tbyteArray.push(this.data.length);\n\t\t\tbyteArray.push.apply(byteArray, this.data);\n\t\t} else if (typeof this.data == 'number') {\n\t\t\tbyteArray.push(1, this.data);\n\t\t} else if (this.data !== null && this.data !== undefined) {\n\t\t\t// assume string; may be a bad assumption\n\t\t\tbyteArray.push(this.data.length);\n\t\t\tvar dataBytes = this.data.split('').map(function(x){ return x.charCodeAt(0) });\n\t\t\tbyteArray.push.apply(byteArray, dataBytes);\n\t\t} else {\n\t\t\tbyteArray.push(0);\n\t\t}\n\n\t\treturn byteArray;\n\t};\n\n\t/* ******************************************************************\n\t * Track class\n\t ****************************************************************** */\n\n\t/**\n\t * Construct a MIDI track.\n\t *\n\t * Parameters include:\n\t *  - events [optional array] - Array of events for the track.\n\t */\n\tvar Track = function(config) {\n\t\tif (!this) return new Track(config);\n\t\tvar c = config || {};\n\t\tthis.events = c.events || [];\n\t};\n\n\tTrack.START_BYTES = [0x4d, 0x54, 0x72, 0x6b];\n\tTrack.END_BYTES   = [0x00, 0xFF, 0x2F, 0x00];\n\n\t/**\n\t * Add an event to the track.\n\t *\n\t * @param {MidiEvent|MetaEvent} event - The event to add.\n\t * @returns {Track} The current track.\n\t */\n\tTrack.prototype.addEvent = function(event) {\n\t\tthis.events.push(event);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Add a note-on event to the track.\n\t *\n\t * @param {number} channel - The channel to add the event to.\n\t * @param {number|string} pitch - The pitch of the note, either numeric or\n\t * symbolic.\n\t * @param {number} [time=0] - The number of ticks since the previous event,\n\t * defaults to 0.\n\t * @param {number} [velocity=90] - The volume for the note, defaults to\n\t * DEFAULT_VOLUME.\n\t * @returns {Track} The current track.\n\t */\n\tTrack.prototype.addNoteOn = Track.prototype.noteOn = function(channel, pitch, time, velocity) {\n\t\tthis.events.push(new MidiEvent({\n\t\t\ttype: MidiEvent.NOTE_ON,\n\t\t\tchannel: channel,\n\t\t\tparam1: Util.ensureMidiPitch(pitch),\n\t\t\tparam2: velocity || DEFAULT_VOLUME,\n\t\t\ttime: time || 0,\n\t\t}));\n\t\treturn this;\n\t};\n\n\t/**\n\t * Add a note-off event to the track.\n\t *\n\t * @param {number} channel - The channel to add the event to.\n\t * @param {number|string} pitch - The pitch of the note, either numeric or\n\t * symbolic.\n\t * @param {number} [time=0] - The number of ticks since the previous event,\n\t * defaults to 0.\n\t * @param {number} [velocity=90] - The velocity the note was released,\n\t * defaults to DEFAULT_VOLUME.\n\t * @returns {Track} The current track.\n\t */\n\tTrack.prototype.addNoteOff = Track.prototype.noteOff = function(channel, pitch, time, velocity) {\n\t\tthis.events.push(new MidiEvent({\n\t\t\ttype: MidiEvent.NOTE_OFF,\n\t\t\tchannel: channel,\n\t\t\tparam1: Util.ensureMidiPitch(pitch),\n\t\t\tparam2: velocity || DEFAULT_VOLUME,\n\t\t\ttime: time || 0,\n\t\t}));\n\t\treturn this;\n\t};\n\n\t/**\n\t * Add a note-on and -off event to the track.\n\t *\n\t * @param {number} channel - The channel to add the event to.\n\t * @param {number|string} pitch - The pitch of the note, either numeric or\n\t * symbolic.\n\t * @param {number} dur - The duration of the note, in ticks.\n\t * @param {number} [time=0] - The number of ticks since the previous event,\n\t * defaults to 0.\n\t * @param {number} [velocity=90] - The velocity the note was released,\n\t * defaults to DEFAULT_VOLUME.\n\t * @returns {Track} The current track.\n\t */\n\tTrack.prototype.addNote = Track.prototype.note = function(channel, pitch, dur, time, velocity) {\n\t\tthis.noteOn(channel, pitch, time, velocity);\n\t\tif (dur) {\n\t\t\tthis.noteOff(channel, pitch, dur, velocity);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t * Add a note-on and -off event to the track for each pitch in an array of pitches.\n\t *\n\t * @param {number} channel - The channel to add the event to.\n\t * @param {array} chord - An array of pitches, either numeric or\n\t * symbolic.\n\t * @param {number} dur - The duration of the chord, in ticks.\n\t * @param {number} [velocity=90] - The velocity of the chord,\n\t * defaults to DEFAULT_VOLUME.\n\t * @returns {Track} The current track.\n\t */\n\tTrack.prototype.addChord = Track.prototype.chord = function(channel, chord, dur, velocity) {\n\t\tif (!Array.isArray(chord) && !chord.length) {\n\t\t\tthrow new Error('Chord must be an array of pitches');\n\t\t}\n\t\tchord.forEach(function(note) {\n\t\t\tthis.noteOn(channel, note, 0, velocity);\n\t\t}, this);\n\t\tchord.forEach(function(note, index) {\n\t\t\tif (index === 0) {\n\t\t\t\tthis.noteOff(channel, note, dur);\n\t\t\t} else {\n\t\t\t\tthis.noteOff(channel, note);\n\t\t\t}\n\t\t}, this);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Set instrument for the track.\n\t *\n\t * @param {number} channel - The channel to set the instrument on.\n\t * @param {number} instrument - The instrument to set it to.\n\t * @param {number} [time=0] - The number of ticks since the previous event,\n\t * defaults to 0.\n\t * @returns {Track} The current track.\n\t */\n\tTrack.prototype.setInstrument = Track.prototype.instrument = function(channel, instrument, time) {\n\t\tthis.events.push(new MidiEvent({\n\t\t\ttype: MidiEvent.PROGRAM_CHANGE,\n\t\t\tchannel: channel,\n\t\t\tparam1: instrument,\n\t\t\ttime: time || 0,\n\t\t}));\n\t\treturn this;\n\t};\n\n\t/**\n\t * Set the tempo for the track.\n\t *\n\t * @param {number} bpm - The new number of beats per minute.\n\t * @param {number} [time=0] - The number of ticks since the previous event,\n\t * defaults to 0.\n\t * @returns {Track} The current track.\n\t */\n\tTrack.prototype.setTempo = Track.prototype.tempo = function(bpm, time) {\n\t\tthis.events.push(new MetaEvent({\n\t\t\ttype: MetaEvent.TEMPO,\n\t\t\tdata: Util.mpqnFromBpm(bpm),\n\t\t\ttime: time || 0,\n\t\t}));\n\t\treturn this;\n\t};\n\n\t/**\n\t * Serialize the track to an array of bytes.\n\t *\n\t * @returns {Array} The array of serialized bytes.\n\t */\n\tTrack.prototype.toBytes = function() {\n\t\tvar trackLength = 0;\n\t\tvar eventBytes = [];\n\t\tvar startBytes = Track.START_BYTES;\n\t\tvar endBytes   = Track.END_BYTES;\n\n\t\tvar addEventBytes = function(event) {\n\t\t\tvar bytes = event.toBytes();\n\t\t\ttrackLength += bytes.length;\n\t\t\teventBytes.push.apply(eventBytes, bytes);\n\t\t};\n\n\t\tthis.events.forEach(addEventBytes);\n\n\t\t// Add the end-of-track bytes to the sum of bytes for the track, since\n\t\t// they are counted (unlike the start-of-track ones).\n\t\ttrackLength += endBytes.length;\n\n\t\t// Makes sure that track length will fill up 4 bytes with 0s in case\n\t\t// the length is less than that (the usual case).\n\t\tvar lengthBytes = Util.str2Bytes(trackLength.toString(16), 4);\n\n\t\treturn startBytes.concat(lengthBytes, eventBytes, endBytes);\n\t};\n\n\t/* ******************************************************************\n\t * File class\n\t ****************************************************************** */\n\n\t/**\n\t * Construct a file object.\n\t *\n\t * Parameters include:\n\t *  - ticks [optional number] - Number of ticks per beat, defaults to 128.\n\t *    Must be 1-32767.\n\t *  - tracks [optional array] - Track data.\n\t */\n\tvar File = function(config){\n\t\tif (!this) return new File(config);\n\n\t\tvar c = config || {};\n\t\tif (c.ticks) {\n\t\t\tif (typeof c.ticks !== 'number') {\n\t\t\t\tthrow new Error('Ticks per beat must be a number!');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (c.ticks <= 0 || c.ticks >= (1 << 15) || c.ticks % 1 !== 0) {\n\t\t\t\tthrow new Error('Ticks per beat must be an integer between 1 and 32767!');\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.ticks = c.ticks || 128;\n\t\tthis.tracks = c.tracks || [];\n\t};\n\n\tFile.HDR_CHUNKID     = \"MThd\";             // File magic cookie\n\tFile.HDR_CHUNK_SIZE  = \"\\x00\\x00\\x00\\x06\"; // Header length for SMF\n\tFile.HDR_TYPE0       = \"\\x00\\x00\";         // Midi Type 0 id\n\tFile.HDR_TYPE1       = \"\\x00\\x01\";         // Midi Type 1 id\n\n\t/**\n\t * Add a track to the file.\n\t *\n\t * @param {Track} track - The track to add.\n\t */\n\tFile.prototype.addTrack = function(track) {\n\t\tif (track) {\n\t\t\tthis.tracks.push(track);\n\t\t\treturn this;\n\t\t} else {\n\t\t\ttrack = new Track();\n\t\t\tthis.tracks.push(track);\n\t\t\treturn track;\n\t\t}\n\t};\n\n\t/**\n\t * Serialize the MIDI file to an array of bytes.\n\t *\n\t * @returns {Array} The array of serialized bytes.\n\t */\n\tFile.prototype.toBytes = function() {\n\t\tvar trackCount = this.tracks.length.toString(16);\n\n\t\t// prepare the file header\n\t\tvar bytes = File.HDR_CHUNKID + File.HDR_CHUNK_SIZE;\n\n\t\t// set Midi type based on number of tracks\n\t\tif (parseInt(trackCount, 16) > 1) {\n\t\t\tbytes += File.HDR_TYPE1;\n\t\t} else {\n\t\t\tbytes += File.HDR_TYPE0;\n\t\t}\n\n\t\t// add the number of tracks (2 bytes)\n\t\tbytes += Util.codes2Str(Util.str2Bytes(trackCount, 2));\n\t\t// add the number of ticks per beat (currently hardcoded)\n\t\tbytes += String.fromCharCode((this.ticks/256),  this.ticks%256);;\n\n\t\t// iterate over the tracks, converting to bytes too\n\t\tthis.tracks.forEach(function(track) {\n\t\t\tbytes += Util.codes2Str(track.toBytes());\n\t\t});\n\n\t\treturn bytes;\n\t};\n\n\t/* ******************************************************************\n\t * Exports\n\t ****************************************************************** */\n\n\texported.Util = Util;\n\texported.File = File;\n\texported.Track = Track;\n\texported.Event = MidiEvent;\n\texported.MetaEvent = MetaEvent;\n\n})( Midi );\n\nif ( true && module !== null) {\n\tmodule.exports = Midi;\n} else if ( true && exports !== null) {\n\texports = Midi;\n} else {\n\tthis.Midi = Midi;\n}\n\n\n//# sourceURL=webpack://Synthesizer/./src/js/jsmidgen.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/SheetMusic.js");
/******/ 	
/******/ })()
;